/*
 * Copyright (C) 2012-2019 Gregory Hedlund & Yvan Rose
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at

 *    http://www.apache.org/licenses/LICENSE-2.0

 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
 
/**
 * Grammar for parsing Unicode IPA transcriptions in a list of
 * discrete IPA Elements.
 */
grammar UnicodeIPA;
// Lexer Rules are generated by transforming the ipa.xml file using the file src/main/resources/xml/xslt/ipa2lexer.xsl
import ipa;

start
	: transcription EOF
	;

transcription 
	: transcription word_boundary transcription
	| word
	| pause
	;

word_boundary
	: WS		# WhiteSpace
	;

word
	: (ipa_element sctype?)+
	;	

ipa_element
	: stress
	| phone
	| syllable_boundary
	| word_net_marker
	| intra_word_pause
	| phonex_matcher_ref
	| alignment
	;
	
stress 
	: PRIMARY_STRESS	# PrimaryStress
	| SECONDARY_STRESS 	# SecondaryStress
	;

phone 
    : phone LIGATURE phone												# CompoundPhone
	| prefix_section? base_phone COMBINING_DIACRITIC* suffix_section?	# SinglePhone
	;
	
base_phone
	: CONSONANT 
	| VOWEL 
	| GLIDE 
	| COVER_SYMBOL
	;

prefix_section
	: prefix_diacritic+
	;
	
prefix_diacritic
	: PREFIX_DIACRITIC COMBINING_DIACRITIC*					# PrefixDiacritic
	| SUFFIX_DIACRITIC ROLE_REVERSAL COMBINING_DIACRITIC*	# PrefixDiacriticRoleReversed
	| SUFFIX_DIACRITIC COMBINING_DIACRITIC* LIGATURE		# PrefixDiacriticLigature
	;

suffix_section
	: phone_length? suffix_diacritic+
	;

suffix_diacritic
	: SUFFIX_DIACRITIC COMBINING_DIACRITIC*					# SuffixDiacritic
	| PREFIX_DIACRITIC ROLE_REVERSAL COMBINING_DIACRITIC*	# SuffixDiacriticRoleReversed
	| LIGATURE PREFIX_DIACRITIC COMBINING_DIACRITIC*		# SuffixDiacriticLigature
	| TONE													# Tone
	;

phone_length
	: HALF_LONG
	| LONG
	| LONG HALF_LONG
	| LONG LONG
	| LONG LONG HALF_LONG
	| LONG LONG LONG
	;

syllable_boundary
	: PERIOD		# SyllableBoundary
	| MINOR_GROUP 	# MinorGroup
	| MAJOR_GROUP 	# MajorGroup
	;

word_net_marker
	: PLUS			# CompoundWordMarker
	| SANDHI		# SandhiMarker
	;

intra_word_pause
	: INTRA_WORD_PAUSE
	;
	
/**
 * Phonex matcher references are used in find and replace expressions.
 */
phonex_matcher_ref
	: BACKSLASH NUMBER		# GroupNumberRef
	| BACKSLASH GROUP_NAME	# GroupNameRef
	;

sctype
	: SC_TYPE
	;

pause 
	: OPEN_PAREN pause_length CLOSE_PAREN
	;

pause_length
	: PERIOD				# ShortPause
	| PERIOD PERIOD			# MeduimPause
	| PERIOD PERIOD PERIOD	# LongPause
	;
	
/**
 * Alignment character
 */
alignment
	: ALIGNMENT
	;

/* Tokens */
GROUP_NAME
	: OPEN_BRACE [a-zA-Z][a-zA-Z0-9_]* CLOSE_BRACE
	;
	
WS
	: [ \t\r\n]+
	;
