<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
    xmlns="https://phon.ca/ns/opgraph_query"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:og="http://gedge.ca/ns/opgraph" 
    xmlns:qry="http://phon.ling.mun.ca/ns/query"
    xmlns:rpt="http://phon.ling.mun.ca/ns/report"
    
    targetNamespace="https://phon.ca/ns/opgraph_query"
    elementFormDefault="qualified">
    
    <xs:import namespace="http://gedge.ca/ns/opgraph" 
        schemaLocation="https://raw.githubusercontent.com/ghedlund/opgraph/master/xml-io/src/main/resources/META-INF/schemas/opgraph.xsd"/>
    <xs:import namespace="http://phon.ling.mun.ca/ns/query"
        schemaLocation="../../../../../../query/src/main/resources/xml/xsd/query.xsd"/>
    <xs:import namespace="http://phon.ling.mun.ca/ns/report"
        schemaLocation="../../../../../../query/src/main/resources/xml/xsd/report.xsd"/>
    
    <xs:complexType name="QueryType" mixed="false">
        <xs:annotation>
            <xs:documentation>Extension of opgraph node type to include query xml</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="og:AbstractNodeType">
                <xs:sequence>
                    <xs:element ref="qry:query" minOccurs="0" maxOccurs="1"/>
                    <xs:element ref="og:extensions" minOccurs="0" maxOccurs="1"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    
    <xs:element name="queryNode" type="QueryType" substitutionGroup="og:abstract_node"/>
    
    <xs:complexType name="ReportDesignType" mixed="false">
        <xs:annotation>
            <xs:documentation>Extension of opgraph node type to include report design xml</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="og:AbstractNodeType">
                <xs:sequence>
                    <xs:element ref="rpt:report-design" minOccurs="0" maxOccurs="1"/>
                    <xs:element ref="og:extensions" minOccurs="0" maxOccurs="1"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    
    <xs:element name="reportDesignNode" type="ReportDesignType" substitutionGroup="og:abstract_node"/>
    
    <!-- SortNodeSettings -->
    <xs:complexType name="SortNodeSettingsType" mixed="false">
        <xs:annotation>
            <xs:documentation>Storage for sort node.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="groupBy" type="xs:string" minOccurs="0" maxOccurs="1"/>
            <xs:element name="sortBy" type="SortByType" minOccurs="1" maxOccurs="3"/>
        </xs:sequence>
    </xs:complexType>
      
    <xs:complexType name="SortByType" mixed="false" abstract="true">
        <xs:annotation>
            <xs:documentation>Column sorting options</xs:documentation>
        </xs:annotation>
        <xs:attribute name="type" type="sortType" use="required"/>
        <xs:attribute name="column" type="xs:string" use="required"/>
    </xs:complexType>
    
    <xs:complexType name="PlainSortBy" mixed="false">
        <xs:complexContent>
            <xs:extension base="SortByType">
                <xs:attribute name="order" type="sortOrderType" default="ascending"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    
    <xs:complexType name="IPASortBy" mixed="false">
        <xs:complexContent>
            <xs:extension base="SortByType">
                <xs:sequence>
                    <xs:element name="order" type="featureOrderType" minOccurs="1" maxOccurs="3"/>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
   
    <xs:simpleType name="sortType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="plain"/>
            <xs:enumeration value="ipa"/>
        </xs:restriction>
    </xs:simpleType>
    
    <xs:simpleType name="sortOrderType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="ascending"/>
            <xs:enumeration value="descending"/>
        </xs:restriction>
    </xs:simpleType>
    
    <xs:simpleType name="featureOrderType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="place"/>
            <xs:enumeration value="manner"/>
            <xs:enumeration value="voicing"/>
        </xs:restriction>
    </xs:simpleType>
    
</xs:schema>
