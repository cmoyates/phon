<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<opgraph xmlns="http://gedge.ca/ns/opgraph" xmlns:nes="https://www.phon.ca/ns/node_editor" xmlns:oga="http://gedge.ca/ns/opgraph-app" xmlns:opqry="https://phon.ca/ns/opgraph_query">
    <graph id="root">
        <node id="38f64e4b" type="class:ca.phon.app.opgraph.nodes.query.QueryHistoryNode">
            <extensions>
                <oga:meta x="15" y="15"/>
            </extensions>
        </node>
        <node id="5d6fcd9" name="Query" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
            <extensions>
                <oga:settings>
                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.db.Query]]></oga:property>
                    <oga:property key="contextKey"/>
                </oga:settings>
                <oga:meta x="194" y="15"/>
            </extensions>
        </node>
        <node id="24df8935" name="UUID" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
            <extensions>
                <oga:settings>
                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.util.UUID]]></oga:property>
                    <oga:property key="contextKey"/>
                </oga:settings>
                <oga:meta x="381" y="15"/>
            </extensions>
        </node>
        <node id="7b3efe07" name="UUID#toString()" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
            <extensions>
                <oga:settings>
                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[toString()]]></oga:property>
                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.util.UUID]]></oga:property>
                </oga:settings>
                <oga:meta x="194" y="218"/>
            </extensions>
        </node>
        <link dest="5d6fcd9" destField="obj" source="38f64e4b" sourceField="query"/>
        <link dest="24df8935" destField="obj" source="5d6fcd9" sourceField="uuID"/>
        <link dest="7b3efe07" destField="obj" source="24df8935" sourceField="obj"/>
        <extensions>
            <opqry:nodewizard type="ca.phon.app.opgraph.report.ReportWizardExtension">
                <opqry:info format="html" title="About">
                    <opqry:message/>
                </opqry:info>
                <opqry:report-template name="Report">#**
 * Phon - An open source tool for research in phonology.
 * Copyright (C) 2005 - 2017, Gregory Hedlund &lt;ghedlund@mun.ca&gt; and Yvan Rose &lt;yrose@mun.ca&gt;
 * Dept of Linguistics, Memorial University &lt;https://phon.ca&gt;
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.
 *#
#foreach($bufferName in $bufferNames)
#if(!$bufferName.equals("Report"))
#h2($bufferName)

#if($tables.containsKey($bufferName))
#printTable($tables[$bufferName], [])
#else
$buffers[$bufferName]
#end
#end

#end
</opqry:report-template>
            </opqry:nodewizard>
            <nes:settings type="ca.phon.app.opgraph.report.ReportOpGraphEditorModel"/>
        </extensions>
    </graph>
</opgraph>
