<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<param_history xmlns="https://www.phon.ca/param_history" script="Phones" hash="a29c5d856c2661882ea3c62d458fe0950f00f20a">
    <param_set date="2018-07-19T16:03:04.265-02:30" hash="9a58223a60084744ca5dd8e8c55a29ecce97da60" name="Any Vowel">
        <param id="filters.searchBy.searchBy">Word</param>
        <param id="filters.primary.filter">\v</param>
    </param_set>
    <param_set date="2018-07-19T16:03:09.344-02:30" hash="652a10abdbc24fb9b13d21c915ae41c769fea33c" name="Any Consonant">
        <param id="filters.searchBy.searchBy">Word</param>
        <param id="filters.primary.filter">\c</param>
    </param_set>
    <param_set date="2018-07-19T16:03:11.888-02:30" hash="fdf21e76b85012bc318d7c81bf950ac895bf2268" name="Any Phone">
        <param id="filters.searchBy.searchBy">Word</param>
        <param id="filters.primary.filter">\w</param>
    </param_set>
    <param_set date="2018-07-19T16:05:43.607-02:30" hash="e81a5ac6da13bf1c1f2d73f5fadfc6453f28378d" name="Standalone Consonants">
        <param id="filters.searchBy.searchBy">Word</param>
        <param id="filters.primary.filter">// Standalone Consonants
// Look-behind '(?&lt;' and match beginning of input '^'
// followed by an optional stress marker '\s?'
(?&lt;^\s?)
// Match a consonant '(\c)' followed by end of input '$'
(\c)$</param>
    </param_set>
    <param_set date="2018-07-19T16:06:17.653-02:30" hash="542df66637dd32d8ff4fa3fb3ed23d587bdfb3af" name="Initial Singleton Consonants">
        <param id="filters.searchBy.searchBy">Word</param>
        <param id="filters.primary.filter">// Initial Singleton Consonants
// Look-behind '(?&lt;' and match beginning of input '^'
// followed by an optional stress marker '\s?'
(?&lt;^\s?)
// Match a consonant (\c)
(\c)
// Look-ahead '(?&gt;' and match a vowel
(?&gt;\v)</param>
    </param_set>
    <param_set date="2018-07-19T16:07:41.323-02:30" hash="72f1da2bed199e48383c2b6cd5ae26d9fc0354e3" name="Medial Singleton Consonants">
        <param id="filters.searchBy.searchBy">Word</param>
        <param id="filters.primary.filter">// Medial Singleton Consonants
// Look-behind '(?&lt;' and match a vowel '\v'
// followed by an optional stress marker '\s?'
(?&lt;\v\s?)
// Match a consonant
(\c)
// Look-ahead '(?&gt;' and match an optional stress maker and vowel
(?&gt;\s?\v)</param>
    </param_set>
    <param_set date="2018-07-19T16:11:45.540-02:30" hash="7acb25bc2404b4a608df36321de13a172339f99c" name="Final Singleton Consonants">
        <param id="filters.searchBy.searchBy">Word</param>
        <param id="filters.primary.filter">// Final Singleton Consonants
// Look-behind '(?&lt;' and match a vowel '\v'
(?&lt;\v)
// Match a consonant '(\c)' followed by end of input '$'
(\c)$</param>
    </param_set>
    <param_set date="2018-07-19T16:11:45.540-02:30" hash="c70c7fc7015e132540b01434dda9ed078d160a65" name="Singleton Consonants">
        <param id="filters.searchBy.searchBy">Word</param>
        <param id="filters.primary.filter">// Singleton Consonants
// The double pipe operator will combine results of independent expressions
// Standalone Consonants
(?&lt;^\s?)(\c)$ ||
// Initial Consonants
(?&lt;^\s?)(\c)(?&gt;\v) ||
// Medial Consonants
(?&lt;\v\s?)(\c)(?&gt;\s?\v) ||
// Final Consonants
(?&lt;\v)(\c)$</param>
    </param_set>
    <param_set date="2018-07-19T16:11:45.540-02:30" hash="5f48c55b85f7f9cb446d8026c5c928aba8f7ca61" name="Singleton Onsets">
        <param id="filters.searchBy.searchBy">Word</param>
        <param id="filters.primary.filter">// Singleton Onsets
// The double pipe operator will combine results of independent expressions
// Standalone Onsets
(?&lt;^\s?)(\c:O:E)$ || 
// All other Singleton Onsets
(?&lt;\S)(\c:O)(?&gt;.:N)</param>
    </param_set>
    <param_set date="2018-07-19T16:11:45.540-02:30" hash="7312e36946c08495b9a5e148359659732a6506d9" name="Singleton Codas">
        <param id="filters.searchBy.searchBy">Word</param>
        <param id="filters.primary.filter">// Singleton Codas
// The double pipe operator will combine results of independent expressions
// Medial Singleton Codas
(?&lt;.:N)(\c:C)(?&gt;\s? (\c:O | .:N)) ||
// Final Singleton Codas
(?&lt;.:N)(\c:C)$</param>
    </param_set>
    <param_set date="2018-07-19T16:11:45.540-02:30" hash="14cdcda73ed3c622b9e67fe5d74be9b37379f570" name="Initial Consonant Clusters">
        <param id="filters.searchBy.searchBy">Word</param>
        <param id="filters.primary.filter">// Initial Consonant Clusters
// Look-behind '(?&lt;' and match beginning of input '^'
// followed by an optional stress marker '\s?'
(?&lt;^\s?)
// Match a 2 or more consonants '(\c&lt;2,&gt;)'
(\c&lt;2,&gt;)
// Look-ahead '(?&gt;' and match an optional stress marker '\s?' and vowel '\v'
(?&gt;\s?\v)</param>
    </param_set>
    <param_set date="2018-07-19T16:11:45.540-02:30" hash="0ec9719ba9f39aef1e586606ca0e61b86c7af4c5" name="Medial Consonant Clusters">
        <param id="filters.searchBy.searchBy">Word</param>
        <param id="filters.primary.filter">// Medial Consonant Clusters
// Look-behind '(?&lt;' and match a vowel '\v'
// followed by an optional stress marker '\s?'
(?&lt;\v\s?)
// Match a 2 or more consonants '(\c&lt;2,&gt;)'
(\c&lt;2,&gt;)
// Look-ahead '(?&gt;' and match an optional stress marker '\s?' and vowel '\v'
(?&gt;\s?\v)</param>
    </param_set>
    <param_set date="2018-07-19T16:11:45.540-02:30" hash="a3c4017a23bdec6f2ea6d18da13e102585e11961" name="Final Consonant Clusters">
        <param id="filters.searchBy.searchBy">Word</param>
        <param id="filters.primary.filter">// Final Consonant Clusters
// Look-behind '(?&lt;' and match a vowel '\v'
// followed by an optional stress marker '\s?'
(?&lt;\v\s?)
// Match a 2 or more consonants '(\c&lt;2,&gt;)'
// followed by end of input '$'
(\c&lt;2,&gt;)$</param>
    </param_set>
    <param_set date="2018-07-19T16:11:45.540-02:30" hash="dae70b267b2b895e3b62cb14df956009cd0ddfe0" name="Heterosyllabic Consonant Clusters">
        <param id="filters.searchBy.searchBy">Word</param>
        <param id="filters.primary.filter">// Heterosyllabic Consonant Clusters
// match one or more consonants '\c+'
\c+
// followed by a syllable boundary '\S' (includes implicit boundaries)
\S
// followed by one or more consonants '\c+'
\c+</param>
    </param_set>
    <param_set date="2018-07-19T16:11:45.540-02:30" hash="343d5af8131f6b3053789069dee9f68e3f9cb894" name="Consonant Clusters">
        <param id="filters.searchBy.searchBy">Word</param>
        <param id="filters.primary.filter">// Consonant Clusters
// The double pipe operator will combine results of independent expressions
// Initial/medial Consonant Clusters
(\c&lt;2,&gt;)(?&gt;\s?\v) ||
// Final Consonant Clusters
(\c&lt;2,&gt;)$ ||
// Heterosyllabic Clusters
(\c+[\s\.]\c+)</param>
    </param_set>
    <param_set date="2018-11-13T05:09:32.903-03:30" hash="57dc2256a25f00fe9e2deb1907f22fd4013dbeb7" name="Syllable-initial Clusters">
        <param id="filters.searchBy.searchBy">Word</param>
        <param id="filters.primary.filter">// Syllable-initial Clusters
// Includes left appendices ':L', onsets ':O' and OEHS ':E'
(?&lt;^\s?)(\c:L:O:E&lt;2,&gt;) ||
(?&lt;\v\s?)(\c:L:O:E&lt;2,&gt;)</param>
    </param_set>
    <param_set date="2018-11-13T05:22:28.370-03:30" hash="59968c58bb9552a5cc6d5eb5557bb1986071227b" name="Syllable-final Clusters">
        <param id="filters.searchBy.searchBy">Word</param>
        <param id="filters.primary.filter">// Syllable-final Clusters
// Includes right appendices ':R' and codas ':C'
(\c:C:R&lt;2,&gt;)$ ||
(\c:C:R&lt;2,&gt;)(?&gt;\s?\c:O)</param>
    </param_set>
    <param_set date="2018-11-13T05:24:35.035-03:30" hash="4f5257482b5b571eb1e06334d204a2714c4141a8" name="Tautosyllabic Consonant Clusters">
        <param id="filters.searchBy.searchBy">Word</param>
        <param id="filters.primary.filter">^(\c:L:O:E&lt;2,&gt;) ||
(?&lt;\v\s?)(\c:L:O:E&lt;2,&gt;) ||
(\c:C:R&lt;2,&gt;)$ ||
(\c:C:R&lt;2,&gt;)(?&gt;\s?\c:O)</param>
    </param_set>
    <param_set date="2018-07-25T10:54:08.672-02:30" hash="a7f2c01b2d79b5a2485690d10a46099a16501277" name="Syllables (short)">
        <param id="filters.searchBy.searchBy">Word</param>
        <param id="filters.primary.filter">// Syllables (short)
// Query all syllables, store each section in a named group
// Stress
(S=\s)?
// Onset
(O=\c:L:O&lt;,5&gt;)
// Rhyme
(R=
	// Nucleus
	(N=.:D&lt;2&gt; | .:N)
	// Coda
	(C=\c:C:R&lt;,5&gt;)
)</param>
    </param_set>
    <param_set date="2018-07-25T11:03:13.584-02:30" hash="4af1b0ac7f199eca0c76611792c015e4c291d030" name="Syllables (expanded)">
        <param id="filters.searchBy.searchBy">Word</param>
        <param id="filters.primary.filter">// Syllables (expanded)
// Query all syllables, store each constituent in a named group
// Stress
(S=\s)?
// Onset
(O=
	(O1=\c:L:O)(O2=\c:L:O)(O3=\c:L:O)(O4=\c:O)(O5=\c:O) 
	| (\c:L:O)(\c:L:O)(\c:O)(\c:O)
	| (\c:L:O)(\c:O)(\c:O)
	| (\c:O)(\c:O) 
	| (\c:O:E)
)?
// Rhyme
(R=
	// Nucleus
	(N=
		(N1=.:D)(N2=.:D) | (.:N)
	)
	// Coda
	(C=
		(C1=\c:C)(C2=\c:C)(C3=\c:C:R)(C4=\c:C:R)(C5=\c:C:R)
		| (\c:C)(\c:C)(\c:C:R)(\c:C:R)
		| (\c:C)(\c:C)(\c:C:R)
		| (\c:C)(\c:C) 
		| (\c:C)
	)?
)</param>
    </param_set>
</param_history>
