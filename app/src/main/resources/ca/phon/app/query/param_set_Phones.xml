<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<param_history xmlns="https://www.phon.ca/param_history" script="Phones" hash="b1f9038d9995179d95a8cd80e1efa17eb48b4580">
    <param_set date="2018-07-19T16:03:04.265-02:30" hash="fde8cc01a95d2ee3e9465808943e8b603f310879" name="Any Vowel">
        <param id="filters.searchBy.searchBy">Word</param>
        <param id="filters.primary.filter">\v</param>
    </param_set>
    <param_set date="2018-07-19T16:03:09.344-02:30" hash="e1cdef92659ba0a1d5b3b81156b897e1219dc042" name="Any Consonant">
        <param id="filters.searchBy.searchBy">Word</param>
        <param id="filters.primary.filter">\c</param>
    </param_set>
    <param_set date="2018-07-19T16:03:11.888-02:30" hash="b4fa35c4b42c093ce8505e1285caf8b4ce419585" name="Any Phone">
        <param id="filters.searchBy.searchBy">Word</param>
        <param id="filters.primary.filter">\w</param>
    </param_set>
    <param_set date="2018-07-19T16:05:43.607-02:30" hash="681d5268de1cbeeda9b169595d26b0277ae0671f" name="Standalone Consonants">
        <param id="filters.searchBy.searchBy">Word</param>
        <param id="filters.primary.filter">// Standalone Consonants
// Look-behind '(?&lt;' and match beginning of input '^'
// followed by an optional stress marker '\s?'
(?&lt;^\s?)
// Match a consonant '(\c)' followed by end of input '$'
(\c)$</param>
    </param_set>
    <param_set date="2018-07-19T16:06:17.653-02:30" hash="6d72dd6dba1497f366edc4836e5f7e8e747afd27" name="Initial Singleton Consonants">
        <param id="filters.searchBy.searchBy">Word</param>
        <param id="filters.primary.filter">// Initial Singleton Consonants
// Look-behind '(?&lt;' and match beginning of input '^'
// followed by an optional stress marker '\s?'
(?&lt;^\s?)
// Match a consonant (\c)
(\c)
// Look-ahead '(?&gt;' and match a vowel
(?&gt;\v)</param>
    </param_set>
    <param_set date="2018-07-19T16:07:41.323-02:30" hash="14f5fe5b196f677f78d336a3dbb35396df683480" name="Medial Singleton Consonants">
        <param id="filters.searchBy.searchBy">Word</param>
        <param id="filters.primary.filter">// Medial Singleton Consonants
// Look-behind '(?&lt;' and match a vowel '\v'
// followed by an optional stress marker '\s?'
(?&lt;\v\s?)
// Match a consonant
(\c)
// Look-ahead '(?&gt;' and match an optional stress maker and vowel
(?&gt;\s?\v)</param>
    </param_set>
    <param_set date="2018-07-19T16:11:45.540-02:30" hash="c76f97bfae143f8e9085d9cb8dd9015e02b42e18" name="Final Singleton Consonants">
        <param id="filters.searchBy.searchBy">Word</param>
        <param id="filters.primary.filter">// Final Singleton Consonants
// Look-behind '(?&lt;' and match a vowel '\v'
(?&lt;\v)
// Match a consonant '(\c)' followed by end of input '$'
(\c)$</param>
    </param_set>
    <param_set date="2018-07-19T16:11:45.540-02:30" hash="de62674e801ff905ff90d35ce307a116b32fef3d" name="Singleton Consonants">
        <param id="filters.searchBy.searchBy">Word</param>
        <param id="filters.primary.filter">// Singleton Consonants
// The double pipe operator will combine results of independent expressions
// Standalone Consonants
(?&lt;^\s?)(\c)$ ||
// Initial Consonants
(?&lt;^\s?)(\c)(?&gt;\v) ||
// Medial Consonants
(?&lt;\v\s?)(\c)(?&gt;\s?\v) ||
// Final Consonants
(?&lt;\v)(\c)$</param>
    </param_set>
    <param_set date="2018-07-19T16:11:45.540-02:30" hash="dacd306a8f43b6c5948575bc9b12ef9b4f941387" name="Singleton Onsets">
        <param id="filters.searchBy.searchBy">Word</param>
        <param id="filters.primary.filter">// Singleton Onsets
// The double pipe operator will combine results of independent expressions
// Standalone Onsets
(?&lt;^\s?)(\c:O:E)$ || 
// All other Singleton Onsets
(?&lt;\S)(\c:O)(?&gt;\v)</param>
    </param_set>
    <param_set date="2018-07-19T16:11:45.540-02:30" hash="939014bbf31d7ee613a3e34ecca5d952c77911e7" name="Singleton Codas">
        <param id="filters.searchBy.searchBy">Word</param>
        <param id="filters.primary.filter">// Singleton Codas
// The double pipe operator will combine results of independent expressions
// Medial Singleton Codas
(?&lt;\v)(\c:C)(?&gt;\s? (\c:O | \v)) ||
// Final Singleton Codas
(?&lt;\v)(\c:C)$</param>
    </param_set>
    <param_set date="2018-07-19T16:11:45.540-02:30" hash="3b32544563f0e2eab0f242af4ca8fe2431f111fb" name="Initial Consonant Clusters">
        <param id="filters.searchBy.searchBy">Word</param>
        <param id="filters.primary.filter">// Initial Consonant Clusters
// Look-behind '(?&lt;' and match beginning of input '^'
// followed by an optional stress marker '\s?'
(?&lt;^\s?)
// Match a 2 or more consonants '(\c&lt;2,&gt;)'
(\c&lt;2,&gt;)
// Look-ahead '(?&gt;' and match an optional stress marker '\s?' and vowel '\v'
(?&gt;\s?\v)</param>
    </param_set>
    <param_set date="2018-07-19T16:11:45.540-02:30" hash="d841948793f112b774edad956cb29364f44eb49a" name="Medial Consonant Clusters">
        <param id="filters.searchBy.searchBy">Word</param>
        <param id="filters.primary.filter">// Medial Consonant Clusters
// Look-behind '(?&lt;' and match a vowel '\v'
// followed by an optional stress marker '\s?'
(?&lt;\v\s?)
// Match a 2 or more consonants '(\c&lt;2,&gt;)'
(\c&lt;2,&gt;)
// Look-ahead '(?&gt;' and match an optional stress marker '\s?' and vowel '\v'
(?&gt;\s?\v)</param>
    </param_set>
    <param_set date="2018-07-19T16:11:45.540-02:30" hash="6092a5ff13064d499c260338c703530fbad7b8a3" name="Final Consonant Clusters">
        <param id="filters.searchBy.searchBy">Word</param>
        <param id="filters.primary.filter">// Final Consonant Clusters
// Look-behind '(?&lt;' and match a vowel '\v'
// followed by an optional stress marker '\s?'
(?&lt;\v\s?)
// Match a 2 or more consonants '(\c&lt;2,&gt;)'
// followed by end of input '$'
(\c&lt;2,&gt;)$</param>
    </param_set>
    <param_set date="2018-07-19T16:11:45.540-02:30" hash="991d48d6b09ed83fc45d36de44a4e8a20a643ec5" name="Heterosyllabic Consonant Clusters">
        <param id="filters.searchBy.searchBy">Word</param>
        <param id="filters.primary.filter">// Heterosyllabic Consonant Clusters
// match one or more consonants '\c+'
\c+
// followed by a syllable boundary '\S' (includes implicit boundaries)
\S
// followed by one or more consonants '\c+'
\c+</param>
    </param_set>
    <param_set date="2018-07-19T16:11:45.540-02:30" hash="7716d14e4a6a60648d5b48f3b0ca503cdfe5f5d6" name="Consonant Clusters">
        <param id="filters.searchBy.searchBy">Word</param>
        <param id="filters.primary.filter">// Consonant Clusters
// The double pipe operator will combine results of independent expressions
// Initial/medial Consonant Clusters
(\c&lt;2,&gt;)(?&gt;\s?\v) ||
// Final Consonant Clusters
(\c&lt;2,&gt;)$ ||
// Heterosyllabic Clusters
(\c+[\s\.]\c+)</param>
    </param_set>
    <param_set date="2018-11-13T05:09:32.903-03:30" hash="6e83d932141742e1af4a90fe2dc81d028d777cfb" name="Tautosyllabic Onsets">
        <param id="filters.searchBy.searchBy">Word</param>
        <param id="filters.primary.filter">// Tautosyllabic Onsets
// Includes left appendices ':L', onsets ':O' and OEHS ':E'
^(\c:L:O:E&lt;2,&gt;) ||
(?&lt;\v\s?)(\c:L:O:E&lt;2,&gt;)</param>
    </param_set>
    <param_set date="2018-11-13T05:22:28.370-03:30" hash="84b0a6481bbe1e2b000344d1a2894b25771a239c" name="Tautosyllabic Codas">
        <param id="filters.searchBy.searchBy">Word</param>
        <param id="filters.primary.filter">// Tautosyllabic Codas
// Includes right appendices ':R' and codas ':C'
(\c:C:R&lt;2,&gt;)$ ||
(\c:C:R&lt;2,&gt;)(?&gt;\s?\c:O)</param>
    </param_set>
    <param_set date="2018-11-13T05:24:35.035-03:30" hash="e77a974d6c6adab2e6b2610fafbd9317a257ce47" name="Tautosyllabic Consonant Clusters">
        <param id="filters.searchBy.searchBy">Word</param>
        <param id="filters.primary.filter">^(\c:L:O:E&lt;2,&gt;) ||
(?&lt;\v\s?)(\c:L:O:E&lt;2,&gt;) ||
(\c:C:R&lt;2,&gt;)$ ||
(\c:C:R&lt;2,&gt;)(?&gt;\s?\c:O)</param>
    </param_set>
    <param_set date="2018-07-25T10:54:08.672-02:30" hash="3d9f564edbb03075d039c25428a966e421246aff" name="Syllables (short)">
        <param id="filters.searchBy.searchBy">Word</param>
        <param id="filters.primary.filter">// Syllables (short)
// Query all syllables, store each section in a named group
// Stress
(S=\s)?
// Onset
(O=\c:L:O&lt;,5&gt;)
// Rhyme
(R=
	// Nucleus
	(N=.:D&lt;2&gt; | .:N)
	// Coda
	(C=\c:C:R&lt;,5&gt;)
)</param>
    </param_set>
    <param_set date="2018-07-25T11:03:13.584-02:30" hash="1a494337cba51170e0eb3ec82043be730a2d05f1" name="Syllables (expanded)">
        <param id="filters.searchBy.searchBy">Word</param>
        <param id="filters.primary.filter">// Syllables (expanded)
// Query all syllables, store each constituent in a named group
// Stress
(S=\s)?
// Onset
(O=
	(O1=\c:L:O)(O2=\c:L:O)(O3=\c:L:O)(O4=\c:O)(O5=\c:O) 
	| (\c:L:O)(\c:L:O)(\c:O)(\c:O)
	| (\c:L:O)(\c:O)(\c:O)
	| (\c:O)(\c:O) 
	| (\c:O:E)
)?
// Rhyme
(R=
	// Nucleus
	(N=
		(N1=.:D)(N2=.:D) | (.:N)
	)
	// Coda
	(C=
		(C1=\c:C)(C2=\c:C)(C3=\c:C:R)(C4=\c:C:R)(C5=\c:C:R)
		| (\c:C)(\c:C)(\c:C:R)(\c:C:R)
		| (\c:C)(\c:C)(\c:C:R)
		| (\c:C)(\c:C) 
		| (\c:C)
	)?
)</param>
    </param_set>
</param_history>
