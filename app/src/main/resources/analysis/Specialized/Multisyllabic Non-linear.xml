<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<opgraph xmlns="https://www.phon.ca/ns/opgraph" xmlns:nes="https://www.phon.ca/ns/node_editor" xmlns:oga="https://www.phon.ca/ns/opgraph-app" xmlns:ogcn="https://www.phon.ca/ns/opgraph-common-nodes" xmlns:opqry="https://phon.ca/ns/opgraph_query" xmlns:qry="http://phon.ling.mun.ca/ns/query">
    <graph id="root">
        <node id="35a0fbb5" name="Project" type="class:ca.phon.opgraph.nodes.reflect.ObjectNode">
            <extensions>
                <oga:settings>
                    <oga:property key="contextKey">
                        <![CDATA[_project]]>
                    </oga:property>
                    <oga:property key="ca.phon.opgraph.nodes.reflect.ObjectNode.declaredClass">
                        <![CDATA[ca.phon.project.Project]]>
                    </oga:property>
                </oga:settings>
                <oga:meta x="15" y="15"/>
            </extensions>
        </node>
        <node id="6420582b" name="Selected Sessions" type="class:ca.phon.opgraph.nodes.reflect.ObjectNode">
            <extensions>
                <oga:settings>
                    <oga:property key="contextKey">
                        <![CDATA[_selectedSessions]]>
                    </oga:property>
                    <oga:property key="ca.phon.opgraph.nodes.reflect.ObjectNode.declaredClass">
                        <![CDATA[java.util.ArrayList]]>
                    </oga:property>
                </oga:settings>
                <oga:meta x="15" y="296"/>
            </extensions>
        </node>
        <node id="338df44a" name="Selected Participants" type="class:ca.phon.opgraph.nodes.reflect.ObjectNode">
            <extensions>
                <oga:settings>
                    <oga:property key="contextKey">
                        <![CDATA[_selectedParticipants]]>
                    </oga:property>
                    <oga:property key="ca.phon.opgraph.nodes.reflect.ObjectNode.declaredClass">
                        <![CDATA[java.util.ArrayList]]>
                    </oga:property>
                </oga:settings>
                <oga:meta x="15" y="397"/>
            </extensions>
        </node>
        <node id="43d39e9b67384156" name="Parameters" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
            <extensions>
                <oga:settings>
                    <oga:property key="filters.searchBy.searchBy">
                        <![CDATA[Word]]>
                    </oga:property>
                    <oga:property key="filters.word.searchByWord">
                        <![CDATA[true]]>
                    </oga:property>
                    <oga:property key="filters.primary.tier">
                        <![CDATA[Orthography]]>
                    </oga:property>
                    <oga:property key="filters.wordTiers.tiers">
                        <![CDATA[IPA Target, IPA Actual, Target Syllabification, Actual Syllabification, Phone Alignment]]>
                    </oga:property>
                    <oga:property key="filters.primary.patternFilter.filter">
                        <![CDATA[pasta]]>
                    </oga:property>
                    <oga:property key="filters.word.sectionHeader.collapsed">
                        <![CDATA[false]]>
                    </oga:property>
                    <oga:property key="filters.primary.patternFilter.filterType">
                        <![CDATA[Regular expression]]>
                    </oga:property>
                    <oga:property key="__script">
                        <![CDATA[var FeatureFilter = require("lib/FeatureFilter").FeatureFilter;
var GroupFilter = require("lib/GroupFilter").GroupFilter;
var WordFilter = require("lib/WordFilter").WordFilter;
var AlignedWordFilter = require("lib/TierFilter").TierFilter;
var TierFilter = require("lib/TierFilter").TierFilter;
var TierList = require("lib/TierList").TierList;
var AlignedGroupFilter = require("lib/TierFilter").TierFilter;
var WordFilter = require("lib/WordFilter").WordFilter;
var SyllableFilter = require("lib/SyllableFilter").SyllableFilter;
var SearchByOptions = require("lib/SearchByOptions").SearchByOptions;

/********************************
 * Setup params
 *******************************/

var filters = {
	"primary": new TierFilter("filters.primary"),
	"searchBy": new SearchByOptions("filters.searchBy"),
	"group": new GroupFilter("filters.group"),
	"groupTiers": new TierList("filters.groupTiers"),
	"word": new WordFilter("filters.word"),
	"wordTiers": new TierList("filters.wordTiers"),
	"alignedWord": new AlignedWordFilter("filters.alignedWord"),
	"alignedGroup": new AlignedGroupFilter("filters.alignedGroup")
};

var reportTitleParamInfo = {
	"id": "reportTitle",
	"title": "Report Title",
	"def": "Multisyllabic Non-linear Analysis",
	"prompt": "Enter report title"
};
var reportTitleParam;
var reportTitle = reportTitleParamInfo.def;

function setup_params(params) {
	reportTitleParam = new StringScriptParam(
			reportTitleParamInfo.id,
			reportTitleParamInfo.title,
			reportTitleParamInfo.def);
     reportTitleParam.setPrompt(reportTitleParamInfo.prompt);
	params.add(reportTitleParam);

	filters.primary.param_setup(params);
	filters.primary.set_required(true);
	
	var insertIdx = 1;

	filters.group.param_setup(params);

	var sep = new LabelScriptParam("", "<html><b>Add Aligned Groups</b></html>");
	params.add(sep);
	filters.groupTiers.param_setup(params);

	var sep2 = new LabelScriptParam("", "<html><b>Aligned Group Filter</b></html>");
	params.add(sep2);
	filters.alignedGroup.param_setup(params);

	// change default status of word filter for this query
	filters.word.searchByWord = false;
	filters.word.param_setup(params);
	
	filters.searchBy.param_setup(params, filters.word.searchByWordParam, null, insertIdx);

    var wordsep = new LabelScriptParam("", "<html><b>Add Aligned Words</b></html>");
	params.add(wordsep);
	filters.wordTiers.param_setup(params);

	var wordsep2 = new LabelScriptParam("", "<html><b>Aligned Word Filter</b></html>");
	params.add(wordsep2);
	filters.alignedWord.param_setup(params);

	var alignedWordListener = new java.beans.PropertyChangeListener {
		propertyChange: function (e) {
			var enabled = e.source.getValue(e.source.paramId);
			filters.wordTiers.tiersParam.setEnabled(enabled == true);
			filters.alignedWord.setEnabled(enabled);
		}
	};
	filters.word.searchByWordParam.addPropertyChangeListener(alignedWordListener);
	filters.alignedWord.setEnabled(filters.word.searchByWord);
}
]]>
                    </oga:property>
                </oga:settings>
                <oga:meta x="15" y="498"/>
            </extensions>
        </node>
        <opqry:queryNode id="7ca6b2ef" name="Query : Data Tiers" type="ca.phon.app.opgraph.nodes.query.QueryNode">
            <qry:query xmlns="http://phon.ling.mun.ca/ns/query" date="2020-06-03T09:26:22.043-02:30" name="Data Tiers" uuid="1efbd102-2480-4ec4-a19c-74ec531e5998">
                <script>
                    <url ref="Data Tiers" rel="stock"/>
                    <param id="filters.alignedGroup.patternFilter.filterType">Plain text</param>
                    <param id="filters.alignedWord.patternFilter.filterType">Plain text</param>
                    <param id="filters.primary.patternFilter.filter">pasta</param>
                    <param id="filters.primary.patternFilter.filterType">Regular expression</param>
                    <param id="filters.primary.tier">Orthography</param>
                    <param id="filters.searchBy.searchBy">Word</param>
                    <param id="filters.speaker.age1Comparator">equal to</param>
                    <param id="filters.speaker.age2Comparator">equal to</param>
                    <param id="filters.speaker.ageOperator">(select operator)</param>
                    <param id="filters.speaker.participantRole">(select role)</param>
                    <param id="filters.word.searchByWord">true</param>
                    <param id="filters.word.sectionHeader.collapsed">false</param>
                    <param id="filters.wordTiers.tiers">IPA Target, IPA Actual, Target Syllabification, Actual Syllabification, Phone Alignment</param>
                </script>
            </qry:query>
            <extensions>
                <oga:settings/>
                <oga:meta x="399" y="104"/>
            </extensions>
        </opqry:queryNode>
        <ogcn:macro id="7cf36fbab95146a8" name="Get Report Title" type="ca.phon.opgraph.nodes.general.MacroNode">
            <graph id="6cb10f">
                <node id="222e35ac315499b" name="String#&lt;init&gt;(String)" type="class:ca.phon.opgraph.nodes.reflect.ConstructorNode">
                    <extensions>
                        <oga:settings>
                            <oga:property key="ca.phon.opgraph.nodes.reflect.ConstructorNode.classMember">
                                <![CDATA[<init>(java.lang.String)]]>
                            </oga:property>
                            <oga:property key="ca.phon.opgraph.nodes.reflect.ConstructorNode.declaredClass">
                                <![CDATA[java.lang.String]]>
                            </oga:property>
                        </oga:settings>
                        <oga:meta x="15" y="15">
                            <oga:default for="arg1" type="java.lang.String">reportTitle</oga:default>
                        </oga:meta>
                    </extensions>
                </node>
                <node id="28e0d82b11d74348" name="Map#get(Object)" type="class:ca.phon.opgraph.nodes.reflect.MethodNode">
                    <extensions>
                        <oga:settings>
                            <oga:property key="ca.phon.opgraph.nodes.reflect.MethodNode.classMember">
                                <![CDATA[get(java.lang.Object)]]>
                            </oga:property>
                            <oga:property key="ca.phon.opgraph.nodes.reflect.MethodNode.declaredClass">
                                <![CDATA[java.util.Map]]>
                            </oga:property>
                        </oga:settings>
                        <oga:meta x="215" y="15"/>
                    </extensions>
                </node>
                <node id="c4dc7cdf49ed45ad" name="Object#toString()" type="class:ca.phon.opgraph.nodes.reflect.MethodNode">
                    <extensions>
                        <oga:settings>
                            <oga:property key="ca.phon.opgraph.nodes.reflect.MethodNode.classMember">
                                <![CDATA[toString()]]>
                            </oga:property>
                            <oga:property key="ca.phon.opgraph.nodes.reflect.MethodNode.declaredClass">
                                <![CDATA[java.lang.Object]]>
                            </oga:property>
                        </oga:settings>
                        <oga:meta x="392" y="15"/>
                    </extensions>
                </node>
                <link dest="28e0d82b11d74348" destField="arg1" source="222e35ac315499b" sourceField="value"/>
                <link dest="c4dc7cdf49ed45ad" destField="obj" source="28e0d82b11d74348" sourceField="value"/>
            </graph>
            <ogcn:published_input field="obj" name="parameters" ref="28e0d82b11d74348"/>
            <ogcn:published_output field="value" name="reportTitle" ref="c4dc7cdf49ed45ad"/>
            <extensions>
                <oga:meta x="352" y="458"/>
            </extensions>
        </ogcn:macro>
        <node id="21ca474c5a68487d" type="class:ca.phon.app.opgraph.nodes.log.PrintScriptParameters">
            <extensions>
                <oga:settings>
                    <oga:property key="excludes">
                        <![CDATA[@Participant Filter]]>
                    </oga:property>
                    <oga:property key="printOnlyChanged">
                        <![CDATA[true]]>
                    </oga:property>
                    <oga:property key="includes"/>
                </oga:settings>
                <oga:meta x="589" y="565"/>
            </extensions>
        </node>
        <node id="f95a451aa2c64ea9" type="class:ca.phon.app.opgraph.nodes.report.NewReportNode">
            <extensions>
                <oga:settings/>
                <oga:meta x="585" y="446"/>
            </extensions>
        </node>
        <ogcn:macro id="7e7f6d0b48264831" name="Report" type="ca.phon.opgraph.nodes.general.MacroNode">
            <graph id="22b5b707">
                <node id="2564dd40d5ce4021" name="project" type="class:ca.phon.opgraph.nodes.reflect.ObjectNode">
                    <extensions>
                        <oga:settings>
                            <oga:property key="ca.phon.opgraph.nodes.reflect.ObjectNode.declaredClass">
                                <![CDATA[ca.phon.project.Project]]>
                            </oga:property>
                        </oga:settings>
                        <oga:meta x="22" y="41"/>
                    </extensions>
                </node>
                <node id="a23f99c423d64c49" name="results" type="class:ca.phon.opgraph.nodes.reflect.ObjectNode">
                    <extensions>
                        <oga:settings>
                            <oga:property key="ca.phon.opgraph.nodes.reflect.ObjectNode.declaredClass">
                                <![CDATA[[Lca.phon.query.db.ResultSet;]]>
                            </oga:property>
                        </oga:settings>
                        <oga:meta x="22" y="322"/>
                    </extensions>
                </node>
                <node id="a12ca1eed6584c87" name="selectedSessions" type="class:ca.phon.opgraph.nodes.reflect.ObjectNode">
                    <extensions>
                        <oga:settings>
                            <oga:property key="ca.phon.opgraph.nodes.reflect.ObjectNode.declaredClass">
                                <![CDATA[java.util.ArrayList]]>
                            </oga:property>
                        </oga:settings>
                        <oga:meta x="22" y="423"/>
                    </extensions>
                </node>
                <node id="9a6b0aacb31f456e" name="selected participants" type="class:ca.phon.opgraph.nodes.reflect.ObjectNode">
                    <extensions>
                        <oga:settings>
                            <oga:property key="ca.phon.opgraph.nodes.reflect.ObjectNode.declaredClass">
                                <![CDATA[java.util.ArrayList]]>
                            </oga:property>
                        </oga:settings>
                        <oga:meta x="22" y="524"/>
                    </extensions>
                </node>
                <node id="12b64feb22f6497b" name="parameters" type="class:ca.phon.opgraph.nodes.reflect.ObjectNode">
                    <extensions>
                        <oga:settings>
                            <oga:property key="ca.phon.opgraph.nodes.reflect.ObjectNode.declaredClass">
                                <![CDATA[java.util.Map]]>
                            </oga:property>
                        </oga:settings>
                        <oga:meta x="22" y="625"/>
                    </extensions>
                </node>
                <node id="f910f307c92840a8" name="ReportTreeNode" type="class:ca.phon.opgraph.nodes.reflect.ObjectNode">
                    <extensions>
                        <oga:settings>
                            <oga:property key="ca.phon.opgraph.nodes.reflect.ObjectNode.declaredClass">
                                <![CDATA[ca.phon.app.opgraph.report.tree.ReportTreeNode]]>
                            </oga:property>
                        </oga:settings>
                        <oga:meta x="18" y="726"/>
                    </extensions>
                </node>
                <node id="e7eb0f6277c94cc7" type="class:ca.phon.app.opgraph.nodes.table.ResultsToTableNode">
                    <extensions>
                        <oga:settings>
                            <oga:property key="includeSessionInfo">
                                <![CDATA[true]]>
                            </oga:property>
                            <oga:property key="includeSpeakerInfo">
                                <![CDATA[true]]>
                            </oga:property>
                            <oga:property key="includeMetadata">
                                <![CDATA[true]]>
                            </oga:property>
                            <oga:property key="includeTierInfo">
                                <![CDATA[true]]>
                            </oga:property>
                        </oga:settings>
                        <oga:meta x="378" y="184"/>
                    </extensions>
                </node>
                <node id="a067a50295fe48ce" name="Split Table by Speaker" type="class:ca.phon.app.opgraph.nodes.table.TableScriptNode">
                    <output name="keySet" type="java.util.Set">Unique values from given column name</output>
                    <output name="tableMap" type="java.util.Map">Map of key -&gt; table values</output>
                    <extensions>
                        <oga:settings>
                            <oga:property key="__script">
                                <![CDATA[/*
 * Phon - An open source tool for research in phonology.
 * Copyright (C) 2005 - 2017, Gregory Hedlund <ghedlund@mun.ca> and Yvan Rose <yrose@mun.ca>
 * Dept of Linguistics, Memorial University <https://phon.ca>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

 /**
  * Split Table.js
  *
  * Script for use with ca.phon.app.opgraph.nodes.table.TableScriptNode
  *
  * Split table based on column name.  Two outputs
  * are produced, a set of keys from the column used in the filter  and a
  * map of key -> table values.
  */

var columnParamInfo = {
	"id": "columnName",
	"title": "Column Name",
	"def": "",
	"prompt": "Enter column name"
}

function setup_params(params) {
	var columnParam = new StringScriptParam(
		columnParamInfo.id,
		columnParamInfo.title,
		columnParamInfo.def);
	columnParam.setPrompt(columnParamInfo.prompt);
	params.add(columnParam);
}

// add custom inputs/outputs here
function init(inputs, outputs) {
	outputs.add("keySet", "Unique values from given column name", false, java.util.Set);
	outputs.add("tableMap", "Map of key -> table values", false, java.util.Map);
}

/*
 * Create a new table with the same schema as the inputTable
 */
function setupTable(inputTable) {
    var table = new DefaultTableDataSource();
    for(c = 0; c < inputTable.columnCount; c++) {
	    var colTitle = inputTable.getColumnTitle(c);
	    table.setColumnTitle(c, colTitle);
	}
	return table;
}

// run operation on table
function tableOp(context, table) {
	// find table column index
	col = table.getColumnIndex(columnName);

	if(col < 0)
		return; // column not found

	var tableMap = new java.util.LinkedHashMap();

	for(row = 0; row < table.rowCount; row++) {
	    // use string value as row key
		var rowKey = Packages.ca.phon.formatter.FormatterUtil.format(table.getValueAt(row, col));

		var keyTable = tableMap.get(rowKey);
		if(keyTable == null) {
		    keyTable = setupTable(table);
		    tableMap.put(rowKey, keyTable);
		}
		keyTable.addRow(table.getRow(row));
	}

	context.put("keySet", tableMap.keySet());
	context.put("tableMap", tableMap);
}
]]>
                            </oga:property>
                            <oga:property key="columnName">
                                <![CDATA[Speaker]]>
                            </oga:property>
                        </oga:settings>
                        <oga:meta x="575" y="184"/>
                    </extensions>
                </node>
                <ogcn:macro id="4bb42cb62a99463c" name="For Each Participant" type="ca.phon.opgraph.nodes.reflect.IterableClassNode">
                    <graph id="7fd5eea4">
                        <node id="4579a77279ca4a66" name="Current Object" type="class:ca.phon.opgraph.nodes.reflect.ContextualItemClassNode">
                            <extensions>
                                <oga:settings>
                                    <oga:property key="ca.phon.opgraph.nodes.reflect.ContextualItemClassNode.declaredClass">
                                        <![CDATA[java.lang.Object]]>
                                    </oga:property>
                                    <oga:property key="ca.phon.opgraph.nodes.reflect.ContextualItemClassNode.key">
                                        <![CDATA[currentValue]]>
                                    </oga:property>
                                </oga:settings>
                                <oga:meta x="48" y="48"/>
                            </extensions>
                        </node>
                        <node id="16d59d355bab4424" name="Table Map" type="class:ca.phon.opgraph.nodes.reflect.ObjectNode">
                            <extensions>
                                <oga:settings>
                                    <oga:property key="ca.phon.opgraph.nodes.reflect.ObjectNode.declaredClass">
                                        <![CDATA[java.util.Map]]>
                                    </oga:property>
                                </oga:settings>
                                <oga:meta x="68" y="208"/>
                            </extensions>
                        </node>
                        <node id="3c9691c6bb004e13" name="Selected Sessions" type="class:ca.phon.opgraph.nodes.reflect.ObjectNode">
                            <extensions>
                                <oga:settings>
                                    <oga:property key="contextKey">
                                        <![CDATA[_selectedSessions]]>
                                    </oga:property>
                                    <oga:property key="ca.phon.opgraph.nodes.reflect.ObjectNode.declaredClass">
                                        <![CDATA[java.util.ArrayList]]>
                                    </oga:property>
                                </oga:settings>
                                <oga:meta x="69" y="310"/>
                            </extensions>
                        </node>
                        <node id="cb6dae92775145dc" name="ReportTreeNode" type="class:ca.phon.opgraph.nodes.reflect.ObjectNode">
                            <extensions>
                                <oga:settings>
                                    <oga:property key="ca.phon.opgraph.nodes.reflect.ObjectNode.declaredClass">
                                        <![CDATA[ca.phon.app.opgraph.report.tree.ReportTreeNode]]>
                                    </oga:property>
                                </oga:settings>
                                <oga:meta x="62" y="421"/>
                            </extensions>
                        </node>
                        <node id="7d1055dcc76e435a" name="To Participant Object" type="class:ca.phon.opgraph.nodes.reflect.ObjectCastNode">
                            <extensions>
                                <oga:settings>
                                    <oga:property key="ca.phon.opgraph.nodes.reflect.ObjectCastNode.declaredClass">
                                        <![CDATA[ca.phon.session.Participant]]>
                                    </oga:property>
                                </oga:settings>
                                <oga:meta x="224" y="49"/>
                            </extensions>
                        </node>
                        <ogcn:macro id="e8ae4a39fdd74375" name="Get Table of Results For Speaker" type="ca.phon.opgraph.nodes.general.MacroNode">
                            <graph id="3f44d6e9">
                                <node id="7a99452f69514e84" name="Object#toString()" type="class:ca.phon.opgraph.nodes.reflect.MethodNode">
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="ca.phon.opgraph.nodes.reflect.MethodNode.classMember">
                                                <![CDATA[toString()]]>
                                            </oga:property>
                                            <oga:property key="ca.phon.opgraph.nodes.reflect.MethodNode.declaredClass">
                                                <![CDATA[java.lang.Object]]>
                                            </oga:property>
                                        </oga:settings>
                                        <oga:meta x="105" y="70"/>
                                    </extensions>
                                </node>
                                <node id="2aa78b824a3b47b5" name="Map#get(Object)" type="class:ca.phon.opgraph.nodes.reflect.MethodNode">
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="ca.phon.opgraph.nodes.reflect.MethodNode.classMember">
                                                <![CDATA[get(java.lang.Object)]]>
                                            </oga:property>
                                            <oga:property key="ca.phon.opgraph.nodes.reflect.MethodNode.declaredClass">
                                                <![CDATA[java.util.Map]]>
                                            </oga:property>
                                        </oga:settings>
                                        <oga:meta x="296" y="73"/>
                                    </extensions>
                                </node>
                                <node id="6d807e2151704bab" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                                    <input name="table" optional="false"/>
                                    <output name="exists" type="java.lang.Boolean">does table exist</output>
                                    <output name="table" type="ca.phon.query.report.datasource.DefaultTableDataSource">table if exists, undefined otherwise</output>
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="__script">
                                                <![CDATA[
// setup input/output fields
function init(inputFields, outputFields) {
	inputFields.add("table", "");
	outputFields.add("exists", "does table exist", false, java.lang.Boolean);
	outputFields.add("table", "table if exists, undefined otherwise", false, Packages.ca.phon.query.report.datasource.DefaultTableDataSource);
}

function run(context) {
	var tableExists =
		(context.containsKey("table") && context.get("table") != null);
	context.put("exists", tableExists);
	context.put("table", context.get("table"));
}
]]>
                                            </oga:property>
                                        </oga:settings>
                                        <oga:meta x="514" y="94"/>
                                    </extensions>
                                </node>
                                <link dest="2aa78b824a3b47b5" destField="arg1" source="7a99452f69514e84" sourceField="value"/>
                                <link dest="6d807e2151704bab" destField="table" source="2aa78b824a3b47b5" sourceField="value"/>
                                <extensions>
                                    <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                </extensions>
                            </graph>
                            <ogcn:published_input field="obj" name="speaker" ref="7a99452f69514e84"/>
                            <ogcn:published_input field="obj" name="tableMap" ref="2aa78b824a3b47b5"/>
                            <ogcn:published_output field="exists" name="exists" ref="6d807e2151704bab"/>
                            <ogcn:published_output field="table" name="table" ref="6d807e2151704bab"/>
                            <extensions>
                                <oga:meta x="506" y="127"/>
                            </extensions>
                        </ogcn:macro>
                        <ogcn:macro id="e9d3beb84fbe42d4" name="If Speaker has Results" type="ca.phon.opgraph.nodes.general.MacroNode">
                            <graph id="65648f5b">
                                <node id="fda3b374aa2e4b57" name="Table" type="class:ca.phon.opgraph.nodes.reflect.ObjectNode">
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="ca.phon.opgraph.nodes.reflect.ObjectNode.declaredClass">
                                                <![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]>
                                            </oga:property>
                                        </oga:settings>
                                        <oga:meta x="100" y="212"/>
                                    </extensions>
                                </node>
                                <node id="a1995dcea18b4ba9" name="Selected Sessions" type="class:ca.phon.opgraph.nodes.reflect.ObjectNode">
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="contextKey">
                                                <![CDATA[_selectedSessions]]>
                                            </oga:property>
                                            <oga:property key="ca.phon.opgraph.nodes.reflect.ObjectNode.declaredClass">
                                                <![CDATA[java.util.ArrayList]]>
                                            </oga:property>
                                        </oga:settings>
                                        <oga:meta x="109" y="362"/>
                                    </extensions>
                                </node>
                                <node id="32b10bbefcb14fb6" name="Participant" type="class:ca.phon.opgraph.nodes.reflect.ObjectNode">
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="ca.phon.opgraph.nodes.reflect.ObjectNode.declaredClass">
                                                <![CDATA[ca.phon.session.Participant]]>
                                            </oga:property>
                                        </oga:settings>
                                        <oga:meta x="102" y="478"/>
                                    </extensions>
                                </node>
                                <node id="30e857d272394fc2" name="ReportTreeNode" type="class:ca.phon.opgraph.nodes.reflect.ObjectNode">
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="ca.phon.opgraph.nodes.reflect.ObjectNode.declaredClass">
                                                <![CDATA[ca.phon.app.opgraph.report.tree.ReportTreeNode]]>
                                            </oga:property>
                                        </oga:settings>
                                        <oga:meta x="103" y="790"/>
                                    </extensions>
                                </node>
                                <node id="6a732ba0" name="Object#toString()" type="class:ca.phon.opgraph.nodes.reflect.MethodNode">
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="ca.phon.opgraph.nodes.reflect.MethodNode.classMember">
                                                <![CDATA[toString()]]>
                                            </oga:property>
                                            <oga:property key="ca.phon.opgraph.nodes.reflect.MethodNode.declaredClass">
                                                <![CDATA[java.lang.Object]]>
                                            </oga:property>
                                        </oga:settings>
                                        <oga:meta x="497" y="471"/>
                                    </extensions>
                                </node>
                                <node id="1b2d8255" name="Participant Section" type="class:ca.phon.app.opgraph.nodes.report.ReportSectionHeaderNode">
                                    <extensions>
                                        <oga:meta x="720" y="459"/>
                                    </extensions>
                                </node>
                                <ogcn:macro id="bc3959aa86624ad3" name="Non-linear Analysis" type="ca.phon.opgraph.nodes.general.MacroNode">
                                    <graph id="6ad428a4">
                                        <node id="963cf1005af4056" name="Table" type="class:ca.phon.opgraph.nodes.reflect.ObjectNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.phon.opgraph.nodes.reflect.ObjectNode.declaredClass">
                                                        <![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]>
                                                    </oga:property>
                                                </oga:settings>
                                                <oga:meta x="31" y="66"/>
                                            </extensions>
                                        </node>
                                        <node id="66fe60b19f894c38" name="Participant" type="class:ca.phon.opgraph.nodes.reflect.ObjectNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.phon.opgraph.nodes.reflect.ObjectNode.declaredClass">
                                                        <![CDATA[ca.phon.session.Participant]]>
                                                    </oga:property>
                                                </oga:settings>
                                                <oga:meta x="31" y="222"/>
                                            </extensions>
                                        </node>
                                        <ogcn:macro id="ec4a79822c44797" name="Create Participant Summary" type="ca.phon.opgraph.nodes.general.MacroNode">
                                            <graph id="ee5a615">
                                                <node id="659e068660694f1f" name="DefaultTableDataSource#&lt;init&gt;()" type="class:ca.phon.opgraph.nodes.reflect.ConstructorNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.phon.opgraph.nodes.reflect.ConstructorNode.classMember">
                                                                <![CDATA[<init>()]]>
                                                            </oga:property>
                                                            <oga:property key="ca.phon.opgraph.nodes.reflect.ConstructorNode.declaredClass">
                                                                <![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]>
                                                            </oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="41" y="187"/>
                                                    </extensions>
                                                </node>
                                                <node id="7bea73b768ff4ad8" name="Setup Column Names" type="class:ca.phon.app.opgraph.nodes.table.TableScriptNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="__script">
                                                                <![CDATA[function tableOp(context, table) {
	// add headers to table
	var col = 0;
	table.setColumnTitle(col++, "Word");
	table.setColumnTitle(col++, "Productions");
	table.setColumnTitle(col++, "Stress Subtotal");
	table.setColumnTitle(col++, "Syllable Subtotal");
	table.setColumnTitle(col++, "Phone/Timing Unit Subtotal");
	table.setColumnTitle(col++, "Word Structure Subtotal");
	table.setColumnTitle(col++, "Place Subtotal");
	table.setColumnTitle(col++, "Manner Subtotal");
	table.setColumnTitle(col++, "Voicing Subtotal");
	table.setColumnTitle(col++, "Vowel Feature Subtotal");
	table.setColumnTitle(col++, "Segmental Relations Subtotal");
	table.setColumnTitle(col++, "Feature Subtotal");
	table.setColumnTitle(col++, "Total");
}
]]>
                                                            </oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="327" y="192"/>
                                                    </extensions>
                                                </node>
                                                <link dest="7bea73b768ff4ad8" destField="table" source="659e068660694f1f" sourceField="value"/>
                                                <extensions>
                                                    <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                                </extensions>
                                            </graph>
                                            <ogcn:published_output field="table" name="table" ref="7bea73b768ff4ad8"/>
                                            <extensions>
                                                <oga:meta x="422" y="282"/>
                                            </extensions>
                                        </ogcn:macro>
                                        <node id="c9f0edab9bc428a" name="Participant Section" type="class:ca.phon.opgraph.nodes.reflect.ObjectNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.phon.opgraph.nodes.reflect.ObjectNode.declaredClass">
                                                        <![CDATA[ca.phon.app.opgraph.report.tree.ReportTreeNode]]>
                                                    </oga:property>
                                                </oga:settings>
                                                <oga:meta x="30" y="538"/>
                                            </extensions>
                                        </node>
                                        <node id="fe2c969" name="Split Table by Word (Orthography)" type="class:ca.phon.app.opgraph.nodes.table.TableScriptNode">
                                            <output name="keySet" type="java.util.Set">Unique values from given column name</output>
                                            <output name="tableMap" type="java.util.Map">Map of key -&gt; table values</output>
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="__script">
                                                        <![CDATA[/*
 * Phon - An open source tool for research in phonology.
 * Copyright (C) 2005 - 2017, Gregory Hedlund <ghedlund@mun.ca> and Yvan Rose <yrose@mun.ca>
 * Dept of Linguistics, Memorial University <https://phon.ca>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

 /**
  * Split Table.js
  *
  * Script for use with ca.phon.app.opgraph.nodes.table.TableScriptNode
  *
  * Split table based on column name.  Two outputs
  * are produced, a set of keys from the column used in the filter  and a
  * map of key -> table values.
  */

var columnParamInfo = {
	"id": "columnName",
	"title": "Column Name",
	"def": "",
	"prompt": "Enter column name"
}

function setup_params(params) {
	var columnParam = new StringScriptParam(
		columnParamInfo.id,
		columnParamInfo.title,
		columnParamInfo.def);
	columnParam.setPrompt(columnParamInfo.prompt);
	params.add(columnParam);
}

// add custom inputs/outputs here
function init(inputs, outputs) {
	outputs.add("keySet", "Unique values from given column name", false, java.util.Set);
	outputs.add("tableMap", "Map of key -> table values", false, java.util.Map);
}

/*
 * Create a new table with the same schema as the inputTable
 */
function setupTable(inputTable) {
    var table = new DefaultTableDataSource();
    for(c = 0; c < inputTable.columnCount; c++) {
	    var colTitle = inputTable.getColumnTitle(c);
	    table.setColumnTitle(c, colTitle);
	}
	return table;
}

// run operation on table
function tableOp(context, table) {
	// find table column index
	col = table.getColumnIndex(columnName);

	if(col < 0)
		return; // column not found

	var tableMap = new java.util.LinkedHashMap();

	for(row = 0; row < table.rowCount; row++) {
	    // use string value as row key
		var rowKey = Packages.ca.phon.formatter.FormatterUtil.format(table.getValueAt(row, col));

		var keyTable = tableMap.get(rowKey);
		if(keyTable == null) {
		    keyTable = setupTable(table);
		    tableMap.put(rowKey, keyTable);
		}
		keyTable.addRow(table.getRow(row));
	}

	context.put("keySet", tableMap.keySet());
	context.put("tableMap", tableMap);
}
]]>
                                                    </oga:property>
                                                    <oga:property key="columnName">
                                                        <![CDATA[Orthography]]>
                                                    </oga:property>
                                                </oga:settings>
                                                <oga:meta x="355" y="63"/>
                                            </extensions>
                                        </node>
                                        <ogcn:macro id="5d82e146" name="Sort Words" type="ca.phon.opgraph.nodes.general.MacroNode">
                                            <graph id="1d884677">
                                                <node id="2972cc35" name="arg1" type="class:ca.phon.opgraph.nodes.reflect.ObjectNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.phon.opgraph.nodes.reflect.ObjectNode.declaredClass">
                                                                <![CDATA[java.util.Set]]>
                                                            </oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="15" y="15"/>
                                                    </extensions>
                                                </node>
                                                <node id="58cbd1ce" name="ArrayList#&lt;init&gt;(Collection)" type="class:ca.phon.opgraph.nodes.reflect.ConstructorNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.phon.opgraph.nodes.reflect.ConstructorNode.classMember">
                                                                <![CDATA[<init>(java.util.Collection)]]>
                                                            </oga:property>
                                                            <oga:property key="ca.phon.opgraph.nodes.reflect.ConstructorNode.declaredClass">
                                                                <![CDATA[java.util.ArrayList]]>
                                                            </oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="159" y="15"/>
                                                    </extensions>
                                                </node>
                                                <node id="1b5def0c" name="Collections#sort(List)" type="class:ca.phon.opgraph.nodes.reflect.StaticMethodNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.phon.opgraph.nodes.reflect.StaticMethodNode.declaredClass">
                                                                <![CDATA[java.util.Collections]]>
                                                            </oga:property>
                                                            <oga:property key="ca.phon.opgraph.nodes.reflect.StaticMethodNode.classMember">
                                                                <![CDATA[sort(java.util.List)]]>
                                                            </oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="380" y="15"/>
                                                    </extensions>
                                                </node>
                                                <link dest="58cbd1ce" destField="arg1" source="2972cc35" sourceField="obj"/>
                                                <link dest="1b5def0c" destField="arg1" source="58cbd1ce" sourceField="value"/>
                                            </graph>
                                            <ogcn:published_input field="obj" name="arg1" ref="2972cc35"/>
                                            <ogcn:published_output field="value" name="words" ref="58cbd1ce"/>
                                            <extensions>
                                                <oga:meta x="648" y="63"/>
                                            </extensions>
                                        </ogcn:macro>
                                        <ogcn:macro id="66c46f3" name="For Each Word" type="ca.phon.opgraph.nodes.reflect.IterableClassNode">
                                            <graph id="1010df1a">
                                                <node id="6509644b" name="Current Word" type="class:ca.phon.opgraph.nodes.reflect.ContextualItemClassNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.phon.opgraph.nodes.reflect.ContextualItemClassNode.declaredClass">
                                                                <![CDATA[java.lang.Object]]>
                                                            </oga:property>
                                                            <oga:property key="ca.phon.opgraph.nodes.reflect.ContextualItemClassNode.key">
                                                                <![CDATA[currentValue]]>
                                                            </oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="35" y="31"/>
                                                    </extensions>
                                                </node>
                                                <node id="f1f6f32ddb4640ed" name="Table Map" type="class:ca.phon.opgraph.nodes.reflect.ObjectNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.phon.opgraph.nodes.reflect.ObjectNode.declaredClass">
                                                                <![CDATA[java.util.Map]]>
                                                            </oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="32" y="164"/>
                                                    </extensions>
                                                </node>
                                                <node id="52d918b714944c6d" name="Participant" type="class:ca.phon.opgraph.nodes.reflect.ObjectNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.phon.opgraph.nodes.reflect.ObjectNode.declaredClass">
                                                                <![CDATA[ca.phon.session.Participant]]>
                                                            </oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="32" y="265"/>
                                                    </extensions>
                                                </node>
                                                <node id="65755225" name="Integer#&lt;init&gt;(String)" type="class:ca.phon.opgraph.nodes.reflect.ConstructorNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.phon.opgraph.nodes.reflect.ConstructorNode.classMember">
                                                                <![CDATA[<init>(java.lang.String)]]>
                                                            </oga:property>
                                                            <oga:property key="ca.phon.opgraph.nodes.reflect.ConstructorNode.declaredClass">
                                                                <![CDATA[java.lang.Integer]]>
                                                            </oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="439" y="284">
                                                            <oga:default for="arg1" type="java.lang.String">0</oga:default>
                                                        </oga:meta>
                                                    </extensions>
                                                </node>
                                                <ogcn:macro id="d24944a725434695" name="Create Word Summary Table" type="ca.phon.opgraph.nodes.general.MacroNode">
                                                    <graph id="7f568747">
                                                        <node id="981191cde88847b4" name="DefaultTableDataSource#&lt;init&gt;()" type="class:ca.phon.opgraph.nodes.reflect.ConstructorNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.phon.opgraph.nodes.reflect.ConstructorNode.classMember">
                                                                        <![CDATA[<init>()]]>
                                                                    </oga:property>
                                                                    <oga:property key="ca.phon.opgraph.nodes.reflect.ConstructorNode.declaredClass">
                                                                        <![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]>
                                                                    </oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="41" y="187"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="f4712a7957ae40de" name="Setup Column Names" type="class:ca.phon.app.opgraph.nodes.table.TableScriptNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="__script">
                                                                        <![CDATA[function tableOp(context, table) {
	// add headers to table
	var col = 0;
	table.setColumnTitle(col++, "Session");
	table.setColumnTitle(col++, "Record #");
	table.setColumnTitle(col++, "Result");
	table.setColumnTitle(col++, "IPA Actual (Word)");
	table.setColumnTitle(col++, "Stress Subtotal");
	table.setColumnTitle(col++, "Syllable Subtotal");
	table.setColumnTitle(col++, "Phone/Timing Unit Subtotal");
	table.setColumnTitle(col++, "Word Structure Subtotal");
	table.setColumnTitle(col++, "Place Subtotal");
	table.setColumnTitle(col++, "Manner Subtotal");
	table.setColumnTitle(col++, "Voicing Subtotal");
	table.setColumnTitle(col++, "Vowel Feature Subtotal");
	table.setColumnTitle(col++, "Segmental Relations Subtotal");
	table.setColumnTitle(col++, "Feature Subtotal");
	table.setColumnTitle(col++, "Total");
}
]]>
                                                                    </oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="334" y="178"/>
                                                            </extensions>
                                                        </node>
                                                        <link dest="f4712a7957ae40de" destField="table" source="981191cde88847b4" sourceField="value"/>
                                                        <extensions>
                                                            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                                        </extensions>
                                                    </graph>
                                                    <ogcn:published_output field="table" name="table" ref="f4712a7957ae40de"/>
                                                    <extensions>
                                                        <oga:meta x="627" y="484"/>
                                                    </extensions>
                                                </ogcn:macro>
                                                <node id="e421f549a6544693" name="Participant Summary" type="class:ca.phon.opgraph.nodes.reflect.ObjectNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.phon.opgraph.nodes.reflect.ObjectNode.declaredClass">
                                                                <![CDATA[ca.phon.query.report.datasource.TableDataSource]]>
                                                            </oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="32" y="586"/>
                                                    </extensions>
                                                </node>
                                                <node id="6f611205" name="Participant Section" type="class:ca.phon.opgraph.nodes.reflect.ObjectNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.phon.opgraph.nodes.reflect.ObjectNode.declaredClass">
                                                                <![CDATA[ca.phon.app.opgraph.report.tree.ReportTreeNode]]>
                                                            </oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="30" y="716"/>
                                                    </extensions>
                                                </node>
                                                <ogcn:macro id="3b6ad62cb6cb44c2" name="Get Table For Word" type="ca.phon.opgraph.nodes.general.MacroNode">
                                                    <graph id="12a4a26d">
                                                        <node id="b41e4a0365274c66" name="Map" type="class:ca.phon.opgraph.nodes.reflect.ObjectNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.phon.opgraph.nodes.reflect.ObjectNode.declaredClass">
                                                                        <![CDATA[java.util.Map]]>
                                                                    </oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="244" y="68"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="56aa8ff18e2048b8" name="Map#get(Object)" type="class:ca.phon.opgraph.nodes.reflect.MethodNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.phon.opgraph.nodes.reflect.MethodNode.classMember">
                                                                        <![CDATA[get(java.lang.Object)]]>
                                                                    </oga:property>
                                                                    <oga:property key="ca.phon.opgraph.nodes.reflect.MethodNode.declaredClass">
                                                                        <![CDATA[java.util.Map]]>
                                                                    </oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="401" y="69"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="8f694ea76aa24e1a" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                                                            <input name="table" optional="false"/>
                                                            <output name="exists" type="java.lang.Boolean">does table exist</output>
                                                            <output name="table" type="ca.phon.query.report.datasource.DefaultTableDataSource">table if exists, undefined otherwise</output>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="__script">
                                                                        <![CDATA[
// setup input/output fields
function init(inputFields, outputFields) {
	inputFields.add("table", "");
	outputFields.add("exists", "does table exist", false, java.lang.Boolean);
	outputFields.add("table", "table if exists, undefined otherwise", false, Packages.ca.phon.query.report.datasource.DefaultTableDataSource);
}

function run(context) {
	var tableExists =
		(context.containsKey("table") && context.get("table") != null);
	context.put("exists", tableExists);
	context.put("table", context.get("table"));
}
]]>
                                                                    </oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="555" y="73"/>
                                                            </extensions>
                                                        </node>
                                                        <link dest="56aa8ff18e2048b8" destField="obj" source="b41e4a0365274c66" sourceField="obj"/>
                                                        <link dest="8f694ea76aa24e1a" destField="table" source="56aa8ff18e2048b8" sourceField="value"/>
                                                    </graph>
                                                    <ogcn:published_input field="arg1" name="word" ref="56aa8ff18e2048b8"/>
                                                    <ogcn:published_input field="obj" name="tableMap" ref="b41e4a0365274c66"/>
                                                    <ogcn:published_output field="exists" name="exists" ref="8f694ea76aa24e1a"/>
                                                    <ogcn:published_output field="table" name="table" ref="8f694ea76aa24e1a"/>
                                                    <extensions>
                                                        <oga:meta x="447" y="97"/>
                                                    </extensions>
                                                </ogcn:macro>
                                                <node id="7c4d0c5" name="Word Section" type="class:ca.phon.app.opgraph.nodes.report.ReportSectionHeaderNode">
                                                    <extensions>
                                                        <oga:meta x="633" y="586">
                                                            <oga:default for="sectionName" type="java.lang.String">Word Section</oga:default>
                                                        </oga:meta>
                                                    </extensions>
                                                </node>
                                                <node id="361a467e" name="Object#toString()" type="class:ca.phon.opgraph.nodes.reflect.MethodNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.phon.opgraph.nodes.reflect.MethodNode.classMember">
                                                                <![CDATA[toString()]]>
                                                            </oga:property>
                                                            <oga:property key="ca.phon.opgraph.nodes.reflect.MethodNode.declaredClass">
                                                                <![CDATA[java.lang.Object]]>
                                                            </oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="677" y="722"/>
                                                    </extensions>
                                                </node>
                                                <node id="3dcd32be" name="Word Table" type="class:ca.phon.opgraph.nodes.reflect.ObjectNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.phon.opgraph.nodes.reflect.ObjectNode.declaredClass">
                                                                <![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]>
                                                            </oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="652" y="97"/>
                                                    </extensions>
                                                </node>
                                                <node id="1de76ae9" type="class:ca.phon.opgraph.nodes.math.MathExpressionNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="expression">
                                                                <![CDATA[rowCount+(-1)]]>
                                                            </oga:property>
                                                            <oga:property key="significantDigits">
                                                                <![CDATA[-1]]>
                                                            </oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="439" y="385"/>
                                                    </extensions>
                                                </node>
                                                <node id="68df0ab3" type="class:ca.phon.opgraph.nodes.general.RangeNode">
                                                    <extensions>
                                                        <oga:meta x="649" y="315"/>
                                                    </extensions>
                                                </node>
                                                <ogcn:macro id="16b901d9" name="For Each Row" type="ca.phon.opgraph.nodes.reflect.IterableClassNode">
                                                    <graph id="781b9895">
                                                        <node id="e621d9b" name="Current Index" type="class:ca.phon.opgraph.nodes.reflect.ContextualItemClassNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.phon.opgraph.nodes.reflect.ContextualItemClassNode.declaredClass">
                                                                        <![CDATA[java.lang.Object]]>
                                                                    </oga:property>
                                                                    <oga:property key="ca.phon.opgraph.nodes.reflect.ContextualItemClassNode.key">
                                                                        <![CDATA[currentValue]]>
                                                                    </oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="39" y="30"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="44c83169c7b4c88" name="Word Table" type="class:ca.phon.opgraph.nodes.reflect.ObjectNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.phon.opgraph.nodes.reflect.ObjectNode.declaredClass">
                                                                        <![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]>
                                                                    </oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="48" y="215"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="4864357a" name="Create Table for Production" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                                                            <output name="table" type="ca.phon.query.report.datasource.DefaultTableDataSource"/>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="__script">
                                                                        <![CDATA[
function init(inputs, outputs) {
	outputs.add("table", "", false, Packages.ca.phon.query.report.datasource.DefaultTableDataSource);
}

function run(context) {
	var table = new Packages.ca.phon.query.report.datasource.DefaultTableDataSource();

	table.setColumnTitle(0, "Category");
	table.setColumnTitle(1, "Description");
	table.setColumnTitle(2, "Value");
	table.setColumnTitle(3, "Total");

	context.put("table", table);
}
]]>
                                                                    </oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="414" y="340"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="c71ad97d594442ba" name="Participant" type="class:ca.phon.opgraph.nodes.reflect.ObjectNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.phon.opgraph.nodes.reflect.ObjectNode.declaredClass">
                                                                        <![CDATA[ca.phon.session.Participant]]>
                                                                    </oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="48" y="376"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="eecc6718a2cd42bc" name="Word" type="class:ca.phon.opgraph.nodes.reflect.ObjectNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.phon.opgraph.nodes.reflect.ObjectNode.declaredClass">
                                                                        <![CDATA[java.lang.Object]]>
                                                                    </oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="48" y="697"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="441f00ab96d24342" name="Word Summary Table" type="class:ca.phon.opgraph.nodes.reflect.ObjectNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.phon.opgraph.nodes.reflect.ObjectNode.declaredClass">
                                                                        <![CDATA[ca.phon.query.report.datasource.TableDataSource]]>
                                                                    </oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="48" y="798"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="471bbc46" name="Word Section" type="class:ca.phon.opgraph.nodes.reflect.ObjectNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.phon.opgraph.nodes.reflect.ObjectNode.declaredClass">
                                                                        <![CDATA[ca.phon.app.opgraph.report.tree.ReportTreeNode]]>
                                                                    </oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="48" y="939"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="66b48188" name="To Integer" type="class:ca.phon.opgraph.nodes.reflect.ObjectCastNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.phon.opgraph.nodes.reflect.ObjectCastNode.declaredClass">
                                                                        <![CDATA[java.lang.Integer]]>
                                                                    </oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="233" y="32"/>
                                                            </extensions>
                                                        </node>
                                                        <ogcn:macro id="53ea1651" name="Get Row Data" type="ca.phon.opgraph.nodes.general.MacroNode">
                                                            <graph id="a5ab3c5">
                                                                <node id="2a8fae9a" name="row" type="class:ca.phon.opgraph.nodes.reflect.ObjectNode">
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="ca.phon.opgraph.nodes.reflect.ObjectNode.declaredClass">
                                                                                <![CDATA[java.lang.Integer]]>
                                                                            </oga:property>
                                                                        </oga:settings>
                                                                        <oga:meta x="51" y="70"/>
                                                                    </extensions>
                                                                </node>
                                                                <node id="1755106e" name="table" type="class:ca.phon.opgraph.nodes.reflect.ObjectNode">
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="ca.phon.opgraph.nodes.reflect.ObjectNode.declaredClass">
                                                                                <![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]>
                                                                            </oga:property>
                                                                        </oga:settings>
                                                                        <oga:meta x="37" y="243"/>
                                                                    </extensions>
                                                                </node>
                                                                <node id="40dbe8b" name="DefaultTableDataSource#getRow(int)" type="class:ca.phon.opgraph.nodes.reflect.MethodNode">
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="ca.phon.opgraph.nodes.reflect.MethodNode.classMember">
                                                                                <![CDATA[getRow(int)]]>
                                                                            </oga:property>
                                                                            <oga:property key="ca.phon.opgraph.nodes.reflect.MethodNode.declaredClass">
                                                                                <![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]>
                                                                            </oga:property>
                                                                        </oga:settings>
                                                                        <oga:meta x="479" y="27"/>
                                                                    </extensions>
                                                                </node>
                                                                <node id="3ff18492" name="DefaultTableDataSource#getColumnIndex(String)" type="class:ca.phon.opgraph.nodes.reflect.MethodNode">
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="ca.phon.opgraph.nodes.reflect.MethodNode.classMember">
                                                                                <![CDATA[getColumnIndex(java.lang.String)]]>
                                                                            </oga:property>
                                                                            <oga:property key="ca.phon.opgraph.nodes.reflect.MethodNode.declaredClass">
                                                                                <![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]>
                                                                            </oga:property>
                                                                        </oga:settings>
                                                                        <oga:meta x="469" y="161">
                                                                            <oga:default for="arg1" type="java.lang.String">Target Syllabification (Word)</oga:default>
                                                                        </oga:meta>
                                                                    </extensions>
                                                                </node>
                                                                <node id="209218c5fa6a4a40" name="DefaultTableDataSource#getColumnIndex(String)" type="class:ca.phon.opgraph.nodes.reflect.MethodNode">
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="ca.phon.opgraph.nodes.reflect.MethodNode.classMember">
                                                                                <![CDATA[getColumnIndex(java.lang.String)]]>
                                                                            </oga:property>
                                                                            <oga:property key="ca.phon.opgraph.nodes.reflect.MethodNode.declaredClass">
                                                                                <![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]>
                                                                            </oga:property>
                                                                        </oga:settings>
                                                                        <oga:meta x="469" y="292">
                                                                            <oga:default for="arg1" type="java.lang.String">Actual Syllabification (Word)</oga:default>
                                                                        </oga:meta>
                                                                    </extensions>
                                                                </node>
                                                                <node id="18e8ed2049024faf" name="DefaultTableDataSource#getColumnIndex(String)" type="class:ca.phon.opgraph.nodes.reflect.MethodNode">
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="ca.phon.opgraph.nodes.reflect.MethodNode.classMember">
                                                                                <![CDATA[getColumnIndex(java.lang.String)]]>
                                                                            </oga:property>
                                                                            <oga:property key="ca.phon.opgraph.nodes.reflect.MethodNode.declaredClass">
                                                                                <![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]>
                                                                            </oga:property>
                                                                        </oga:settings>
                                                                        <oga:meta x="469" y="405">
                                                                            <oga:default for="arg1" type="java.lang.String">Phone Alignment (Word)</oga:default>
                                                                        </oga:meta>
                                                                    </extensions>
                                                                </node>
                                                                <node id="dae83f2d116441cb" name="DefaultTableDataSource#getColumnIndex(String)" type="class:ca.phon.opgraph.nodes.reflect.MethodNode">
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="ca.phon.opgraph.nodes.reflect.MethodNode.classMember">
                                                                                <![CDATA[getColumnIndex(java.lang.String)]]>
                                                                            </oga:property>
                                                                            <oga:property key="ca.phon.opgraph.nodes.reflect.MethodNode.declaredClass">
                                                                                <![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]>
                                                                            </oga:property>
                                                                        </oga:settings>
                                                                        <oga:meta x="468" y="520">
                                                                            <oga:default for="arg1" type="java.lang.String">Result</oga:default>
                                                                        </oga:meta>
                                                                    </extensions>
                                                                </node>
                                                                <node id="c4a492c1a2144860" name="DefaultTableDataSource#getColumnIndex(String)" type="class:ca.phon.opgraph.nodes.reflect.MethodNode">
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="ca.phon.opgraph.nodes.reflect.MethodNode.classMember">
                                                                                <![CDATA[getColumnIndex(java.lang.String)]]>
                                                                            </oga:property>
                                                                            <oga:property key="ca.phon.opgraph.nodes.reflect.MethodNode.declaredClass">
                                                                                <![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]>
                                                                            </oga:property>
                                                                        </oga:settings>
                                                                        <oga:meta x="469" y="637">
                                                                            <oga:default for="arg1" type="java.lang.String">Session</oga:default>
                                                                        </oga:meta>
                                                                    </extensions>
                                                                </node>
                                                                <node id="4d3155cac954ee6" name="Get Row Data" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                                                                    <input name="row" optional="false"/>
                                                                    <input name="targetCol" optional="false"/>
                                                                    <input name="actualCol" optional="false"/>
                                                                    <input name="alignmentCol" optional="false"/>
                                                                    <input name="resultCol" optional="false"/>
                                                                    <input name="sessionCol" optional="false"/>
                                                                    <output name="session" type="ca.phon.session.SessionPath"/>
                                                                    <output name="result" type="ca.phon.query.db.Result"/>
                                                                    <output name="target" type="ca.phon.ipa.IPATranscript"/>
                                                                    <output name="actual" type="ca.phon.ipa.IPATranscript"/>
                                                                    <output name="alignment" type="ca.phon.ipa.alignment.PhoneMap"/>
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="__script">
                                                                                <![CDATA[function init(inputs, outputs) {
	inputs.add("row", "", false, false);
	inputs.add("targetCol", "", false, false);
	inputs.add("actualCol", "", false, false);
	inputs.add("alignmentCol", "", false, false);
	inputs.add("resultCol", "", false, false);
	inputs.add("sessionCol", "", false, false);

	outputs.add("session", "", false, Packages.ca.phon.session.SessionPath);
	outputs.add("result", "", false, Packages.ca.phon.query.db.Result);
	outputs.add("target", "", false, Packages.ca.phon.ipa.IPATranscript);
	outputs.add("actual", "", false, Packages.ca.phon.ipa.IPATranscript);
	outputs.add("alignment", "", false, Packages.ca.phon.ipa.alignment.PhoneMap);
}

function run(context) {
	var rowData = context.get("row");
	var sessionCol = context.get("sessionCol");
	var resultCol = context.get("resultCol");
	var targetCol = context.get("targetCol");
	var actualCol = context.get("actualCol");
	var alignmentCol = context.get("alignmentCol");

	var session = rowData[sessionCol];
	var result = rowData[resultCol];
	var targetData = rowData[targetCol];
	var actualData = rowData[actualCol];
	var alignData = rowData[alignmentCol];

	var target = new IPATranscript();
	if(targetData != null) {
		try {
			target = IPATranscript.parseIPATranscript(targetData);
		} catch(e) {
			java.lang.System.out.println(e);
		}
	}
	
	var actual = new IPATranscript();
	if(actualData != null) {
		try {
			actual = IPATranscript.parseIPATranscript(actualData);
		} catch(e) {
			java.lang.System.out.println(e);
		}
	}
	
	var alignment = 
		(alignData != null && alignData.length() > 0 ? Packages.ca.phon.ipa.alignment.PhoneMap.fromString(target, actual, rowData[alignmentCol]) : new Packages.ca.phon.ipa.alignment.PhoneMap(target, actual));

	context.put("session", session);
	context.put("result", result);
	context.put("target", target);
	context.put("actual", actual);
	context.put("alignment", alignment);
}
]]>
                                                                            </oga:property>
                                                                        </oga:settings>
                                                                        <oga:meta x="920" y="197"/>
                                                                    </extensions>
                                                                </node>
                                                                <link dest="18e8ed2049024faf" destField="obj" source="1755106e" sourceField="obj"/>
                                                                <link dest="209218c5fa6a4a40" destField="obj" source="1755106e" sourceField="obj"/>
                                                                <link dest="3ff18492" destField="obj" source="1755106e" sourceField="obj"/>
                                                                <link dest="40dbe8b" destField="arg1" source="2a8fae9a" sourceField="obj"/>
                                                                <link dest="40dbe8b" destField="obj" source="1755106e" sourceField="obj"/>
                                                                <link dest="4d3155cac954ee6" destField="targetCol" source="3ff18492" sourceField="value"/>
                                                                <link dest="4d3155cac954ee6" destField="actualCol" source="209218c5fa6a4a40" sourceField="value"/>
                                                                <link dest="4d3155cac954ee6" destField="alignmentCol" source="18e8ed2049024faf" sourceField="value"/>
                                                                <link dest="4d3155cac954ee6" destField="row" source="40dbe8b" sourceField="value"/>
                                                                <link dest="dae83f2d116441cb" destField="obj" source="1755106e" sourceField="obj"/>
                                                                <link dest="4d3155cac954ee6" destField="resultCol" source="dae83f2d116441cb" sourceField="value"/>
                                                                <link dest="c4a492c1a2144860" destField="obj" source="1755106e" sourceField="obj"/>
                                                                <link dest="4d3155cac954ee6" destField="sessionCol" source="c4a492c1a2144860" sourceField="value"/>
                                                                <extensions>
                                                                    <oga:notes>
                                                                        <oga:note color="0xffff96" height="624" title="Inputs" width="274" x="28" y="30"/>
                                                                    </oga:notes>
                                                                    <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                                                </extensions>
                                                            </graph>
                                                            <ogcn:published_input field="obj" name="table" ref="1755106e"/>
                                                            <ogcn:published_input field="obj" name="row" ref="2a8fae9a"/>
                                                            <ogcn:published_output field="target" name="target" ref="4d3155cac954ee6"/>
                                                            <ogcn:published_output field="actual" name="actual" ref="4d3155cac954ee6"/>
                                                            <ogcn:published_output field="alignment" name="alignment" ref="4d3155cac954ee6"/>
                                                            <ogcn:published_output field="result" name="result" ref="4d3155cac954ee6"/>
                                                            <ogcn:published_output field="session" name="session" ref="4d3155cac954ee6"/>
                                                            <extensions>
                                                                <oga:meta x="414" y="139"/>
                                                            </extensions>
                                                        </ogcn:macro>
                                                        <node id="7c4df945" type="class:ca.phon.opgraph.nodes.math.MathExpressionNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="expression">
                                                                        <![CDATA[x+1]]>
                                                                    </oga:property>
                                                                    <oga:property key="significantDigits">
                                                                        <![CDATA[-1]]>
                                                                    </oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="1048" y="590"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="7c49dde3" name="Stress Checks" type="class:ca.phon.app.opgraph.nodes.table.TableScriptNode">
                                                            <input name="target" optional="false"/>
                                                            <input name="actual" optional="false"/>
                                                            <input name="alignment" optional="false"/>
                                                            <output name="total" type="java.lang.Integer">sub-total for section</output>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="__script">
                                                                        <![CDATA[importPackage(Packages.ca.phon.syllable)
importPackage(Packages.ca.phon.ipa.alignment)

function init(inputs, outputs) {
	inputs.add("target", "", false, false);
	inputs.add("actual", "", false, false);
	inputs.add("alignment", "", false, false);

	outputs.add("total", "sub-total for section", false, java.lang.Integer);
}

function tableOp(context, table) {
	var target = context.get("target");
	var actual = context.get("actual");
	var alignment = context.get("alignment");

	var syllAligner = new SyllableAligner();
	var syllAlignment = syllAligner.calculateSyllableAlignment(target, actual, alignment);	

	var targetStressPattern = target.stressPattern;
	var actualStressPattern = actual.stressPattern;

	var stressMismatches = new java.util.HashSet();
	for(var i = 0; i < syllAlignment.alignmentLength; i++) {
		var alignedEles = syllAlignment.getAlignedElements(i);

		var targetEle = alignedEles.get(0);
		var actualEle = alignedEles.get(1);

		if(targetEle != null) {
			var stressType = targetEle.getExtension(SyllableStress);

			if(stressType != SyllableStress.NoStress) {
				var actualStress = (actualEle != null ? actualEle.getExtension(SyllableStress) : null);

				if(actualStress != stressType) {
					stressMismatches.add(stressType);
				}
			}
		}
	}
		
	var category = "Stress";
	var categoryRowAdded = false;
	var row = new Array();
	var total = 0;

	var itr = stressMismatches.iterator();
	while(itr.hasNext()) {
		var stressType = itr.next();
		row = [];
		row[0] = (categoryRowAdded == false ? category : "");
		row[1] = stressType + " mis-match";
		row[2] = new java.lang.Integer(1);
		row[3] = "";
		table.addRow(row);

		++total;
		categoryRowAdded = true;
	}

	if(!targetStressPattern.equals(actualStressPattern)) {
		row = new Array();
		row[0] = (categoryRowAdded == false ? category : "");
		row[1] = "Word stress mis-match: " + targetStressPattern + " \u2194 " + actualStressPattern;
		row[2] = new java.lang.Integer(1);
		row[3] = "";
		table.addRow(row);

		++total;
		categoryRowAdded = true;
	}

	row = new Array();
	row[0] = (categoryRowAdded == false ? category : "");
	row[1] = category + " subtotal";
	row[2] = "";
	row[3] = new java.lang.Integer(total);
	table.addRow(row);

	context.put("total", new java.lang.Integer(total));
}
]]>
                                                                    </oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="760" y="128"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="4230c0db" name="Number#intValue()" type="class:ca.phon.opgraph.nodes.reflect.MethodNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.phon.opgraph.nodes.reflect.MethodNode.classMember">
                                                                        <![CDATA[intValue()]]>
                                                                    </oga:property>
                                                                    <oga:property key="ca.phon.opgraph.nodes.reflect.MethodNode.declaredClass">
                                                                        <![CDATA[java.lang.Number]]>
                                                                    </oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="1049" y="688"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="5a1c4954d75143f1" name="Syllable Checks" type="class:ca.phon.app.opgraph.nodes.table.TableScriptNode">
                                                            <input name="target" optional="false"/>
                                                            <input name="actual" optional="false"/>
                                                            <input name="alignment" optional="false"/>
                                                            <output name="total" type="java.lang.Integer"/>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="__script">
                                                                        <![CDATA[importPackage(Packages.ca.phon.ipa)
importPackage(Packages.ca.phon.ipa.alignment)

function init(inputs, outputs) {
	inputs.add("target", "", false, false);
	inputs.add("actual", "", false, false);
	inputs.add("alignment", "", false, false);

	outputs.add("total", "", false, java.lang.Integer);
}

function tableOp(context, table) {
	var target = context.get("target");
	var actual = context.get("actual");
	var alignment = context.get("alignment");

	var syllAligner = new SyllableAligner();
	var syllableAlignment = syllAligner.calculateSyllableAlignment(target, actual, alignment);

	var category = "Syllable";
	var categoryPrinted = false;
	var total = 0;

	for(var alignIdx = 0; alignIdx < syllableAlignment.alignmentLength; alignIdx++) {
		var alignedEles = syllableAlignment.getAlignedElements(alignIdx);

		var targetSyll = alignedEles.get(0);
		var actualSyll = alignedEles.get(1);

		if(targetSyll == null) {
			// inserted syllable
			var rowData = new Array();
			rowData[0] = (categoryPrinted == false ? category : "");
			var syllIdx = syllableAlignment.bottomAlignment[alignIdx].intValue() + 1;
			rowData[1] = "Syllable " + syllIdx + " inserted: \u2205 \u2194 " + actualSyll;
			rowData[2] = new java.lang.Integer(1);
			rowData[3] = "";
			table.addRow(rowData);

			++total;
			categoryPrinted = true;
		} else if (actualSyll == null) {
			// deleted syllable
			var rowData = new Array();
			rowData[0] = (categoryPrinted == false ? category : "");
			var syllIdx = syllableAlignment.topAlignment[alignIdx].intValue() + 1;
			rowData[1] = "Syllable " + syllIdx + " deleted: " + targetSyll + " \u2194 \u2205";
			rowData[2] = new java.lang.Integer(1);
			rowData[3] = "";
			table.addRow(rowData);

			++total;
			categoryPrinted = true;
		}
	}

	// print sub-total
	var rowData = new Array();
	rowData[0] = (categoryPrinted == false ? category : "");
	rowData[1] = category + " subtotal";
	rowData[2] = "";
	rowData[3] = new java.lang.Integer(total);
	table.addRow(rowData);

	context.put("total", new java.lang.Integer(total));
}
]]>
                                                                    </oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="1036" y="131"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="2ecfd9a2" type="class:ca.phon.opgraph.nodes.general.ArrayNode">
                                                            <input name="object1" optional="false">object in array</input>
                                                            <input name="object2" optional="false">object in array</input>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.phon.opgraph.nodes.general.ArrayNode.numObjects">
                                                                        <![CDATA[2]]>
                                                                    </oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="1246" y="591"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="fb980b1aa2984dbb" name="Phone Checks" type="class:ca.phon.app.opgraph.nodes.table.TableScriptNode">
                                                            <input name="target" optional="false"/>
                                                            <input name="actual" optional="false"/>
                                                            <input name="alignment" optional="false"/>
                                                            <output name="total" type="java.lang.Integer"/>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="__script">
                                                                        <![CDATA[// Phone Checks

importPackage(Packages.ca.phon.phonex)
importPackage(Packages.ca.phon.ipa.relations)

function init(inputs, outputs) {
	inputs.add("target", "", false, false);
	inputs.add("actual", "", false, false);
	inputs.add("alignment", "", false, false);
	
	outputs.add("total", "", false, java.lang.Integer);
}

function tableOp(context, table) {
	var target = context. get ("target");
	var actual = context. get ("actual");
	var alignment = context. get ("alignment");
	
	var total = 0;

	var category = "Phone/Timing Unit";
	 categoryPrinted = false;
	 
	// special cases
	var cvl_deletions = checkCompensatoryVowelLengthening(table, target, actual, alignment);
	total += cvl_deletions.length;
	categoryPrinted = (cvl_deletions.length > 0);
	
	// check insertions/deletions
	for (var alignIdx = 0; alignIdx < alignment.alignmentLength; alignIdx++) {
		var alignedElements = alignment.getAlignedElements(alignIdx);
		
		var targetEle = alignedElements. get (0);
		if(cvl_deletions.includes(targetEle)) continue;
		
		var actualEle = alignedElements. get (1);
		
		if (targetEle == null) {
			// insertion
			var row = new Array();
			row[0] = (categoryPrinted == false ? category: "");
			row[1] = "Phone " + (alignIdx + 1) + " inserted: \u2205 \u2194 " + actualEle;
			row[2] = new java.lang.Integer(1);
			row[3] = "";
			table.addRow(row);++ total;
			categoryPrinted = true;
		} else if (actualEle == null) {
			// deletion
			var row = new Array();
			row[0] = (categoryPrinted == false ? category: "");
			row[1] = "Phone " + (alignIdx + 1) + " deleted: " + targetEle + " \u2194 \u2205";
			row[2] = new java.lang.Integer(1);
			row[3] = "";
			table.addRow(row);++ total;
			categoryPrinted = true;
		}
	}
	
	// print sub-total
	var rowData = new Array();
	rowData[0] = (categoryPrinted == false ? category: "");
	rowData[1] = category + " subtotal";
	rowData[2] = "";
	rowData[3] = new java.lang.Integer(total);
	table.addRow(rowData);
	
	context.put("total", new java.lang.Integer(total));
}

// special cases
function checkCompensatoryVowelLengthening(table, target, actual, alignment) {
	var total = 0;

	var category = "Phone/Timing Unit";
	var categoryPrinted = false;
	
	var targetPhonex = PhonexPattern.compile("\\v\\c:C");
	var targetMatcher = targetPhonex.matcher(target);
	
	var retVal = new Array();
	while (targetMatcher.find()) {
		var targetEles = targetMatcher.group();
		
		var alignedVowel = alignment.getAlignedElement(targetEles. get (0));
		var alignedCoda = alignment.getAlignedElement(targetEles. get (1));
		
		if (alignedVowel.isPresent() && alignedVowel. get ().featureSet.hasFeature("V") && alignedVowel. get ().featureSet.hasFeature("Long") && alignedCoda.isEmpty()) {
			var rowData = new Array();
			rowData[0] = (categoryPrinted == false ? category: "");
			rowData[1] = "Compensatory vowel lengthening: " + (new IPATranscriptBuilder().append(targetEles).toIPATranscript().toString()) + " \u2194 " + alignedVowel. get ();
			rowData[2] = new java.lang.Integer(1);
			rowData[3] = "";
			
			retVal.push(targetEles.get(1));
			
			table.addRow(rowData);
		}
	}
	
	return retVal;
}]]>
                                                                    </oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="765" y="308"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="557b2440" type="class:ca.phon.opgraph.nodes.general.TextNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.phon.opgraph.nodes.general.TextNode.text">
                                                                        <![CDATA[%d. /%s/]]>
                                                                    </oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="1443" y="591"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="1c51e75f8c9046d2" name="Feature Checks" type="class:ca.phon.app.opgraph.nodes.table.TableScriptNode">
                                                            <input name="target" optional="false"/>
                                                            <input name="actual" optional="false"/>
                                                            <input name="alignment" optional="false"/>
                                                            <output name="total" type="java.lang.Integer"/>
                                                            <output name="segrelTotal" type="java.lang.Integer"/>
                                                            <output name="featureTotalMap" type="java.util.Map"/>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="__script">
                                                                        <![CDATA[importPackage(Packages.ca.phon.ipa)
importPackage(Packages.ca.phon.ipa.features)
importPackage(Packages.ca.phon.ipa.relations)

var category = "Feature";
var categoryPrinted = false;

function init(inputs, outputs) {
	inputs.add("target", "", false, false);
	inputs.add("actual", "", false, false);
	inputs.add("alignment", "", false, false);

	outputs.add("total", "", false, java.lang.Integer);
	outputs.add("segrelTotal", "", false, java.lang.Integer);
	outputs.add("featureTotalMap", "", false, java.util.Map);
}

function addToDimensionTotal(featureTotalMap, dimension, value) {
	var currentValue = featureTotalMap.get(dimension);
	if(currentValue == null) {
		currentValue = 0;
	}
	currentValue += value;
	featureTotalMap.put(dimension, currentValue);
}

function checkFeatures(table, dimensionFeatures, title, tele, aele) {
	var retVal = 0;
	var targetFeatures = (tele != null ? FeatureSet.intersect(tele.featureSet, dimensionFeatures) : new FeatureSet());
	var actualFeatures = (aele != null ? FeatureSet.intersect(aele.featureSet, dimensionFeatures) : new FeatureSet());
	
	if(!targetFeatures.equals(actualFeatures)) {
		var rowData = new Array();
		rowData[0] = (categoryPrinted == false ? category : "");
		rowData[1] = title + " - " + targetFeatures + " \u2194 " + actualFeatures + ": " + (tele == null ? "\u2205" : tele) + " \u2194 " + (aele == null ? "\u2205" : aele);
		rowData[2] = new java.lang.Integer(1);
		rowData[3] = "";
		table.addRow(rowData);

		++retVal;
		categoryPrinted = true;
	}
	return retVal;
}

function reportDeletionOrEpenthesis(table, tele, aele) {
  var rowData = new Array();
  rowData[0] = (categoryPrinted == false ? category : "");
  var info = "";
  var value = 0;
  if(tele == null) {
    info += "Epenthesis \u2205 \u2194 " + aele;
    value = (aele.featureSet.hasFeature("C")) ? 3 : 4;
  } else if(aele == null) {
    info += "Deletion " + tele + " \u2194 \u2205";
    value = (tele.featureSet.hasFeature("C")) ? 3 : 4;
  }
  rowData[1] = info;
  rowData[2] = new java.lang.Integer(value);
  rowData[3] = "";

  table.addRow(rowData);
  categoryPrinted = true;
}

function checkConsonantFeatures(table, featureTotalMap, tele, aele) {
	var total = 0;

	if(tele == null || aele == null) {
    addToDimensionTotal(featureTotalMap, PhoneDimension.PLACE, 1);
    addToDimensionTotal(featureTotalMap, PhoneDimension.MANNER, 2);
    addToDimensionTotal(featureTotalMap, PhoneDimension.VOICING, 3);

    reportDeletionOrEpenthesis(table, tele, aele);
    
    total += 3;
  } else {
  	var placeVal = checkFeatures(table, PhoneDimension.PLACE.terminalFeatures, "Place", tele, aele);
  	addToDimensionTotal(featureTotalMap, PhoneDimension.PLACE, placeVal);
  	total += placeVal;
  	
  	var mannerVal = checkFeatures(table, PhoneDimension.MANNER.terminalFeatures, "Manner", tele, aele);
  	addToDimensionTotal(featureTotalMap, PhoneDimension.MANNER, mannerVal);
  	total += mannerVal;
  	
  	var voicingVal = checkFeatures(table, PhoneDimension.VOICING.terminalFeatures, "Voicing", tele, aele);
  	addToDimensionTotal(featureTotalMap, PhoneDimension.VOICING, voicingVal);
  	total += voicingVal;
  }
	
	return total;
}

function checkVowelFeatures(table, featureTotalMap, tele, aele) {
	var total = 0;

	if(tele == null || aele == null) {
    addToDimensionTotal(featureTotalMap, PhoneDimension.HEIGHT, 1);
    addToDimensionTotal(featureTotalMap, PhoneDimension.BACKNESS, 1);
    addToDimensionTotal(featureTotalMap, PhoneDimension.TENSENESS, 1);
    addToDimensionTotal(featureTotalMap, PhoneDimension.ROUNDING, 1);

    reportDeletionOrEpenthesis(table, tele, aele);

    total += 4;
  } else {
  	var isSchwa = (tele != null && tele.featureSet.hasFeature("schwa"));

  	var heightVal = checkFeatures(table, PhoneDimension.HEIGHT.terminalFeatures, "Height", tele, aele);
  	addToDimensionTotal(featureTotalMap, PhoneDimension.HEIGHT, heightVal);
  	total += heightVal;
  	
  	var backnessVal = checkFeatures(table, PhoneDimension.BACKNESS.terminalFeatures, "Backness", tele, aele);
  	addToDimensionTotal(featureTotalMap, PhoneDimension.BACKNESS, backnessVal);
  	total += backnessVal;
  	
  	var tensenessVal = checkFeatures(table, PhoneDimension.TENSENESS.terminalFeatures, "Tenseness", tele, aele);
  	addToDimensionTotal(featureTotalMap, PhoneDimension.TENSENESS, tensenessVal);
  	total += tensenessVal;

  	var roundingVal = 0;
  	if(!isSchwa) {
  		roundingVal = checkFeatures(table, PhoneDimension.ROUNDING.terminalFeatures, "Rounding", tele, aele);
  	}
  	addToDimensionTotal(featureTotalMap, PhoneDimension.ROUNDING, roundingVal);
  	total += roundingVal;
  }
  
	return total;
}

function tableOp(context, table) {
	var target = context.get("target");
	var actual = context.get("actual");
	var alignment = context.get("alignment");

	categoryPrinted = false;
	var total = 0;
	var segrelTotal = 0;
	var featureTotalMap = new java.util.HashMap();

	for(var i = 0; i < PhoneDimension.values().length; i++) {
		var pd = PhoneDimension.values()[i];
		featureTotalMap.put(pd, new java.lang.Integer(0));
	}

	// check insertions/deletions
	for(var alignIdx = 0; alignIdx < alignment.alignmentLength; alignIdx++) {
		var alignedElements = alignment.getAlignedElements(alignIdx);

		var targetEle = alignedElements.get(0);
		var actualEle = alignedElements.get(1);

		var isConsonant = (targetEle != null ? targetEle.featureSet.hasFeature("c") : actualEle.featureSet.hasFeature("c"));
		var isSyllabicConsonant = isConsonant && (targetEle != null ? targetEle.featureSet.hasFeature("syllabic") : actualEle.featureSet.hasFeature("syllabic"));

		if(isConsonant && !isSyllabicConsonant) {
			total += checkConsonantFeatures(table, featureTotalMap, targetEle, actualEle);
		} else {
			if(isSyllabicConsonant) {
				targetEle = (targetEle != null ? IPATranscript.parseIPATranscript("\u0259").elementAt(0) : targetEle);
				if(targetEle == null)
					actualEle = (actualEle != null ? IPATranscript.parseIPATranscript("\u0259").elementAt(0) : actualEle);
			}
			total += checkVowelFeatures(table, featureTotalMap, targetEle, actualEle);
		}
	}

	// check segmental relations (consonants only)
	var detector = new SegmentalRelations(true, true);
	var segmentalRelations = detector.detect(alignment);
	for(var i = 0; i < segmentalRelations.size(); i++) {
		var segrel = segmentalRelations.get(i);

		var rowData = new Array();
		rowData[0] = (categoryPrinted == false ? category : "");
		rowData[1] = segrel.toString();
		rowData[2] = new java.lang.Integer(segrel.dimensions.size());
		rowData[3] = "";
		table.addRow(rowData);

		segrelTotal += segrel.dimensions.size();
		total += segrel.dimensions.size();
		categoryPrinted = true;
	}

	// print sub-total
	var rowData = new Array();
	rowData[0] = (categoryPrinted == false ? category : "");
	rowData[1] = category + " subtotal";
	rowData[2] = "";
	rowData[3] = new java.lang.Integer(total);
	table.addRow(rowData);

	context.put("total", new java.lang.Integer(total));
	context.put("segrelTotal", new java.lang.Integer(segrelTotal));
	context.put("featureTotalMap", featureTotalMap);
}
]]>
                                                                    </oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="1033" y="315"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="503779bb2150466f" name="Add Total" type="class:ca.phon.app.opgraph.nodes.table.TableScriptNode">
                                                            <input name="stressSubtotal" optional="false"/>
                                                            <input name="syllableSubtotal" optional="false"/>
                                                            <input name="phoneSubtotal" optional="false"/>
                                                            <input name="featureSubtotal" optional="false"/>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="__script">
                                                                        <![CDATA[
function init(inputs, outputs) {
	inputs.add("stressSubtotal", "", false, false);
	inputs.add("syllableSubtotal", "", false, false);
	inputs.add("phoneSubtotal", "", false, false);
	inputs.add("featureSubtotal", "", false, false);
}

function tableOp(context, table) {
	var stressSubtotal = context.get("stressSubtotal").intValue();
	var syllableSubtotal = context.get("syllableSubtotal").intValue();
	var phoneSubtotal = context.get("phoneSubtotal").intValue();
	var featureSubtotal = context.get("featureSubtotal").intValue();
	var total = stressSubtotal + syllableSubtotal + phoneSubtotal + featureSubtotal;

	row = new Array();
	row[0] = "Total"
	row[1] = "";
	row[2] = "";
	row[3] = new java.lang.Integer(total);
	table.addRow(row);
}
]]>
                                                                    </oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="763" y="556"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="cdc7388f9dba46d5" name="Add row to Word Summary" type="class:ca.phon.app.opgraph.nodes.table.TableScriptNode">
                                                            <input name="session" optional="false"/>
                                                            <input name="result" optional="false"/>
                                                            <input name="ipaActual" optional="false"/>
                                                            <input name="stress subtotal" optional="false"/>
                                                            <input name="syllable subtotal" optional="false"/>
                                                            <input name="phone subtotal" optional="false"/>
                                                            <input name="featureTotalMap" optional="false"/>
                                                            <input name="segrel subtotal" optional="false"/>
                                                            <input name="feature subtotal" optional="false"/>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="__script">
                                                                        <![CDATA[function init(inputs, outputs) {
	inputs.add("session", "", false, false);
	inputs.add("result", "", false, false);
	inputs.add("ipaActual", "", false, false);
	inputs.add("stress subtotal", "", false, false);
	inputs.add("syllable subtotal", "", false, false);
	inputs.add("phone subtotal", "", false, false);
	inputs.add("featureTotalMap", "", false, false);
	inputs.add("segrel subtotal", "", false, false);
	inputs.add("feature subtotal", "", false, false);
}

function tableOp(context, table) {
	var row = [];

	var session = context.get("session");
	var result = context.get("result");
	var ipaActual = context.get("ipaActual");
	var stressSubtotal = context.get("stress subtotal");
	var syllableSubtotal = context.get("syllable subtotal");
	var phoneSubtotal = context.get("phone subtotal");
	var featureSubtotal = context.get("feature subtotal");
	var segrelSubtotal = context.get("segrel subtotal");
	var featureTotalMap = context.get("featureTotalMap");
	var total = stressSubtotal.intValue() + syllableSubtotal.intValue() + phoneSubtotal.intValue() + featureSubtotal.intValue();

	var col = 0;
	row[col++] = session;
	row[col++] = new java.lang.Integer(result.recordIndex+1);
	row[col++] = result;
	row[col++] = ipaActual;
	row[col++] = new java.lang.Integer(stressSubtotal);
	row[col++] = new java.lang.Integer(syllableSubtotal);
	row[col++] = new java.lang.Integer(phoneSubtotal);

	var wordStructureSubtotal = 
		stressSubtotal.intValue() + 
		syllableSubtotal.intValue() + 
		phoneSubtotal.intValue();
	row[col++] = new java.lang.Integer(wordStructureSubtotal);

	row[col++] = new java.lang.Integer( featureTotalMap.get(PhoneDimension.PLACE) );
	row[col++] = new java.lang.Integer( featureTotalMap.get(PhoneDimension.MANNER) );
	row[col++] = new java.lang.Integer( featureTotalMap.get(PhoneDimension.VOICING) );

	var vowelFeatureSubtotal = 
		featureTotalMap.get(PhoneDimension.HEIGHT).intValue() + 
		featureTotalMap.get(PhoneDimension.BACKNESS).intValue() +
		featureTotalMap.get(PhoneDimension.TENSENESS).intValue() +
		featureTotalMap.get(PhoneDimension.ROUNDING).intValue();
		
	row[col++] = new java.lang.Integer(vowelFeatureSubtotal);
	row[col++] = new java.lang.Integer(segrelSubtotal);
	row[col++] = new java.lang.Integer(featureSubtotal);
	row[col++] = new java.lang.Integer(total);

	table.addRow(row);
}
]]>
                                                                    </oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="763" y="758"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="1b60321" type="class:ca.phon.app.opgraph.nodes.report.TableSectionNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.phon.app.opgraph.nodes.report.TableSectionNode.includeColumns">
                                                                        <![CDATA[true]]>
                                                                    </oga:property>
                                                                    <oga:property key="ca.phon.app.opgraph.nodes.report.TableSectionNode.columns"/>
                                                                </oga:settings>
                                                                <oga:meta x="1640" y="591"/>
                                                            </extensions>
                                                        </node>
                                                        <link dest="66b48188" destField="obj" source="e621d9b" sourceField="obj"/>
                                                        <link dest="53ea1651" destField="table" source="44c83169c7b4c88" sourceField="obj"/>
                                                        <link dest="53ea1651" destField="row" source="66b48188" sourceField="obj"/>
                                                        <link dest="7c49dde3" destField="table" source="4864357a" sourceField="table"/>
                                                        <link dest="7c4df945" destField="x" source="66b48188" sourceField="obj"/>
                                                        <link dest="7c49dde3" destField="target" source="53ea1651" sourceField="target"/>
                                                        <link dest="7c49dde3" destField="actual" source="53ea1651" sourceField="actual"/>
                                                        <link dest="7c49dde3" destField="alignment" source="53ea1651" sourceField="alignment"/>
                                                        <link dest="5a1c4954d75143f1" destField="table" source="7c49dde3" sourceField="table"/>
                                                        <link dest="5a1c4954d75143f1" destField="target" source="53ea1651" sourceField="target"/>
                                                        <link dest="5a1c4954d75143f1" destField="actual" source="53ea1651" sourceField="actual"/>
                                                        <link dest="5a1c4954d75143f1" destField="alignment" source="53ea1651" sourceField="alignment"/>
                                                        <link dest="fb980b1aa2984dbb" destField="table" source="5a1c4954d75143f1" sourceField="table"/>
                                                        <link dest="fb980b1aa2984dbb" destField="target" source="53ea1651" sourceField="target"/>
                                                        <link dest="fb980b1aa2984dbb" destField="actual" source="53ea1651" sourceField="actual"/>
                                                        <link dest="1c51e75f8c9046d2" destField="table" source="fb980b1aa2984dbb" sourceField="table"/>
                                                        <link dest="1c51e75f8c9046d2" destField="target" source="53ea1651" sourceField="target"/>
                                                        <link dest="1c51e75f8c9046d2" destField="actual" source="53ea1651" sourceField="actual"/>
                                                        <link dest="1c51e75f8c9046d2" destField="alignment" source="53ea1651" sourceField="alignment"/>
                                                        <link dest="cdc7388f9dba46d5" destField="table" source="441f00ab96d24342" sourceField="obj"/>
                                                        <link dest="cdc7388f9dba46d5" destField="stress subtotal" source="7c49dde3" sourceField="total"/>
                                                        <link dest="cdc7388f9dba46d5" destField="syllable subtotal" source="5a1c4954d75143f1" sourceField="total"/>
                                                        <link dest="cdc7388f9dba46d5" destField="phone subtotal" source="fb980b1aa2984dbb" sourceField="total"/>
                                                        <link dest="cdc7388f9dba46d5" destField="feature subtotal" source="1c51e75f8c9046d2" sourceField="total"/>
                                                        <link dest="503779bb2150466f" destField="table" source="1c51e75f8c9046d2" sourceField="table"/>
                                                        <link dest="503779bb2150466f" destField="stressSubtotal" source="7c49dde3" sourceField="total"/>
                                                        <link dest="503779bb2150466f" destField="syllableSubtotal" source="5a1c4954d75143f1" sourceField="total"/>
                                                        <link dest="503779bb2150466f" destField="phoneSubtotal" source="fb980b1aa2984dbb" sourceField="total"/>
                                                        <link dest="503779bb2150466f" destField="featureSubtotal" source="1c51e75f8c9046d2" sourceField="total"/>
                                                        <link dest="557b2440" destField="objects" source="2ecfd9a2" sourceField="array"/>
                                                        <link dest="1b60321" destField="table" source="503779bb2150466f" sourceField="table"/>
                                                        <link dest="1b60321" destField="sectionName" source="557b2440" sourceField="value"/>
                                                        <link dest="1b60321" destField="parent" source="471bbc46" sourceField="obj"/>
                                                        <link dest="4230c0db" destField="obj" source="7c4df945" sourceField="result"/>
                                                        <link dest="2ecfd9a2" destField="object1" source="4230c0db" sourceField="value"/>
                                                        <link dest="2ecfd9a2" destField="object2" source="53ea1651" sourceField="actual"/>
                                                        <link dest="cdc7388f9dba46d5" destField="ipaActual" source="53ea1651" sourceField="actual"/>
                                                        <link dest="cdc7388f9dba46d5" destField="result" source="53ea1651" sourceField="result"/>
                                                        <link dest="cdc7388f9dba46d5" destField="featureTotalMap" source="1c51e75f8c9046d2" sourceField="featureTotalMap"/>
                                                        <link dest="cdc7388f9dba46d5" destField="session" source="53ea1651" sourceField="session"/>
                                                        <link dest="cdc7388f9dba46d5" destField="segrel subtotal" source="1c51e75f8c9046d2" sourceField="segrelTotal"/>
                                                        <link dest="fb980b1aa2984dbb" destField="alignment" source="53ea1651" sourceField="alignment"/>
                                                        <extensions>
                                                            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                                            <oga:notes>
                                                                <oga:note color="0xffff96" height="1006" title="Inputs" width="320" x="29" y="181"/>
                                                                <oga:note color="0xffff96" height="468" title="Analysis Nodes" width="608" x="710" y="79"/>
                                                            </oga:notes>
                                                        </extensions>
                                                    </graph>
                                                    <ogcn:published_input field="obj" name="wordTable" ref="44c83169c7b4c88"/>
                                                    <ogcn:published_input field="obj" name="speaker" ref="c71ad97d594442ba"/>
                                                    <ogcn:published_input field="obj" name="word" ref="eecc6718a2cd42bc"/>
                                                    <ogcn:published_input field="obj" name="word summary table" ref="441f00ab96d24342"/>
                                                    <ogcn:published_input field="obj" name="wordSection" ref="471bbc46"/>
                                                    <ogcn:published_output field="target" name="target" ref="53ea1651"/>
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.phon.opgraph.nodes.reflect.IterableClassNode.className">
                                                                <![CDATA[java.util.List]]>
                                                            </oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="879" y="283"/>
                                                    </extensions>
                                                </ogcn:macro>
                                                <node id="233b1087" name="Add Row to Participant Summary" type="class:ca.phon.app.opgraph.nodes.table.TableScriptNode">
                                                    <input name="word" optional="false"/>
                                                    <input name="wordSummary" optional="false"/>
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="__script">
                                                                <![CDATA[function init(inputs, outputs) {
	inputs.add("word", "", false, false);
	inputs.add("wordSummary", "", false, false);
}

function tableOp(context, table) {
	var word = context.get("word");
	var wordSummary = context.get("wordSummary");

	var stressTotal = 0;
	var syllableTotal = 0;
	var phoneTotal = 0;
	var wordStructureTotal = 0;
	var placeTotal = 0;
	var mannerTotal = 0;
	var voicingTotal = 0;
	var vowelFeatureTotal = 0;
	var segrelTotal = 0;
	var featureTotal = 0;
	var total = 0;

	for(var row = 0; row < wordSummary.rowCount; row++) {
		var stressSubtotal = wordSummary.getValueAt(row, "Stress Subtotal");
		var syllableSubtotal = wordSummary.getValueAt(row, "Syllable Subtotal");
		var phoneSubtotal = wordSummary.getValueAt(row, "Phone/Timing Unit Subtotal");
		var wordStructureSubtotal = wordSummary.getValueAt(row, "Word Structure Subtotal");
		var placeSubtotal = wordSummary.getValueAt(row, "Place Subtotal");
		var mannerSubtotal = wordSummary.getValueAt(row, "Manner Subtotal");
		var voicingSubtotal = wordSummary.getValueAt(row, "Voicing Subtotal");
		var segrelSubtotal = wordSummary.getValueAt(row, "Segmental Relations Subtotal");
		var vowelFeatureSubtotal = wordSummary.getValueAt(row, "Vowel Feature Subtotal");
		var featureSubtotal = wordSummary.getValueAt(row, "Feature Subtotal");
		var subtotal = wordSummary.getValueAt(row, "Total");

		stressTotal += stressSubtotal.intValue();
		syllableTotal += syllableSubtotal.intValue();
		phoneTotal += phoneSubtotal.intValue();
		wordStructureTotal += wordStructureSubtotal.intValue();
		placeTotal += placeSubtotal.intValue();
		mannerTotal += mannerSubtotal.intValue();
		voicingTotal += voicingSubtotal.intValue();
		vowelFeatureTotal += vowelFeatureSubtotal.intValue();
		segrelTotal += segrelSubtotal.intValue();
		featureTotal += featureSubtotal.intValue();
		total += subtotal.intValue();
	}

	var row = new Array();
	var col = 0;
	row[col++] = word;
	row[col++] = new java.lang.Integer( wordSummary.rowCount );
	row[col++] = new java.lang.Float( stressTotal / wordSummary.rowCount );
	row[col++] = new java.lang.Float( syllableTotal / wordSummary.rowCount );
	row[col++] = new java.lang.Float( phoneTotal / wordSummary.rowCount );
	row[col++] = new java.lang.Float( wordStructureTotal / wordSummary.rowCount );
	row[col++] = new java.lang.Float( placeTotal / wordSummary.rowCount );
	row[col++] = new java.lang.Float( mannerTotal / wordSummary.rowCount );
	row[col++] = new java.lang.Float( voicingTotal / wordSummary.rowCount );
	row[col++] = new java.lang.Float( vowelFeatureTotal / wordSummary.rowCount );
	row[col++] = new java.lang.Float( segrelTotal / wordSummary.rowCount );
	row[col++] = new java.lang.Float( featureTotal / wordSummary.rowCount );
	row[col++] = new java.lang.Float( total / wordSummary.rowCount );
	table.addRow(row);

	row = new Array();
	col = 0;
	row[col++] = "Total";
	row[col++] = "";
	row[col++] = "";
	row[col++] = "";
	row[col++] = new java.lang.Integer( stressTotal );
	row[col++] = new java.lang.Integer( syllableTotal );
	row[col++] = new java.lang.Integer( phoneTotal );
	row[col++] = new java.lang.Integer( wordStructureTotal );
	row[col++] = new java.lang.Integer( placeTotal );
	row[col++] = new java.lang.Integer( mannerTotal );
	row[col++] = new java.lang.Integer( voicingTotal );
	row[col++] = new java.lang.Integer( vowelFeatureTotal );
	row[col++] = new java.lang.Integer( segrelTotal );
	row[col++] = new java.lang.Integer( featureTotal );
	row[col++] = new java.lang.Integer( total );
	wordSummary.addRow(row);
}
]]>
                                                            </oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="942" y="491"/>
                                                    </extensions>
                                                </node>
                                                <node id="360945e6" type="class:ca.phon.opgraph.nodes.general.ArrayNode">
                                                    <input name="object1" optional="false">object in array</input>
                                                    <input name="object2" optional="false">object in array</input>
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.phon.opgraph.nodes.general.ArrayNode.numObjects">
                                                                <![CDATA[2]]>
                                                            </oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="794" y="874"/>
                                                    </extensions>
                                                </node>
                                                <node id="672eb124" name="Table Section - Word Summary" type="class:ca.phon.app.opgraph.nodes.report.TableSectionNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.phon.app.opgraph.nodes.report.TableSectionNode.includeColumns">
                                                                <![CDATA[false]]>
                                                            </oga:property>
                                                            <oga:property key="ca.phon.app.opgraph.nodes.report.TableSectionNode.columns">
                                                                <![CDATA[Result]]>
                                                            </oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="1244" y="485">
                                                            <oga:default for="sectionName" type="java.lang.String">Summary</oga:default>
                                                            <oga:default for="addToBeginning" type="java.lang.Boolean">true</oga:default>
                                                        </oga:meta>
                                                    </extensions>
                                                </node>
                                                <node id="3e64abf2" type="class:ca.phon.opgraph.nodes.general.TextNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.phon.opgraph.nodes.general.TextNode.text">
                                                                <![CDATA[%s /%s/]]>
                                                            </oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="980" y="869"/>
                                                    </extensions>
                                                </node>
                                                <node id="1d5c798dad4643c4" name="Report Section - Word" type="class:ca.phon.opgraph.nodes.reflect.ObjectNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.phon.opgraph.nodes.reflect.ObjectNode.declaredClass">
                                                                <![CDATA[ca.phon.app.opgraph.report.tree.ReportTreeNode]]>
                                                            </oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="1191" y="859"/>
                                                    </extensions>
                                                </node>
                                                <link dest="3b6ad62cb6cb44c2" destField="word" source="6509644b" sourceField="obj"/>
                                                <link dest="3b6ad62cb6cb44c2" destField="tableMap" source="f1f6f32ddb4640ed" sourceField="obj"/>
                                                <link dest="3dcd32be" destField="obj" source="3b6ad62cb6cb44c2" sourceField="table"/>
                                                <link dest="16b901d9" destField="collection" source="68df0ab3" sourceField="range"/>
                                                <link dest="16b901d9" destField="wordTable" source="3dcd32be" sourceField="obj"/>
                                                <link dest="68df0ab3" destField="start" source="65755225" sourceField="value"/>
                                                <link dest="16b901d9" destField="speaker" source="52d918b714944c6d" sourceField="obj"/>
                                                <link dest="16b901d9" destField="word" source="6509644b" sourceField="obj"/>
                                                <link dest="68df0ab3" destField="end" source="1de76ae9" sourceField="result"/>
                                                <link dest="1de76ae9" destField="rowCount" source="3dcd32be" sourceField="rowCount"/>
                                                <link dest="361a467e" destField="obj" source="6509644b" sourceField="obj"/>
                                                <link dest="16b901d9" destField="word summary table" source="d24944a725434695" sourceField="table"/>
                                                <link dest="233b1087" destField="table" source="e421f549a6544693" sourceField="obj"/>
                                                <link dest="233b1087" destField="word" source="361a467e" sourceField="value"/>
                                                <link dest="233b1087" destField="wordSummary" source="d24944a725434695" sourceField="table"/>
                                                <link dest="233b1087" destField="enabled" source="16b901d9" sourceField="finished"/>
                                                <link dest="672eb124" destField="table" source="d24944a725434695" sourceField="table"/>
                                                <link dest="672eb124" destField="parent" source="7c4d0c5" sourceField="section"/>
                                                <link dest="7c4d0c5" destField="parent" source="6f611205" sourceField="obj"/>
                                                <link dest="16b901d9" destField="wordSection" source="7c4d0c5" sourceField="section"/>
                                                <link dest="360945e6" destField="object1" source="361a467e" sourceField="value"/>
                                                <link dest="360945e6" destField="object2" source="16b901d9" sourceField="target"/>
                                                <link dest="3e64abf2" destField="objects" source="360945e6" sourceField="array"/>
                                                <link dest="1d5c798dad4643c4" destField="obj" source="7c4d0c5" sourceField="section"/>
                                                <link dest="1d5c798dad4643c4" destField="title" source="3e64abf2" sourceField="value"/>
                                                <link dest="672eb124" destField="enabled" source="233b1087" sourceField="finished"/>
                                                <extensions>
                                                    <oga:notes>
                                                        <oga:note color="0xffff96" height="839" title="Inputs" width="303" x="19" y="122"/>
                                                        <oga:note color="0x9696ff" height="260" title="Setup Word Section Title" width="845" x="640" y="830"/>
                                                    </oga:notes>
                                                    <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                                </extensions>
                                            </graph>
                                            <ogcn:published_input field="obj" name="tableMap" ref="f1f6f32ddb4640ed"/>
                                            <ogcn:published_input field="obj" name="speaker" ref="52d918b714944c6d"/>
                                            <ogcn:published_input field="obj" name="summaryTable" ref="e421f549a6544693"/>
                                            <ogcn:published_input field="obj" name="participantSection" ref="6f611205"/>
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.phon.opgraph.nodes.reflect.IterableClassNode.className">
                                                        <![CDATA[java.util.ArrayList]]>
                                                    </oga:property>
                                                </oga:settings>
                                                <oga:meta x="846" y="63"/>
                                            </extensions>
                                        </ogcn:macro>
                                        <node id="1a7d58f06638428a" name="Add Aggregate Row to Participant Summary" type="class:ca.phon.app.opgraph.nodes.table.TableScriptNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="__script">
                                                        <![CDATA[function init(inputs, outputs) {
}

function tableOp(context, table) {
	var productions = 0;
	var stressTotal = 0;
	var syllableTotal = 0;
	var phoneTotal = 0;
	var wordStructureTotal = 0;
	var placeTotal = 0;
	var mannerTotal = 0;
	var voicingTotal = 0;
	var vowelFeatureTotal = 0;
	var segrelTotal = 0;
	var featureTotal = 0;
	var total = 0;

	for(var row = 0; row < table.rowCount; row++) {
		var productionSubtotal = table.getValueAt(row, "Productions");
		var stressSubtotal = table.getValueAt(row, "Stress Subtotal");
		var syllableSubtotal = table.getValueAt(row, "Syllable Subtotal");
		var phoneSubtotal = table.getValueAt(row, "Phone/Timing Unit Subtotal");
		var wordStructureSubtotal = table.getValueAt(row, "Word Structure Subtotal");
		var placeSubtotal = table.getValueAt(row, "Place Subtotal");
		var mannerSubtotal = table.getValueAt(row, "Manner Subtotal");
		var voicingSubtotal = table.getValueAt(row, "Voicing Subtotal");
		var segrelSubtotal = table.getValueAt(row, "Segmental Relations Subtotal");
		var vowelFeatureSubtotal = table.getValueAt(row, "Vowel Feature Subtotal");
		var featureSubtotal = table.getValueAt(row, "Feature Subtotal");
		var subtotal = table.getValueAt(row, "Total");

		productions += productionSubtotal.intValue();
		stressTotal += stressSubtotal.intValue();
		syllableTotal += syllableSubtotal.intValue();
		phoneTotal += phoneSubtotal.intValue();
		wordStructureTotal += wordStructureSubtotal.intValue();
		placeTotal += placeSubtotal.intValue();
		mannerTotal += mannerSubtotal.intValue();
		voicingTotal += voicingSubtotal.intValue();
		vowelFeatureTotal += vowelFeatureSubtotal.intValue();
		segrelTotal += segrelSubtotal.intValue();
		featureTotal += featureSubtotal.intValue();
		total += subtotal.intValue();
	}

	var row = new Array();
	var col = 0;
	row[col++] = "Total";
	row[col++] = new java.lang.Integer( productions );
	row[col++] = new java.lang.Float( stressTotal );
	row[col++] = new java.lang.Float( syllableTotal );
	row[col++] = new java.lang.Float( phoneTotal );
	row[col++] = new java.lang.Float( wordStructureTotal );
	row[col++] = new java.lang.Float( placeTotal );
	row[col++] = new java.lang.Float( mannerTotal  );
	row[col++] = new java.lang.Float( voicingTotal );
	row[col++] = new java.lang.Float( vowelFeatureTotal );
	row[col++] = new java.lang.Float( segrelTotal );
	row[col++] = new java.lang.Float( featureTotal );
	row[col++] = new java.lang.Float( total );
	table.addRow(row);
}
]]>
                                                    </oga:property>
                                                </oga:settings>
                                                <oga:meta x="735" y="263"/>
                                            </extensions>
                                        </node>
                                        <node id="7ccf1e7b" name="Table Section - Participant Summary" type="class:ca.phon.app.opgraph.nodes.report.TableSectionNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.phon.app.opgraph.nodes.report.TableSectionNode.includeColumns">
                                                        <![CDATA[true]]>
                                                    </oga:property>
                                                    <oga:property key="ca.phon.app.opgraph.nodes.report.TableSectionNode.columns"/>
                                                </oga:settings>
                                                <oga:meta x="1101" y="239">
                                                    <oga:default for="sectionName" type="java.lang.String">Summary</oga:default>
                                                    <oga:default for="addToBeginning" type="java.lang.Boolean">true</oga:default>
                                                </oga:meta>
                                            </extensions>
                                        </node>
                                        <link dest="fe2c969" destField="table" source="963cf1005af4056" sourceField="obj"/>
                                        <link dest="5d82e146" destField="arg1" source="fe2c969" sourceField="keySet"/>
                                        <link dest="66c46f3" destField="collection" source="5d82e146" sourceField="words"/>
                                        <link dest="66c46f3" destField="tableMap" source="fe2c969" sourceField="tableMap"/>
                                        <link dest="66c46f3" destField="speaker" source="66fe60b19f894c38" sourceField="obj"/>
                                        <link dest="66c46f3" destField="summaryTable" source="ec4a79822c44797" sourceField="table"/>
                                        <link dest="7ccf1e7b" destField="parent" source="c9f0edab9bc428a" sourceField="obj"/>
                                        <link dest="66c46f3" destField="participantSection" source="c9f0edab9bc428a" sourceField="obj"/>
                                        <link dest="1a7d58f06638428a" destField="table" source="ec4a79822c44797" sourceField="table"/>
                                        <link dest="7ccf1e7b" destField="table" source="1a7d58f06638428a" sourceField="table"/>
                                        <link dest="1a7d58f06638428a" destField="enabled" source="66c46f3" sourceField="finished"/>
                                        <extensions>
                                            <oga:notes>
                                                <oga:note color="0xffff96" height="765" title="Published Inputs" width="321" x="15" y="19"/>
                                            </oga:notes>
                                            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                        </extensions>
                                    </graph>
                                    <ogcn:published_input field="obj" name="table" ref="963cf1005af4056"/>
                                    <ogcn:published_input field="obj" name="speaker" ref="66fe60b19f894c38"/>
                                    <ogcn:published_input field="obj" name="participantSection" ref="c9f0edab9bc428a"/>
                                    <extensions>
                                        <oga:meta x="748" y="205"/>
                                    </extensions>
                                </ogcn:macro>
                                <link dest="bc3959aa86624ad3" destField="table" source="fda3b374aa2e4b57" sourceField="obj"/>
                                <link dest="bc3959aa86624ad3" destField="speaker" source="32b10bbefcb14fb6" sourceField="obj"/>
                                <link dest="6a732ba0" destField="obj" source="32b10bbefcb14fb6" sourceField="obj"/>
                                <link dest="1b2d8255" destField="sectionName" source="6a732ba0" sourceField="value"/>
                                <link dest="1b2d8255" destField="parent" source="30e857d272394fc2" sourceField="obj"/>
                                <link dest="bc3959aa86624ad3" destField="participantSection" source="1b2d8255" sourceField="section"/>
                                <extensions>
                                    <oga:notes>
                                        <oga:note color="0xffff96" height="890" title="Published Inputs" width="421" x="54" y="167"/>
                                    </oga:notes>
                                    <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                </extensions>
                            </graph>
                            <ogcn:published_input field="obj" name="table" ref="fda3b374aa2e4b57"/>
                            <ogcn:published_input field="obj" name="selectedSessions" ref="a1995dcea18b4ba9"/>
                            <ogcn:published_input field="obj" name="speaker" ref="32b10bbefcb14fb6"/>
                            <ogcn:published_input field="obj" name="reportNode" ref="30e857d272394fc2"/>
                            <extensions>
                                <oga:meta x="788" y="132"/>
                            </extensions>
                        </ogcn:macro>
                        <link dest="e8ae4a39fdd74375" destField="speaker" source="7d1055dcc76e435a" sourceField="obj"/>
                        <link dest="7d1055dcc76e435a" destField="obj" source="4579a77279ca4a66" sourceField="obj"/>
                        <link dest="e8ae4a39fdd74375" destField="tableMap" source="16d59d355bab4424" sourceField="obj"/>
                        <link dest="e9d3beb84fbe42d4" destField="table" source="e8ae4a39fdd74375" sourceField="table"/>
                        <link dest="e9d3beb84fbe42d4" destField="enabled" source="e8ae4a39fdd74375" sourceField="exists"/>
                        <link dest="e9d3beb84fbe42d4" destField="selectedSessions" source="3c9691c6bb004e13" sourceField="obj"/>
                        <link dest="e9d3beb84fbe42d4" destField="speaker" source="7d1055dcc76e435a" sourceField="obj"/>
                        <link dest="e9d3beb84fbe42d4" destField="reportNode" source="cb6dae92775145dc" sourceField="obj"/>
                        <extensions>
                            <oga:notes>
                                <oga:note color="0xffff96" height="620" title="Published Inputs" width="309" x="33" y="160"/>
                            </oga:notes>
                            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                        </extensions>
                    </graph>
                    <ogcn:published_input field="obj" name="tableMap" ref="16d59d355bab4424"/>
                    <ogcn:published_input field="obj" name="selectedSessions" ref="3c9691c6bb004e13"/>
                    <ogcn:published_input field="obj" name="reportNode" ref="cb6dae92775145dc"/>
                    <extensions>
                        <oga:settings>
                            <oga:property key="ca.phon.opgraph.nodes.reflect.IterableClassNode.className">
                                <![CDATA[java.util.ArrayList]]>
                            </oga:property>
                        </oga:settings>
                        <oga:meta x="812" y="182"/>
                    </extensions>
                </ogcn:macro>
                <link dest="e7eb0f6277c94cc7" destField="results" source="a23f99c423d64c49" sourceField="obj"/>
                <link dest="4bb42cb62a99463c" destField="tableMap" source="a067a50295fe48ce" sourceField="tableMap"/>
                <link dest="e7eb0f6277c94cc7" destField="project" source="2564dd40d5ce4021" sourceField="obj"/>
                <link dest="4bb42cb62a99463c" destField="selectedSessions" source="a12ca1eed6584c87" sourceField="obj"/>
                <link dest="4bb42cb62a99463c" destField="collection" source="9a6b0aacb31f456e" sourceField="obj"/>
                <link dest="a067a50295fe48ce" destField="table" source="e7eb0f6277c94cc7" sourceField="table"/>
                <link dest="4bb42cb62a99463c" destField="reportNode" source="f910f307c92840a8" sourceField="obj"/>
                <extensions>
                    <oga:notes>
                        <oga:note color="0xffff96" height="977" title="Published Inputs" width="336" x="9" y="7"/>
                    </oga:notes>
                    <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                </extensions>
            </graph>
            <ogcn:published_input field="obj" name="project" ref="2564dd40d5ce4021"/>
            <ogcn:published_input field="obj" name="results" ref="a23f99c423d64c49"/>
            <ogcn:published_input field="obj" name="selected sessions" ref="a12ca1eed6584c87"/>
            <ogcn:published_input field="obj" name="selected participants" ref="9a6b0aacb31f456e"/>
            <ogcn:published_input field="obj" name="parameters" ref="12b64feb22f6497b"/>
            <ogcn:published_input field="obj" name="report node" ref="f910f307c92840a8"/>
            <extensions>
                <oga:meta x="711" y="106"/>
            </extensions>
        </ogcn:macro>
        <node id="f482e52879a54ef5" name="Parameters Section" type="class:ca.phon.app.opgraph.nodes.report.TextSectionNode">
            <extensions>
                <oga:settings>
                    <oga:property key="ca.phon.app.opgraph.nodes.report.TextSectionNode.text"/>
                </oga:settings>
                <oga:meta x="839" y="447">
                    <oga:default for="sectionName" type="java.lang.String">Parameters</oga:default>
                    <oga:default for="addToBeginning" type="java.lang.Boolean">true</oga:default>
                </oga:meta>
            </extensions>
        </node>
        <link dest="7ca6b2ef" destField="project" source="35a0fbb5" sourceField="obj"/>
        <link dest="7ca6b2ef" destField="sessions" source="6420582b" sourceField="obj"/>
        <link dest="7e7f6d0b48264831" destField="project" source="7ca6b2ef" sourceField="project"/>
        <link dest="7e7f6d0b48264831" destField="results" source="7ca6b2ef" sourceField="results"/>
        <link dest="7e7f6d0b48264831" destField="selected sessions" source="6420582b" sourceField="obj"/>
        <link dest="7e7f6d0b48264831" destField="selected participants" source="338df44a" sourceField="obj"/>
        <link dest="7e7f6d0b48264831" destField="parameters" source="7ca6b2ef" sourceField="parameters"/>
        <link dest="f482e52879a54ef5" destField="text" source="21ca474c5a68487d" sourceField="text"/>
        <link dest="f95a451aa2c64ea9" destField="reportName" source="7cf36fbab95146a8" sourceField="reportTitle"/>
        <link dest="f482e52879a54ef5" destField="parent" source="f95a451aa2c64ea9" sourceField="root"/>
        <link dest="7cf36fbab95146a8" destField="parameters" source="43d39e9b67384156" sourceField="parameters"/>
        <link dest="21ca474c5a68487d" destField="script" source="43d39e9b67384156" sourceField="script"/>
        <link dest="7e7f6d0b48264831" destField="report node" source="f95a451aa2c64ea9" sourceField="root"/>
        <link dest="7ca6b2ef" destField="parameters" source="43d39e9b67384156" sourceField="parameters"/>
        <extensions>
            <opqry:nodewizard type="ca.phon.app.opgraph.analysis.AnalysisWizardExtension">
                <opqry:info format="html" title="Multisyllabic Non-linear">
                    <opqry:message/>
                </opqry:info>
                <opqry:node ref="43d39e9b67384156" showAsStep="true">
                    <opqry:info format="html" title="Parameters">
                        <opqry:message/>
                    </opqry:info>
                </opqry:node>
            </opqry:nodewizard>
            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
        </extensions>
    </graph>
</opgraph>
