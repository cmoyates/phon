<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<opgraph xmlns="http://gedge.ca/ns/opgraph" xmlns:nes="https://www.phon.ca/ns/node_editor" xmlns:oga="http://gedge.ca/ns/opgraph-app" xmlns:ogcn="http://gedge.ca/ns/opgraph-common-nodes" xmlns:opqry="https://phon.ca/ns/opgraph_query" xmlns:qry="http://phon.ling.mun.ca/ns/query">
    <graph id="root">
        <node id="35a0fbb5" name="Project" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
            <extensions>
                <oga:settings>
                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.project.Project]]></oga:property>
                    <oga:property key="contextKey"><![CDATA[_project]]></oga:property>
                </oga:settings>
                <oga:meta x="15" y="14"/>
            </extensions>
        </node>
        <node id="6420582b" name="Selected Sessions" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
            <extensions>
                <oga:settings>
                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.util.ArrayList]]></oga:property>
                    <oga:property key="contextKey"><![CDATA[_selectedSessions]]></oga:property>
                </oga:settings>
                <oga:meta x="15" y="255"/>
            </extensions>
        </node>
        <node id="338df44a" name="Selected Participants" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
            <extensions>
                <oga:settings>
                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.util.ArrayList]]></oga:property>
                    <oga:property key="contextKey"><![CDATA[_selectedParticipants]]></oga:property>
                </oga:settings>
                <oga:meta x="15" y="356"/>
            </extensions>
        </node>
        <node id="43d39e9b67384156" name="Parameters" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
            <extensions>
                <oga:settings>
                    <oga:property key="__script"><![CDATA[var reportTitleParamInfo = {
	"id": "reportTitle",
	"title": "Report Title",
	"def": "Report",
	"prompt": "Enter report title"
};
var reportTitleParam;
var reportTitle = reportTitleParamInfo.def;

function setup_params(params) {
	reportTitleParam = new StringScriptParam(
			reportTitleParamInfo.id,
			reportTitleParamInfo.title,
			reportTitleParamInfo.def);
     reportTitleParam.setPrompt(reportTitleParamInfo.prompt);
	params.add(reportTitleParam);
}
]]></oga:property>
                    <oga:property key="reportTitle"><![CDATA[Word-Level Analysis of Polysyllables]]></oga:property>
                </oga:settings>
                <oga:meta x="15" y="457"/>
            </extensions>
        </node>
        <node id="40e266e4" type="class:ca.phon.app.opgraph.nodes.report.NewReportNode">
            <extensions>
                <oga:settings>
                    <oga:property key="ca.phon.app.opgraph.nodes.report.NewReportNode.setGlobalReport"><![CDATA[false]]></oga:property>
                </oga:settings>
                <oga:meta x="15" y="558"/>
            </extensions>
        </node>
        <opqry:queryNode id="7ca6b2ef" name="Query : Data Tiers" type="ca.phon.app.opgraph.nodes.query.QueryNode">
            <qry:query xmlns="http://phon.ling.mun.ca/ns/query" date="2018-02-09T07:26:52.229-03:30" name="Data Tiers" uuid="ca33c444-b3fa-4d5c-9e00-4cb181221836">
                <script>
                    <url ref="Data Tiers" rel="stock"/>
                    <param id="filters.alignedWord.patternFilter.filter">AA+</param>
                    <param id="filters.alignedWord.patternFilter.filterType">Stress pattern</param>
                    <param id="filters.alignedWord.tier">IPA Target</param>
                    <param id="filters.primary.patternFilter.filter">.+</param>
                    <param id="filters.primary.patternFilter.filterType">Regular expression</param>
                    <param id="filters.primary.tier">Orthography</param>
                    <param id="filters.searchBy.searchBy">Word</param>
                    <param id="filters.word.searchByWord">true</param>
                    <param id="filters.wordTiers.tiers">Target Syllabification, Actual Syllabification, Phone Alignment</param>
                </script>
            </qry:query>
            <extensions>
                <oga:settings/>
                <oga:meta x="399" y="105"/>
            </extensions>
        </opqry:queryNode>
        <ogcn:macro id="b7c53c9330914507" name="Get Report Title" type="ca.gedge.opgraph.nodes.general.MacroNode">
            <graph id="23e15b0a">
                <node id="40d46ee05cb1462c" name="String#&lt;init&gt;(String)" type="class:ca.gedge.opgraph.nodes.reflect.ConstructorNode">
                    <extensions>
                        <oga:settings>
                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.classMember"><![CDATA[<init>(java.lang.String)]]></oga:property>
                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.declaredClass"><![CDATA[java.lang.String]]></oga:property>
                        </oga:settings>
                        <oga:meta x="15" y="15">
                            <oga:default for="arg1" type="java.lang.String">reportTitle</oga:default>
                        </oga:meta>
                    </extensions>
                </node>
                <node id="a8de832c83754f93" name="Map#get(Object)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                    <extensions>
                        <oga:settings>
                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[get(java.lang.Object)]]></oga:property>
                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.util.Map]]></oga:property>
                        </oga:settings>
                        <oga:meta x="215" y="15"/>
                    </extensions>
                </node>
                <node id="5fba0bae341f4e52" name="Object#toString()" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                    <extensions>
                        <oga:settings>
                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[toString()]]></oga:property>
                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.Object]]></oga:property>
                        </oga:settings>
                        <oga:meta x="392" y="15"/>
                    </extensions>
                </node>
                <link dest="a8de832c83754f93" destField="arg1" source="40d46ee05cb1462c" sourceField="value"/>
                <link dest="5fba0bae341f4e52" destField="obj" source="a8de832c83754f93" sourceField="value"/>
            </graph>
            <ogcn:published_input field="obj" name="parameters" ref="a8de832c83754f93"/>
            <ogcn:published_output field="value" name="reportTitle" ref="5fba0bae341f4e52"/>
            <extensions>
                <oga:meta x="246" y="436"/>
            </extensions>
        </ogcn:macro>
        <node id="40612d0c" type="class:ca.phon.app.opgraph.nodes.report.ReportSectionHeaderNode">
            <extensions>
                <oga:meta x="478" y="437"/>
            </extensions>
        </node>
        <ogcn:macro id="7e7f6d0b48264831" name="Report" type="ca.gedge.opgraph.nodes.general.MacroNode">
            <graph id="4d197548">
                <node id="2564dd40d5ce4021" name="project" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                    <extensions>
                        <oga:settings>
                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.project.Project]]></oga:property>
                        </oga:settings>
                        <oga:meta x="42" y="152"/>
                    </extensions>
                </node>
                <node id="a23f99c423d64c49" name="results" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                    <extensions>
                        <oga:settings>
                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[[Lca.phon.query.db.ResultSet;]]></oga:property>
                        </oga:settings>
                        <oga:meta x="42" y="393"/>
                    </extensions>
                </node>
                <node id="a12ca1eed6584c87" name="selectedSessions" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                    <extensions>
                        <oga:settings>
                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.util.ArrayList]]></oga:property>
                        </oga:settings>
                        <oga:meta x="42" y="494"/>
                    </extensions>
                </node>
                <node id="76dc324150b34376" name="Setup Segmental Totals" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                    <output name="totals" type="java.lang.Object"/>
                    <extensions>
                        <oga:settings>
                            <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	outputs.add("totals", "", false, java.lang.Object);
}

function run(context) {
	var totals = {
		"onset": {
			"target": { "count": 0, "positions": [] },
			"correct": { "count": 0, "positions": [] },
			"substitution": { "count": 0, "positions": [] },
			"deletion": { "count": 0, "positions": [] },
			"distortion": { "count": 0, "positions": [] },
			"epenthesis": { "count": 0, "positions": [] }
		},
		"nucleus": {
			"target": { "count": 0, "positions": [] },
			"correct": { "count": 0, "positions": [] },
			"substitution": { "count": 0, "positions": [] },
			"deletion": { "count": 0, "positions": [] },
			"distortion": { "count": 0, "positions": [] },
			"epenthesis": { "count": 0, "positions": [] }
		},
		"coda": {
			"target": { "count": 0, "positions": [] },
			"correct": { "count": 0, "positions": [] },
			"substitution": { "count": 0, "positions": [] },
			"deletion": { "count": 0, "positions": [] },
			"distortion": { "count": 0, "positions": [] },
			"epenthesis": { "count": 0, "positions": [] }
		},
		"unknown": {
			"target": { "count": 0, "positions": [] },
			"correct": { "count": 0, "positions": [] },
			"substitution": { "count": 0, "positions": [] },
			"deletion": { "count": 0, "positions": [] },
			"distortion": { "count": 0, "positions": [] },
			"epenthesis": { "count": 0, "positions": [] }
		}
	};

	context.put("totals", totals);
}
]]></oga:property>
                        </oga:settings>
                        <oga:meta x="778" y="504"/>
                    </extensions>
                </node>
                <node id="9a6b0aacb31f456e" name="selected participants" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                    <extensions>
                        <oga:settings>
                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.util.ArrayList]]></oga:property>
                        </oga:settings>
                        <oga:meta x="42" y="595"/>
                    </extensions>
                </node>
                <node id="962abedafab34827" name="Setup Segmental Inventory" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                    <output name="inventory" type="ca.phon.query.report.datasource.DefaultTableDataSource"/>
                    <extensions>
                        <oga:settings>
                            <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	outputs.add("inventory", "", false, Packages.ca.phon.query.report.datasource.DefaultTableDataSource);
}

function run(context) {
	var inventory = new Packages.ca.phon.query.report.datasource.DefaultTableDataSource();

	inventory.setColumnTitle(0, "IPA Target");
	inventory.setColumnTitle(1, "IPA Actual");
	inventory.setColumnTitle(2, "Count");

	context.put("inventory", inventory);
}
]]></oga:property>
                        </oga:settings>
                        <oga:meta x="778" y="625"/>
                    </extensions>
                </node>
                <node id="2fef4098" name="ReportTreeNode" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                    <extensions>
                        <oga:settings>
                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.app.opgraph.report.tree.ReportTreeNode]]></oga:property>
                        </oga:settings>
                        <oga:meta x="38" y="696"/>
                    </extensions>
                </node>
                <node id="10b0643dd8714757" name="Setup Prosodic Totals" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                    <output name="totals" type="java.lang.Object"/>
                    <extensions>
                        <oga:settings>
                            <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	outputs.add("totals", "", false, java.lang.Object);
}

function run(context) {
	var counts = {
		"syllCount": 0,
		"stressCorrect": {
			"stressed": {
				"initial": 0,
				"medial": 0,
				"final": 0
			},
			"unstressed": {
				"initial": 0,
				"medial": 0,
				"final": 0
			}
		},
		"stressIncorrect": {
			"stressed": {
				"initial": 0,
				"medial": 0,
				"final": 0
			},
			"unstressed": {
				"initial": 0,
				"medial": 0,
				"final": 0
			}
		},
		"fullSyllableAddition": {
			"stressed": {
				"initial": 0,
				"medial": 0,
				"final": 0
			},
			"unstressed": {
				"initial": 0,
				"medial": 0,
				"final": 0
			}
		},
		"fullSyllableDeletion": {
			"stressed": {
				"initial": 0,
				"medial": 0,
				"final": 0
			},
			"unstressed": {
				"initial": 0,
				"medial": 0,
				"final": 0
			}
		},
		"syllableReduction": {
			"onset": {
				"stressed": {
					"initial": 0,
					"medial": 0,
					"final": 0
				},
				"unstressed": {
					"initial": 0,
					"medial": 0,
					"final": 0
				}
			},
			"coda": {
				"stressed": {
					"initial": 0,
					"medial": 0,
					"final": 0
				},
				"unstressed": {
					"initial": 0,
					"medial": 0,
					"final": 0
				}
			},
			"onsetAndCoda": {
				"stressed": {
					"initial": 0,
					"medial": 0,
					"final": 0
				},
				"unstressed": {
					"initial": 0,
					"medial": 0,
					"final": 0
				}
			}
		},
		"syllableExpansion": {
			"onset": {
				"stressed": {
					"initial": 0,
					"medial": 0,
					"final": 0
				},
				"unstressed": {
					"initial": 0,
					"medial": 0,
					"final": 0
				}
			},
			"coda": {
				"stressed": {
					"initial": 0,
					"medial": 0,
					"final": 0
				},
				"unstressed": {
					"initial": 0,
					"medial": 0,
					"final": 0
				}
			},
			"onsetAndCoda": {
				"stressed": {
					"initial": 0,
					"medial": 0,
					"final": 0
				},
				"unstressed": {
					"initial": 0,
					"medial": 0,
					"final": 0
				}
			}
		},
		"cgvCorrect": {
			"stressed": {
				"initial": 0,
				"medial": 0,
				"final": 0
			},
			"unstressed": {
				"initial": 0,
				"medial": 0,
				"final": 0
			}
		},
		"cgvIncorrect": {
			"stressed": {
				"initial": 0,
				"medial": 0,
				"final": 0
			},
			"unstressed": {
				"initial": 0,
				"medial": 0,
				"final": 0
			}
		}
	};

	context.put("totals", counts);
}
]]></oga:property>
                        </oga:settings>
                        <oga:meta x="782" y="822"/>
                    </extensions>
                </node>
                <node id="d3f36ac6e1334f27" name="Setup Prosodic CGV Inventory" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                    <output name="inventory" type="ca.phon.query.report.datasource.DefaultTableDataSource"/>
                    <extensions>
                        <oga:settings>
                            <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	outputs.add("inventory", "", false, Packages.ca.phon.query.report.datasource.DefaultTableDataSource);
}

function run(context) {
	var inventory = new Packages.ca.phon.query.report.datasource.DefaultTableDataSource();

	inventory.setColumnTitle(0, "IPA Target");
	inventory.setColumnTitle(1, "IPA Actual");
	inventory.setColumnTitle(2, "Count");

	context.put("inventory", inventory);
}
]]></oga:property>
                        </oga:settings>
                        <oga:meta x="782" y="943"/>
                    </extensions>
                </node>
                <node id="6004c22ee553432c" name="Setup Prosodic Stress Inventory" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                    <output name="inventory" type="ca.phon.query.report.datasource.DefaultTableDataSource"/>
                    <extensions>
                        <oga:settings>
                            <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	outputs.add("inventory", "", false, Packages.ca.phon.query.report.datasource.DefaultTableDataSource);
}

function run(context) {
	var inventory = new Packages.ca.phon.query.report.datasource.DefaultTableDataSource();

	inventory.setColumnTitle(0, "IPA Target");
	inventory.setColumnTitle(1, "IPA Actual");
	inventory.setColumnTitle(2, "Count");

	context.put("inventory", inventory);
}
]]></oga:property>
                        </oga:settings>
                        <oga:meta x="782" y="1064"/>
                    </extensions>
                </node>
                <node id="781d5398835c4743" name="Setup Word Totals" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                    <output name="totals" type="java.lang.Object"/>
                    <extensions>
                        <oga:settings>
                            <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	outputs.add("totals", "", false, java.lang.Object);
}

function run(context) {
	var counts = {
		"total": 0,
		"correct": 0,
		"syllablesCorrect": 0,
		"stressCorrect": 0,
		"cgvShapeCorrect": 0,
		"transitionsCorrect": 0,
		"transitionsIncorrect": 0
	};

	context.put("totals", counts);
}
]]></oga:property>
                        </oga:settings>
                        <oga:meta x="784" y="1245"/>
                    </extensions>
                </node>
                <node id="6a420b3ea1a74806" name="Setup Word Stress Inventory" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                    <output name="inventory" type="ca.phon.query.report.datasource.DefaultTableDataSource"/>
                    <extensions>
                        <oga:settings>
                            <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	outputs.add("inventory", "", false, Packages.ca.phon.query.report.datasource.DefaultTableDataSource);
}

function run(context) {
	var inventory = new Packages.ca.phon.query.report.datasource.DefaultTableDataSource();

	inventory.setColumnTitle(0, "IPA Target");
	inventory.setColumnTitle(1, "IPA Actual");
	inventory.setColumnTitle(2, "Count");

	context.put("inventory", inventory);
}
]]></oga:property>
                        </oga:settings>
                        <oga:meta x="784" y="1366"/>
                    </extensions>
                </node>
                <node id="e7eb0f6277c94cc7" type="class:ca.phon.app.opgraph.nodes.table.ResultsToTableNode">
                    <extensions>
                        <oga:settings>
                            <oga:property key="includeMetadata"><![CDATA[true]]></oga:property>
                            <oga:property key="includeTierInfo"><![CDATA[true]]></oga:property>
                            <oga:property key="includeSpeakerInfo"><![CDATA[true]]></oga:property>
                            <oga:property key="includeSessionInfo"><![CDATA[true]]></oga:property>
                        </oga:settings>
                        <oga:meta x="378" y="184"/>
                    </extensions>
                </node>
                <node id="a067a50295fe48ce" name="Split Table by Speaker" type="class:ca.phon.app.opgraph.nodes.table.TableScriptNode">
                    <output name="keySet" type="java.util.Set">Unique values from given column name</output>
                    <output name="tableMap" type="java.util.Map">Map of key -&gt; table values</output>
                    <extensions>
                        <oga:settings>
                            <oga:property key="columnName"><![CDATA[Speaker]]></oga:property>
                            <oga:property key="__script"><![CDATA[/*
 * Phon - An open source tool for research in phonology.
 * Copyright (C) 2005 - 2017, Gregory Hedlund <ghedlund@mun.ca> and Yvan Rose <yrose@mun.ca>
 * Dept of Linguistics, Memorial University <https://phon.ca>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

 /**
  * Split Table.js
  *
  * Script for use with ca.phon.app.opgraph.nodes.table.TableScriptNode
  *
  * Split table based on column name.  Two outputs
  * are produced, a set of keys from the column used in the filter  and a
  * map of key -> table values.
  */

var columnParamInfo = {
	"id": "columnName",
	"title": "Column Name",
	"def": "",
	"prompt": "Enter column name"
}

function setup_params(params) {
	var columnParam = new StringScriptParam(
		columnParamInfo.id,
		columnParamInfo.title,
		columnParamInfo.def);
	columnParam.setPrompt(columnParamInfo.prompt);
	params.add(columnParam);
}

// add custom inputs/outputs here
function init(inputs, outputs) {
	outputs.add("keySet", "Unique values from given column name", false, java.util.Set);
	outputs.add("tableMap", "Map of key -> table values", false, java.util.Map);
}

/*
 * Create a new table with the same schema as the inputTable
 */
function setupTable(inputTable) {
    var table = new DefaultTableDataSource();
    for(c = 0; c < inputTable.columnCount; c++) {
	    var colTitle = inputTable.getColumnTitle(c);
	    table.setColumnTitle(c, colTitle);
	}
	return table;
}

// run operation on table
function tableOp(context, table) {
	// find table column index
	col = table.getColumnIndex(columnName);

	if(col < 0)
		return; // column not found

	var tableMap = new java.util.LinkedHashMap();

	for(row = 0; row < table.rowCount; row++) {
	    // use string value as row key
		var rowKey = Packages.ca.phon.formatter.FormatterUtil.format(table.getValueAt(row, col));

		var keyTable = tableMap.get(rowKey);
		if(keyTable == null) {
		    keyTable = setupTable(table);
		    tableMap.put(rowKey, keyTable);
		}
		keyTable.addRow(table.getRow(row));
	}

	context.put("keySet", tableMap.keySet());
	context.put("tableMap", tableMap);
}
]]></oga:property>
                        </oga:settings>
                        <oga:meta x="581" y="184"/>
                    </extensions>
                </node>
                <ogcn:macro id="4bb42cb62a99463c" name="For Each Participant" type="ca.gedge.opgraph.nodes.reflect.IterableClassNode">
                    <graph id="7c5bbeae">
                        <node id="4579a77279ca4a66" name="Current Object" type="class:ca.gedge.opgraph.nodes.reflect.ContextualItemClassNode">
                            <extensions>
                                <oga:settings>
                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ContextualItemClassNode.key"><![CDATA[currentValue]]></oga:property>
                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ContextualItemClassNode.declaredClass"><![CDATA[java.lang.Object]]></oga:property>
                                </oga:settings>
                                <oga:meta x="48" y="48"/>
                            </extensions>
                        </node>
                        <node id="16d59d355bab4424" name="Table Map" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                            <extensions>
                                <oga:settings>
                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.util.Map]]></oga:property>
                                </oga:settings>
                                <oga:meta x="68" y="208"/>
                            </extensions>
                        </node>
                        <node id="3c9691c6bb004e13" name="Selected Sessions" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                            <extensions>
                                <oga:settings>
                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.util.ArrayList]]></oga:property>
                                    <oga:property key="contextKey"><![CDATA[_selectedSessions]]></oga:property>
                                </oga:settings>
                                <oga:meta x="68" y="309"/>
                            </extensions>
                        </node>
                        <node id="6e8d3cbf56644e64" name="Segmental Totals" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                            <extensions>
                                <oga:settings>
                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.lang.Object]]></oga:property>
                                </oga:settings>
                                <oga:meta x="68" y="410"/>
                            </extensions>
                        </node>
                        <node id="109c1849" name="ReportTreeNode" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                            <extensions>
                                <oga:settings>
                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.app.opgraph.report.tree.ReportTreeNode]]></oga:property>
                                </oga:settings>
                                <oga:meta x="68" y="511"/>
                            </extensions>
                        </node>
                        <node id="fa3a91a457e0455e" name="Segmental Inventory" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                            <extensions>
                                <oga:settings>
                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                </oga:settings>
                                <oga:meta x="68" y="692"/>
                            </extensions>
                        </node>
                        <node id="e5b1641ea8924bbc" name="Prosodic Stress Inventory" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                            <extensions>
                                <oga:settings>
                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                </oga:settings>
                                <oga:meta x="68" y="833"/>
                            </extensions>
                        </node>
                        <node id="9204e404e10c4e6c" name="Prosodic CGV Inventory" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                            <extensions>
                                <oga:settings>
                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                </oga:settings>
                                <oga:meta x="68" y="974"/>
                            </extensions>
                        </node>
                        <node id="9678ec6fbbbf4a6c" name="Prosodic Totals" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                            <extensions>
                                <oga:settings>
                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.lang.Object]]></oga:property>
                                </oga:settings>
                                <oga:meta x="68" y="1115"/>
                            </extensions>
                        </node>
                        <node id="267cbb518d6d4d8f" name="Word Totals" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                            <extensions>
                                <oga:settings>
                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.lang.Object]]></oga:property>
                                </oga:settings>
                                <oga:meta x="68" y="1216"/>
                            </extensions>
                        </node>
                        <node id="1ba6fbba018648d6" name="Word Stress Inventory" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                            <extensions>
                                <oga:settings>
                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                </oga:settings>
                                <oga:meta x="68" y="1317"/>
                            </extensions>
                        </node>
                        <node id="7d1055dcc76e435a" name="To Participant Object" type="class:ca.gedge.opgraph.nodes.reflect.ObjectCastNode">
                            <extensions>
                                <oga:settings>
                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectCastNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                </oga:settings>
                                <oga:meta x="224" y="49"/>
                            </extensions>
                        </node>
                        <ogcn:macro id="e8ae4a39fdd74375" name="Get Table of Results For Speaker" type="ca.gedge.opgraph.nodes.general.MacroNode">
                            <graph id="fbbf74e">
                                <node id="7a99452f69514e84" name="Object#toString()" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[toString()]]></oga:property>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.Object]]></oga:property>
                                        </oga:settings>
                                        <oga:meta x="105" y="70"/>
                                    </extensions>
                                </node>
                                <node id="2aa78b824a3b47b5" name="Map#get(Object)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[get(java.lang.Object)]]></oga:property>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.util.Map]]></oga:property>
                                        </oga:settings>
                                        <oga:meta x="296" y="73"/>
                                    </extensions>
                                </node>
                                <node id="6d807e2151704bab" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                                    <output name="exists" type="java.lang.Boolean">does table exist</output>
                                    <output name="table" type="ca.phon.query.report.datasource.DefaultTableDataSource">table if exists, undefined otherwise</output>
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="__script"><![CDATA[
// setup input/output fields
function init(inputFields, outputFields) {
	inputFields.add("table", "");
	outputFields.add("exists", "does table exist", false, java.lang.Boolean);
	outputFields.add("table", "table if exists, undefined otherwise", false, Packages.ca.phon.query.report.datasource.DefaultTableDataSource);
}

function run(context) {
	var tableExists =
		(context.containsKey("table") && context.get("table") != null);
	context.put("exists", tableExists);
	context.put("table", context.get("table"));
}
]]></oga:property>
                                        </oga:settings>
                                        <oga:meta x="514" y="94"/>
                                    </extensions>
                                </node>
                                <link dest="2aa78b824a3b47b5" destField="arg1" source="7a99452f69514e84" sourceField="value"/>
                                <link dest="6d807e2151704bab" destField="table" source="2aa78b824a3b47b5" sourceField="value"/>
                                <extensions>
                                    <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                </extensions>
                            </graph>
                            <ogcn:published_input field="obj" name="speaker" ref="7a99452f69514e84"/>
                            <ogcn:published_input field="obj" name="tableMap" ref="2aa78b824a3b47b5"/>
                            <ogcn:published_output field="exists" name="exists" ref="6d807e2151704bab"/>
                            <ogcn:published_output field="table" name="table" ref="6d807e2151704bab"/>
                            <extensions>
                                <oga:meta x="508" y="129"/>
                            </extensions>
                        </ogcn:macro>
                        <ogcn:macro id="e9d3beb84fbe42d4" name="If Speaker has Results" type="ca.gedge.opgraph.nodes.general.MacroNode">
                            <graph id="635363b0">
                                <node id="fda3b374aa2e4b57" name="Table" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                        </oga:settings>
                                        <oga:meta x="100" y="177"/>
                                    </extensions>
                                </node>
                                <node id="a1995dcea18b4ba9" name="Selected Sessions" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.util.ArrayList]]></oga:property>
                                            <oga:property key="contextKey"><![CDATA[_selectedSessions]]></oga:property>
                                        </oga:settings>
                                        <oga:meta x="109" y="327"/>
                                    </extensions>
                                </node>
                                <node id="32b10bbefcb14fb6" name="Participant" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                        </oga:settings>
                                        <oga:meta x="101" y="443"/>
                                    </extensions>
                                </node>
                                <node id="57b2fd38a4c54ca8" name="Setup Segmental Totals" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                                    <output name="totals" type="java.lang.Object"/>
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	outputs.add("totals", "", false, java.lang.Object);
}

function run(context) {
	var totals = {
		"onset": {
			"target": { "count": 0, "positions": [] },
			"correct": { "count": 0, "positions": [] },
			"substitution": { "count": 0, "positions": [] },
			"deletion": { "count": 0, "positions": [] },
			"distortion": { "count": 0, "positions": [] },
			"epenthesis": { "count": 0, "positions": [] }
		},
		"nucleus": {
			"target": { "count": 0, "positions": [] },
			"correct": { "count": 0, "positions": [] },
			"substitution": { "count": 0, "positions": [] },
			"deletion": { "count": 0, "positions": [] },
			"distortion": { "count": 0, "positions": [] },
			"epenthesis": { "count": 0, "positions": [] }
		},
		"coda": {
			"target": { "count": 0, "positions": [] },
			"correct": { "count": 0, "positions": [] },
			"substitution": { "count": 0, "positions": [] },
			"deletion": { "count": 0, "positions": [] },
			"distortion": { "count": 0, "positions": [] },
			"epenthesis": { "count": 0, "positions": [] }
		},
		"unknown": {
			"target": { "count": 0, "positions": [] },
			"correct": { "count": 0, "positions": [] },
			"substitution": { "count": 0, "positions": [] },
			"deletion": { "count": 0, "positions": [] },
			"distortion": { "count": 0, "positions": [] },
			"epenthesis": { "count": 0, "positions": [] }
		}
	};

	context.put("totals", totals);
}
]]></oga:property>
                                        </oga:settings>
                                        <oga:meta x="628" y="717"/>
                                    </extensions>
                                </node>
                                <node id="5db72372" name="ReportTreeNode" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.app.opgraph.report.tree.ReportTreeNode]]></oga:property>
                                        </oga:settings>
                                        <oga:meta x="81" y="767"/>
                                    </extensions>
                                </node>
                                <node id="bbe78aecd8f94ff5" name="Setup Segmental Inventory" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                                    <output name="inventory" type="ca.phon.query.report.datasource.DefaultTableDataSource"/>
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	outputs.add("inventory", "", false, Packages.ca.phon.query.report.datasource.DefaultTableDataSource);
}

function run(context) {
	var inventory = new Packages.ca.phon.query.report.datasource.DefaultTableDataSource();

	inventory.setColumnTitle(0, "IPA Target");
	inventory.setColumnTitle(1, "IPA Actual");
	inventory.setColumnTitle(2, "Count");

	context.put("inventory", inventory);
}
]]></oga:property>
                                        </oga:settings>
                                        <oga:meta x="628" y="838"/>
                                    </extensions>
                                </node>
                                <node id="804e47177ea847a3" name="Setup Prosodic Totals" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                                    <output name="totals" type="java.lang.Object"/>
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	outputs.add("totals", "", false, java.lang.Object);
}

function run(context) {
	var counts = {
		"syllCount": 0,
		"stressCorrect": {
			"stressed": {
				"initial": 0,
				"medial": 0,
				"final": 0
			},
			"unstressed": {
				"initial": 0,
				"medial": 0,
				"final": 0
			}
		},
		"stressIncorrect": {
			"stressed": {
				"initial": 0,
				"medial": 0,
				"final": 0
			},
			"unstressed": {
				"initial": 0,
				"medial": 0,
				"final": 0
			}
		},
		"fullSyllableAddition": {
			"stressed": {
				"initial": 0,
				"medial": 0,
				"final": 0
			},
			"unstressed": {
				"initial": 0,
				"medial": 0,
				"final": 0
			}
		},
		"fullSyllableDeletion": {
			"stressed": {
				"initial": 0,
				"medial": 0,
				"final": 0
			},
			"unstressed": {
				"initial": 0,
				"medial": 0,
				"final": 0
			}
		},
		"syllableReduction": {
			"onset": {
				"stressed": {
					"initial": 0,
					"medial": 0,
					"final": 0
				},
				"unstressed": {
					"initial": 0,
					"medial": 0,
					"final": 0
				}
			},
			"coda": {
				"stressed": {
					"initial": 0,
					"medial": 0,
					"final": 0
				},
				"unstressed": {
					"initial": 0,
					"medial": 0,
					"final": 0
				}
			},
			"onsetAndCoda": {
				"stressed": {
					"initial": 0,
					"medial": 0,
					"final": 0
				},
				"unstressed": {
					"initial": 0,
					"medial": 0,
					"final": 0
				}
			}
		},
		"syllableExpansion": {
			"onset": {
				"stressed": {
					"initial": 0,
					"medial": 0,
					"final": 0
				},
				"unstressed": {
					"initial": 0,
					"medial": 0,
					"final": 0
				}
			},
			"coda": {
				"stressed": {
					"initial": 0,
					"medial": 0,
					"final": 0
				},
				"unstressed": {
					"initial": 0,
					"medial": 0,
					"final": 0
				}
			},
			"onsetAndCoda": {
				"stressed": {
					"initial": 0,
					"medial": 0,
					"final": 0
				},
				"unstressed": {
					"initial": 0,
					"medial": 0,
					"final": 0
				}
			}
		},
		"cgvCorrect": {
			"stressed": {
				"initial": 0,
				"medial": 0,
				"final": 0
			},
			"unstressed": {
				"initial": 0,
				"medial": 0,
				"final": 0
			}
		},
		"cgvIncorrect": {
			"stressed": {
				"initial": 0,
				"medial": 0,
				"final": 0
			},
			"unstressed": {
				"initial": 0,
				"medial": 0,
				"final": 0
			}
		}
	};

	context.put("totals", counts);
}
]]></oga:property>
                                        </oga:settings>
                                        <oga:meta x="640" y="1048"/>
                                    </extensions>
                                </node>
                                <node id="dfaaabf7b0d14626" name="Setup Prosodic CGV Inventory" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                                    <output name="inventory" type="ca.phon.query.report.datasource.DefaultTableDataSource"/>
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	outputs.add("inventory", "", false, Packages.ca.phon.query.report.datasource.DefaultTableDataSource);
}

function run(context) {
	var inventory = new Packages.ca.phon.query.report.datasource.DefaultTableDataSource();

	inventory.setColumnTitle(0, "IPA Target");
	inventory.setColumnTitle(1, "IPA Actual");
	inventory.setColumnTitle(2, "Count");

	context.put("inventory", inventory);
}
]]></oga:property>
                                        </oga:settings>
                                        <oga:meta x="640" y="1169"/>
                                    </extensions>
                                </node>
                                <node id="f0d71e1be7cd4dd2" name="Setup Prosodic Stress Inventory" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                                    <output name="inventory" type="ca.phon.query.report.datasource.DefaultTableDataSource"/>
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	outputs.add("inventory", "", false, Packages.ca.phon.query.report.datasource.DefaultTableDataSource);
}

function run(context) {
	var inventory = new Packages.ca.phon.query.report.datasource.DefaultTableDataSource();

	inventory.setColumnTitle(0, "IPA Target");
	inventory.setColumnTitle(1, "IPA Actual");
	inventory.setColumnTitle(2, "Count");

	context.put("inventory", inventory);
}
]]></oga:property>
                                        </oga:settings>
                                        <oga:meta x="640" y="1290"/>
                                    </extensions>
                                </node>
                                <node id="97fdb8b4a9849e3" name="Setup Word Totals" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                                    <output name="totals" type="java.lang.Object"/>
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	outputs.add("totals", "", false, java.lang.Object);
}

function run(context) {
	var counts = {
		"total": 0,
		"correct": 0,
		"syllablesCorrect": 0,
		"stressCorrect": 0,
		"cgvShapeCorrect": 0,
		"transitionsCorrect": 0,
		"transitionsIncorrect": 0
	};

	context.put("totals", counts);
}
]]></oga:property>
                                        </oga:settings>
                                        <oga:meta x="644" y="1520"/>
                                    </extensions>
                                </node>
                                <node id="3d50035ed1d64160" name="Setup Word Stress Inventory" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                                    <output name="inventory" type="ca.phon.query.report.datasource.DefaultTableDataSource"/>
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	outputs.add("inventory", "", false, Packages.ca.phon.query.report.datasource.DefaultTableDataSource);
}

function run(context) {
	var inventory = new Packages.ca.phon.query.report.datasource.DefaultTableDataSource();

	inventory.setColumnTitle(0, "IPA Target");
	inventory.setColumnTitle(1, "IPA Actual");
	inventory.setColumnTitle(2, "Count");

	context.put("inventory", inventory);
}
]]></oga:property>
                                        </oga:settings>
                                        <oga:meta x="644" y="1641"/>
                                    </extensions>
                                </node>
                                <node id="923b1235cde247a8" name="Split Table by Session" type="class:ca.phon.app.opgraph.nodes.table.TableScriptNode">
                                    <output name="keySet" type="java.util.Set">Unique values from given column name</output>
                                    <output name="tableMap" type="java.util.Map">Map of key -&gt; table values</output>
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="columnName"><![CDATA[Session]]></oga:property>
                                            <oga:property key="__script"><![CDATA[/*
 * Phon - An open source tool for research in phonology.
 * Copyright (C) 2005 - 2017, Gregory Hedlund <ghedlund@mun.ca> and Yvan Rose <yrose@mun.ca>
 * Dept of Linguistics, Memorial University <https://phon.ca>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

 /**
  * Split Table.js
  *
  * Script for use with ca.phon.app.opgraph.nodes.table.TableScriptNode
  *
  * Split table based on column name.  Two outputs
  * are produced, a set of keys from the column used in the filter  and a
  * map of key -> table values.
  */

var columnParamInfo = {
	"id": "columnName",
	"title": "Column Name",
	"def": "",
	"prompt": "Enter column name"
}

function setup_params(params) {
	var columnParam = new StringScriptParam(
		columnParamInfo.id,
		columnParamInfo.title,
		columnParamInfo.def);
	columnParam.setPrompt(columnParamInfo.prompt);
	params.add(columnParam);
}

// add custom inputs/outputs here
function init(inputs, outputs) {
	outputs.add("keySet", "Unique values from given column name", false, java.util.Set);
	outputs.add("tableMap", "Map of key -> table values", false, java.util.Map);
}

/*
 * Create a new table with the same schema as the inputTable
 */
function setupTable(inputTable) {
    var table = new DefaultTableDataSource();
    for(c = 0; c < inputTable.columnCount; c++) {
	    var colTitle = inputTable.getColumnTitle(c);
	    table.setColumnTitle(c, colTitle);
	}
	return table;
}

// run operation on table
function tableOp(context, table) {
	// find table column index
	col = table.getColumnIndex(columnName);

	if(col < 0)
		return; // column not found

	var tableMap = new java.util.LinkedHashMap();

	for(row = 0; row < table.rowCount; row++) {
	    // use string value as row key
		var rowKey = Packages.ca.phon.formatter.FormatterUtil.format(table.getValueAt(row, col));

		var keyTable = tableMap.get(rowKey);
		if(keyTable == null) {
		    keyTable = setupTable(table);
		    tableMap.put(rowKey, keyTable);
		}
		keyTable.addRow(table.getRow(row));
	}

	context.put("keySet", tableMap.keySet());
	context.put("tableMap", tableMap);
}
]]></oga:property>
                                        </oga:settings>
                                        <oga:meta x="427" y="287"/>
                                    </extensions>
                                </node>
                                <node id="66eabc39" name="Object#toString()" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[toString()]]></oga:property>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.Object]]></oga:property>
                                        </oga:settings>
                                        <oga:meta x="455" y="459"/>
                                    </extensions>
                                </node>
                                <node id="6ced59c7" type="class:ca.phon.app.opgraph.nodes.report.ReportSectionHeaderNode">
                                    <extensions>
                                        <oga:meta x="655" y="451"/>
                                    </extensions>
                                </node>
                                <ogcn:macro id="cd529cc9bedf4ecc" name="For Each Session" type="ca.gedge.opgraph.nodes.reflect.IterableClassNode">
                                    <graph id="33abce2c">
                                        <node id="9cd592ba93e14241" name="Session Name" type="class:ca.gedge.opgraph.nodes.reflect.ContextualItemClassNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ContextualItemClassNode.key"><![CDATA[currentValue]]></oga:property>
                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ContextualItemClassNode.declaredClass"><![CDATA[java.lang.Object]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="46" y="66"/>
                                            </extensions>
                                        </node>
                                        <node id="22103902a02f452c" name="Table Map" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.util.Map]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="54" y="213"/>
                                            </extensions>
                                        </node>
                                        <node id="2cde07591d49421f" name="Participant" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="54" y="314"/>
                                            </extensions>
                                        </node>
                                        <node id="9d4e5d5c75304010" name="Segmental Totals" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.lang.Object]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="54" y="635"/>
                                            </extensions>
                                        </node>
                                        <node id="64fcff23" name="ReportTreeNode" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.app.opgraph.report.tree.ReportTreeNode]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="54" y="736"/>
                                            </extensions>
                                        </node>
                                        <node id="a5a5820bf71e4629" name="DefaultTableDataSource" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="54" y="917"/>
                                            </extensions>
                                        </node>
                                        <node id="472d740342384f80" name="Prosodic Stress Inventory" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="54" y="1058"/>
                                            </extensions>
                                        </node>
                                        <node id="c4c0c10d49e54042" name="Prosodic CGV Inventory" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="54" y="1199"/>
                                            </extensions>
                                        </node>
                                        <node id="4b1f966a76eb4b88" name="Prosodic Totals" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.lang.Object]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="54" y="1340"/>
                                            </extensions>
                                        </node>
                                        <node id="5a76f6232e654ec7" name="Word Totals" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.lang.Object]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="54" y="1441"/>
                                            </extensions>
                                        </node>
                                        <node id="eedb0526f33e4643" name="Word Stress Inventory" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="57" y="1538"/>
                                            </extensions>
                                        </node>
                                        <ogcn:macro id="d0e50cd137aa45c3" name="Get Table for Session" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                            <graph id="7e18b79a">
                                                <node id="6991d3ca2b8e4413" name="Map" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.util.Map]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="244" y="68"/>
                                                    </extensions>
                                                </node>
                                                <node id="797e76c817014d15" name="Map#get(Object)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[get(java.lang.Object)]]></oga:property>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.util.Map]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="401" y="69"/>
                                                    </extensions>
                                                </node>
                                                <node id="5f8dcecf77fe46f5" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                                                    <output name="exists" type="java.lang.Boolean">does table exist</output>
                                                    <output name="table" type="ca.phon.query.report.datasource.DefaultTableDataSource">table if exists, undefined otherwise</output>
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="__script"><![CDATA[
// setup input/output fields
function init(inputFields, outputFields) {
	inputFields.add("table", "");
	outputFields.add("exists", "does table exist", false, java.lang.Boolean);
	outputFields.add("table", "table if exists, undefined otherwise", false, Packages.ca.phon.query.report.datasource.DefaultTableDataSource);
}

function run(context) {
	var tableExists =
		(context.containsKey("table") && context.get("table") != null);
	context.put("exists", tableExists);
	context.put("table", context.get("table"));
}
]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="555" y="73"/>
                                                    </extensions>
                                                </node>
                                                <link dest="797e76c817014d15" destField="obj" source="6991d3ca2b8e4413" sourceField="obj"/>
                                                <link dest="5f8dcecf77fe46f5" destField="table" source="797e76c817014d15" sourceField="value"/>
                                            </graph>
                                            <ogcn:published_input field="arg1" name="sessionName" ref="797e76c817014d15"/>
                                            <ogcn:published_input field="obj" name="tableMap" ref="6991d3ca2b8e4413"/>
                                            <ogcn:published_output field="exists" name="exists" ref="5f8dcecf77fe46f5"/>
                                            <ogcn:published_output field="table" name="table" ref="5f8dcecf77fe46f5"/>
                                            <extensions>
                                                <oga:meta x="463" y="145"/>
                                            </extensions>
                                        </ogcn:macro>
                                        <ogcn:macro id="c243d0cc85994d01" name="If Speaker has Results for Session" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                            <graph id="65358cd2">
                                                <node id="7481fcacc2964d6d" name="Integer#&lt;init&gt;(String)" type="class:ca.gedge.opgraph.nodes.reflect.ConstructorNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.classMember"><![CDATA[<init>(java.lang.String)]]></oga:property>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.declaredClass"><![CDATA[java.lang.Integer]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="516" y="128">
                                                            <oga:default for="arg1" type="java.lang.String">0</oga:default>
                                                        </oga:meta>
                                                    </extensions>
                                                </node>
                                                <node id="6b3143df3116411b" name="Session Name" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.lang.Object]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="45" y="130"/>
                                                    </extensions>
                                                </node>
                                                <node id="b25c5b3d1d7440da" name="Session Table" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="45" y="231"/>
                                                    </extensions>
                                                </node>
                                                <node id="c221b0481e9c496b" name="Participant" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="45" y="372"/>
                                                    </extensions>
                                                </node>
                                                <node id="3b4467e2" name="Setup Segmental Totals" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                                                    <output name="totals" type="java.lang.Object"/>
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	outputs.add("totals", "", false, java.lang.Object);
}

function run(context) {
	var totals = {
		"onset": {
			"target": { "count": 0, "positions": [] },
			"correct": { "count": 0, "positions": [] },
			"substitution": { "count": 0, "positions": [] },
			"deletion": { "count": 0, "positions": [] },
			"distortion": { "count": 0, "positions": [] },
			"epenthesis": { "count": 0, "positions": [] }
		},
		"nucleus": {
			"target": { "count": 0, "positions": [] },
			"correct": { "count": 0, "positions": [] },
			"substitution": { "count": 0, "positions": [] },
			"deletion": { "count": 0, "positions": [] },
			"distortion": { "count": 0, "positions": [] },
			"epenthesis": { "count": 0, "positions": [] }
		},
		"coda": {
			"target": { "count": 0, "positions": [] },
			"correct": { "count": 0, "positions": [] },
			"substitution": { "count": 0, "positions": [] },
			"deletion": { "count": 0, "positions": [] },
			"distortion": { "count": 0, "positions": [] },
			"epenthesis": { "count": 0, "positions": [] }
		},
		"unknown": {
			"target": { "count": 0, "positions": [] },
			"correct": { "count": 0, "positions": [] },
			"substitution": { "count": 0, "positions": [] },
			"deletion": { "count": 0, "positions": [] },
			"distortion": { "count": 0, "positions": [] },
			"epenthesis": { "count": 0, "positions": [] }
		}
	};

	context.put("totals", totals);
}
]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="933" y="603"/>
                                                    </extensions>
                                                </node>
                                                <node id="4e5e792d" name="ReportTreeNode" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.app.opgraph.report.tree.ReportTreeNode]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="45" y="693"/>
                                                    </extensions>
                                                </node>
                                                <node id="418d68da3a2d4006" name="Setup Segmental Inventory" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                                                    <output name="inventory" type="ca.phon.query.report.datasource.DefaultTableDataSource"/>
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	outputs.add("inventory", "", false, Packages.ca.phon.query.report.datasource.DefaultTableDataSource);
}

function run(context) {
	var inventory = new Packages.ca.phon.query.report.datasource.DefaultTableDataSource();

	inventory.setColumnTitle(0, "IPA Target");
	inventory.setColumnTitle(1, "IPA Actual");
	inventory.setColumnTitle(2, "Count");

	context.put("inventory", inventory);
}
]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="933" y="764"/>
                                                    </extensions>
                                                </node>
                                                <node id="236aab80" name="Setup Prosodic Totals" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                                                    <output name="totals" type="java.lang.Object"/>
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	outputs.add("totals", "", false, java.lang.Object);
}

function run(context) {
	var counts = {
		"syllCount": 0,
		"stressCorrect": {
			"stressed": {
				"initial": 0,
				"medial": 0,
				"final": 0
			},
			"unstressed": {
				"initial": 0,
				"medial": 0,
				"final": 0
			}
		},
		"stressIncorrect": {
			"stressed": {
				"initial": 0,
				"medial": 0,
				"final": 0
			},
			"unstressed": {
				"initial": 0,
				"medial": 0,
				"final": 0
			}
		},
		"fullSyllableAddition": {
			"stressed": {
				"initial": 0,
				"medial": 0,
				"final": 0
			},
			"unstressed": {
				"initial": 0,
				"medial": 0,
				"final": 0
			}
		},
		"fullSyllableDeletion": {
			"stressed": {
				"initial": 0,
				"medial": 0,
				"final": 0
			},
			"unstressed": {
				"initial": 0,
				"medial": 0,
				"final": 0
			}
		},
		"syllableReduction": {
			"onset": {
				"stressed": {
					"initial": 0,
					"medial": 0,
					"final": 0
				},
				"unstressed": {
					"initial": 0,
					"medial": 0,
					"final": 0
				}
			},
			"coda": {
				"stressed": {
					"initial": 0,
					"medial": 0,
					"final": 0
				},
				"unstressed": {
					"initial": 0,
					"medial": 0,
					"final": 0
				}
			},
			"onsetAndCoda": {
				"stressed": {
					"initial": 0,
					"medial": 0,
					"final": 0
				},
				"unstressed": {
					"initial": 0,
					"medial": 0,
					"final": 0
				}
			}
		},
		"syllableExpansion": {
			"onset": {
				"stressed": {
					"initial": 0,
					"medial": 0,
					"final": 0
				},
				"unstressed": {
					"initial": 0,
					"medial": 0,
					"final": 0
				}
			},
			"coda": {
				"stressed": {
					"initial": 0,
					"medial": 0,
					"final": 0
				},
				"unstressed": {
					"initial": 0,
					"medial": 0,
					"final": 0
				}
			},
			"onsetAndCoda": {
				"stressed": {
					"initial": 0,
					"medial": 0,
					"final": 0
				},
				"unstressed": {
					"initial": 0,
					"medial": 0,
					"final": 0
				}
			}
		},
		"cgvCorrect": {
			"stressed": {
				"initial": 0,
				"medial": 0,
				"final": 0
			},
			"unstressed": {
				"initial": 0,
				"medial": 0,
				"final": 0
			}
		},
		"cgvIncorrect": {
			"stressed": {
				"initial": 0,
				"medial": 0,
				"final": 0
			},
			"unstressed": {
				"initial": 0,
				"medial": 0,
				"final": 0
			}
		}
	};

	context.put("totals", counts);
}
]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="933" y="1025"/>
                                                    </extensions>
                                                </node>
                                                <node id="3bf4ef709a6b4654" name="Setup Prosodic CGV Inventory" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                                                    <output name="inventory" type="ca.phon.query.report.datasource.DefaultTableDataSource"/>
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	outputs.add("inventory", "", false, Packages.ca.phon.query.report.datasource.DefaultTableDataSource);
}

function run(context) {
	var inventory = new Packages.ca.phon.query.report.datasource.DefaultTableDataSource();

	inventory.setColumnTitle(0, "IPA Target");
	inventory.setColumnTitle(1, "IPA Actual");
	inventory.setColumnTitle(2, "Count");

	context.put("inventory", inventory);
}
]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="933" y="1200"/>
                                                    </extensions>
                                                </node>
                                                <node id="d8082defc2c34245" name="Setup Prosodic Stress Inventory" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                                                    <output name="inventory" type="ca.phon.query.report.datasource.DefaultTableDataSource"/>
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	outputs.add("inventory", "", false, Packages.ca.phon.query.report.datasource.DefaultTableDataSource);
}

function run(context) {
	var inventory = new Packages.ca.phon.query.report.datasource.DefaultTableDataSource();

	inventory.setColumnTitle(0, "IPA Target");
	inventory.setColumnTitle(1, "IPA Actual");
	inventory.setColumnTitle(2, "Count");

	context.put("inventory", inventory);
}
]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="933" y="1374"/>
                                                    </extensions>
                                                </node>
                                                <node id="930a709c6906488c" name="Setup Word Totals" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                                                    <output name="totals" type="java.lang.Object"/>
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	outputs.add("totals", "", false, java.lang.Object);
}

function run(context) {
	var counts = {
		"total": 0,
		"correct": 0,
		"syllablesCorrect": 0,
		"stressCorrect": 0,
		"cgvShapeCorrect": 0,
		"transitionsCorrect": 0,
		"transitionsIncorrect": 0
	};

	context.put("totals", counts);
}
]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="933" y="1595"/>
                                                    </extensions>
                                                </node>
                                                <node id="d961403f4c754788" name="Setup Word Stress Inventory" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                                                    <output name="inventory" type="ca.phon.query.report.datasource.DefaultTableDataSource"/>
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	outputs.add("inventory", "", false, Packages.ca.phon.query.report.datasource.DefaultTableDataSource);
}

function run(context) {
	var inventory = new Packages.ca.phon.query.report.datasource.DefaultTableDataSource();

	inventory.setColumnTitle(0, "IPA Target");
	inventory.setColumnTitle(1, "IPA Actual");
	inventory.setColumnTitle(2, "Count");

	context.put("inventory", inventory);
}
]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="933" y="1769"/>
                                                    </extensions>
                                                </node>
                                                <node id="5c792a0560b4beb" type="class:ca.gedge.opgraph.nodes.math.MathExpressionNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="significantDigits"><![CDATA[-1]]></oga:property>
                                                            <oga:property key="expression"><![CDATA[rowCount+(-1)]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="525" y="231"/>
                                                    </extensions>
                                                </node>
                                                <node id="d440941" name="Object#toString()" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[toString()]]></oga:property>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.Object]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="420" y="397"/>
                                                    </extensions>
                                                </node>
                                                <node id="a8f4c8d442b84425" type="class:ca.gedge.opgraph.nodes.general.RangeNode">
                                                    <extensions>
                                                        <oga:meta x="742" y="157"/>
                                                    </extensions>
                                                </node>
                                                <node id="2d30e84c" type="class:ca.phon.app.opgraph.nodes.report.ReportSectionHeaderNode">
                                                    <extensions>
                                                        <oga:meta x="631" y="377"/>
                                                    </extensions>
                                                </node>
                                                <ogcn:macro id="6cca2ae5" name="For Each Row" type="ca.gedge.opgraph.nodes.reflect.IterableClassNode">
                                                    <graph id="3f777ae2">
                                                        <node id="36e48cb9" name="Current Object" type="class:ca.gedge.opgraph.nodes.reflect.ContextualItemClassNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ContextualItemClassNode.key"><![CDATA[currentValue]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ContextualItemClassNode.declaredClass"><![CDATA[java.lang.Object]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="60" y="33"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="f150b722d7ce4792" name="DefaultTableDataSource" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="117" y="215"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="37e5d87a8ee2429a" name="Participant" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="111" y="356"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="7d75bcad2044891" name="Segmental Totals" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.lang.Object]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="116" y="682"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="198af750" name="Report Node" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.app.opgraph.report.tree.ReportTreeNode]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="95" y="784"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="1fba7ca21ccf40cb" name="Segmental Inventory" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="109" y="957"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="ae20bdbcf7944aa3" name="Prosodic Stress Inventory" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="112" y="1100"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="41f90df2b5dc4c6a" name="Prosodic CGV Inventory" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="113" y="1254"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="9180f8cb2c484444" name="Prosodic Totals" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.lang.Object]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="137" y="1402"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="33e2b46afe8b4f77" name="Word Level Totals" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.lang.Object]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="125" y="1518"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="abaf83695374a2d" name="Word Stress Inventory" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="122" y="1631"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="64f8407c" name="Row Index" type="class:ca.gedge.opgraph.nodes.reflect.ObjectCastNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectCastNode.declaredClass"><![CDATA[java.lang.Integer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="249" y="42"/>
                                                            </extensions>
                                                        </node>
                                                        <ogcn:macro id="4541ca3a0e544ebd" name="Get Row Data" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                                            <graph id="34daca4b">
                                                                <node id="3bd8dba5cdbd4ce8" name="row" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.lang.Integer]]></oga:property>
                                                                        </oga:settings>
                                                                        <oga:meta x="51" y="70"/>
                                                                    </extensions>
                                                                </node>
                                                                <node id="58ad176b869d422d" name="table" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                                                        </oga:settings>
                                                                        <oga:meta x="37" y="243"/>
                                                                    </extensions>
                                                                </node>
                                                                <node id="90cacaca259b4900" name="DefaultTableDataSource#getRow(int)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[getRow(int)]]></oga:property>
                                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                                                        </oga:settings>
                                                                        <oga:meta x="422" y="104"/>
                                                                    </extensions>
                                                                </node>
                                                                <node id="240a13fb1df0407b" name="DefaultTableDataSource#getColumnIndex(String)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[getColumnIndex(java.lang.String)]]></oga:property>
                                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                                                        </oga:settings>
                                                                        <oga:meta x="467" y="269">
                                                                            <oga:default for="arg1" type="java.lang.String">Orthography</oga:default>
                                                                        </oga:meta>
                                                                    </extensions>
                                                                </node>
                                                                <node id="e034c3d7341b44b0" name="DefaultTableDataSource#getColumnIndex(String)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[getColumnIndex(java.lang.String)]]></oga:property>
                                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                                                        </oga:settings>
                                                                        <oga:meta x="467" y="391">
                                                                            <oga:default for="arg1" type="java.lang.String">Target Syllabification (Word)</oga:default>
                                                                        </oga:meta>
                                                                    </extensions>
                                                                </node>
                                                                <node id="25a90be31b12463e" name="DefaultTableDataSource#getColumnIndex(String)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[getColumnIndex(java.lang.String)]]></oga:property>
                                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                                                        </oga:settings>
                                                                        <oga:meta x="467" y="522">
                                                                            <oga:default for="arg1" type="java.lang.String">Actual Syllabification (Word)</oga:default>
                                                                        </oga:meta>
                                                                    </extensions>
                                                                </node>
                                                                <node id="12baff16e33c49b4" name="DefaultTableDataSource#getColumnIndex(String)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[getColumnIndex(java.lang.String)]]></oga:property>
                                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                                                        </oga:settings>
                                                                        <oga:meta x="467" y="635">
                                                                            <oga:default for="arg1" type="java.lang.String">Phone Alignment (Word)</oga:default>
                                                                        </oga:meta>
                                                                    </extensions>
                                                                </node>
                                                                <node id="85e177d8c46f4d84" name="Get Row Data" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                                                                    <input name="row" optional="false"/>
                                                                    <input name="orthoCol" optional="false"/>
                                                                    <input name="targetCol" optional="false"/>
                                                                    <input name="actualCol" optional="false"/>
                                                                    <input name="alignmentCol" optional="false"/>
                                                                    <output name="orthography" type="java.lang.String"/>
                                                                    <output name="target" type="ca.phon.ipa.IPATranscript"/>
                                                                    <output name="actual" type="ca.phon.ipa.IPATranscript"/>
                                                                    <output name="alignment" type="ca.phon.ipa.alignment.PhoneMap"/>
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	inputs.add("row", "", false, false);
	inputs.add("orthoCol", "", false, false);
	inputs.add("targetCol", "", false, false);
	inputs.add("actualCol", "", false, false);
	inputs.add("alignmentCol", "", false, false);

	outputs.add("orthography", "", false, java.lang.String);
	outputs.add("target", "", false, Packages.ca.phon.ipa.IPATranscript);
	outputs.add("actual", "", false, Packages.ca.phon.ipa.IPATranscript);
	outputs.add("alignment", "", false, Packages.ca.phon.ipa.alignment.PhoneMap);
}

function run(context) {
	var rowData = context.get("row");
	var orthoCol = context.get("orthoCol");
	var targetCol = context.get("targetCol");
	var actualCol = context.get("actualCol");
	var alignmentCol = context.get("alignmentCol");

	var orthoData = rowData[orthoCol];
	var targetData = rowData[targetCol];
	var actualData = rowData[actualCol];
	var alignData = rowData[alignmentCol];

	var target =
		(targetData != null ? Packages.ca.phon.ipa.IPATranscript.parseIPATranscript(rowData[targetCol]) : new Packages.ca.phon.ipa.IPATranscript());
	var actual =
		(actualData != null ? Packages.ca.phon.ipa.IPATranscript.parseIPATranscript(rowData[actualCol]) : new Packages.ca.phon.ipa.IPATranscript());
	var alignment =
		(alignData != null && alignData.length() > 0 ? Packages.ca.phon.ipa.alignment.PhoneMap.fromString(target, actual, rowData[alignmentCol]) : new Packages.ca.phon.ipa.alignment.PhoneMap(target, actual));

	context.put("orthography", orthoData.toString());
	context.put("target", target);
	context.put("actual", actual);
	context.put("alignment", alignment);
}
]]></oga:property>
                                                                        </oga:settings>
                                                                        <oga:meta x="918" y="307"/>
                                                                    </extensions>
                                                                </node>
                                                                <link dest="12baff16e33c49b4" destField="obj" source="58ad176b869d422d" sourceField="obj"/>
                                                                <link dest="25a90be31b12463e" destField="obj" source="58ad176b869d422d" sourceField="obj"/>
                                                                <link dest="e034c3d7341b44b0" destField="obj" source="58ad176b869d422d" sourceField="obj"/>
                                                                <link dest="90cacaca259b4900" destField="arg1" source="3bd8dba5cdbd4ce8" sourceField="obj"/>
                                                                <link dest="90cacaca259b4900" destField="obj" source="58ad176b869d422d" sourceField="obj"/>
                                                                <link dest="85e177d8c46f4d84" destField="targetCol" source="e034c3d7341b44b0" sourceField="value"/>
                                                                <link dest="85e177d8c46f4d84" destField="actualCol" source="25a90be31b12463e" sourceField="value"/>
                                                                <link dest="85e177d8c46f4d84" destField="alignmentCol" source="12baff16e33c49b4" sourceField="value"/>
                                                                <link dest="85e177d8c46f4d84" destField="row" source="90cacaca259b4900" sourceField="value"/>
                                                                <link dest="240a13fb1df0407b" destField="obj" source="58ad176b869d422d" sourceField="obj"/>
                                                                <link dest="85e177d8c46f4d84" destField="orthoCol" source="240a13fb1df0407b" sourceField="value"/>
                                                                <extensions>
                                                                    <oga:notes>
                                                                        <oga:note color="0xffff96" height="624" title="Inputs" width="274" x="28" y="30"/>
                                                                    </oga:notes>
                                                                    <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                                                </extensions>
                                                            </graph>
                                                            <ogcn:published_input field="obj" name="table" ref="58ad176b869d422d"/>
                                                            <ogcn:published_input field="obj" name="row" ref="3bd8dba5cdbd4ce8"/>
                                                            <ogcn:published_output field="target" name="target" ref="85e177d8c46f4d84"/>
                                                            <ogcn:published_output field="actual" name="actual" ref="85e177d8c46f4d84"/>
                                                            <ogcn:published_output field="alignment" name="alignment" ref="85e177d8c46f4d84"/>
                                                            <ogcn:published_output field="orthography" name="orthography" ref="85e177d8c46f4d84"/>
                                                            <extensions>
                                                                <oga:meta x="472" y="214"/>
                                                            </extensions>
                                                        </ogcn:macro>
                                                        <ogcn:macro id="93e56a1c9e0d4fa8" name="WAP" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                                            <graph id="6403c44b">
                                                                <node id="429f5069103f4b19" name="Word" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.lang.String]]></oga:property>
                                                                        </oga:settings>
                                                                        <oga:meta x="55" y="82"/>
                                                                    </extensions>
                                                                </node>
                                                                <node id="ac130279f6464980" name="IPA Target" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.ipa.IPATranscript]]></oga:property>
                                                                        </oga:settings>
                                                                        <oga:meta x="54" y="183"/>
                                                                    </extensions>
                                                                </node>
                                                                <node id="828342a8827348f6" name="IPA Actual" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.ipa.IPATranscript]]></oga:property>
                                                                        </oga:settings>
                                                                        <oga:meta x="53" y="322"/>
                                                                    </extensions>
                                                                </node>
                                                                <node id="126f6847b0734271" name="Alignment" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.ipa.alignment.PhoneMap]]></oga:property>
                                                                        </oga:settings>
                                                                        <oga:meta x="54" y="465"/>
                                                                    </extensions>
                                                                </node>
                                                                <node id="7ff0063dcd5f4c55" name="Word Level Analysis" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                                                                    <input name="target" optional="false"/>
                                                                    <input name="actual" optional="false"/>
                                                                    <input name="alignment" optional="false"/>
                                                                    <output name="table" type="ca.phon.query.report.datasource.DefaultTableDataSource"/>
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="__script"><![CDATA[importPackage(Packages.ca.phon.syllable)
importPackage(Packages.ca.phon.ipa.alignment)
importPackage(Packages.ca.phon.query.report.datasource)

var coverStr = "G=\\g; C=\\c; V=\\v; implicitBoundaries=true; insertSyllableBoundaries=true;";

function init(inputs, outputs) {
	inputs.add("target", "", false, false);
	inputs.add("actual", "", false, false);
	inputs.add("alignment", "", false, false);

	outputs.add("table", "", false, DefaultTableDataSource);
}

function run(context) {
	var target = context.get("target");
	var actual = context.get("actual");
	var alignment = context.get("alignment");

	var syllableAligner = new SyllableAligner();
	var syllAlignment = syllableAligner.calculateSyllableAlignment(target, actual, alignment);

	var outputTable = new DefaultTableDataSource();
	var col = 0;
	outputTable.setColumnTitle(col++, "Category");
	outputTable.setColumnTitle(col++, "Target");
	outputTable.setColumnTitle(col++, "Actual");
	outputTable.setColumnTitle(col++, "Match");

	col = 0;
	var rowData = [];

	var wordMatches = target.toString().equals(actual.toString());
	rowData[col++] = "Word";
	rowData[col++] = target;
	rowData[col++] = actual;
	rowData[col++] = wordMatches;
	outputTable.addRow(rowData);

	col = 0;
	rowData[col++] = "# Syllables";
	rowData[col++] = new java.lang.Integer(target.syllables().size());
	rowData[col++] = new java.lang.Integer(actual.syllables().size());
	rowData[col++] = (target.syllables().size() == actual.syllables().size());
	outputTable.addRow(rowData);

	col = 0;
	rowData[col++] = "Stress";
	rowData[col++] = target.stressPattern;
	rowData[col++] = actual.stressPattern;
	rowData[col++] = (target.stressPattern.equals(actual.stressPattern));
	outputTable.addRow(rowData);

	col = 0;
	rowData[col++] = "CGV Shape";
	rowData[col++] = target.cover(coverStr);
	rowData[col++] = actual.cover(coverStr);
	rowData[col++] = (rowData[1].toString().equals(rowData[2].toString()));
	outputTable.addRow(rowData);

	col = 0;
	rowData[col++] = "# Transitions";
	rowData[col++] = new java.lang.Integer(target.syllables().size()-1);
	rowData[col++] = new java.lang.Integer(actual.syllables().size()-1);
	rowData[col++] = (rowData[1] == rowData[2]);
	outputTable.addRow(rowData);

	col = 0;
	rowData[col++] = "Segregated Transitions";
	rowData[col++] = new java.lang.Integer(0);

	var numPauses = 0;
	var idx = -1;
	while((idx = actual.indexOf("\\p", idx+1)) >= 0) {
		++numPauses;
	}
	rowData[col++] = new java.lang.Integer(numPauses);
	rowData[col++] = (rowData[1] == rowData[2]);
	outputTable.addRow(rowData);

	context.put("table", outputTable);
}
]]></oga:property>
                                                                        </oga:settings>
                                                                        <oga:meta x="689" y="73"/>
                                                                    </extensions>
                                                                </node>
                                                                <node id="d6964130060d4eac" name="Prosodic Level Analysis" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                                                                    <input name="target" optional="false"/>
                                                                    <input name="actual" optional="false"/>
                                                                    <input name="alignment" optional="false"/>
                                                                    <output name="table" type="ca.phon.query.report.datasource.DefaultTableDataSource"/>
                                                                    <output name="stressTable" type="ca.phon.query.report.datasource.DefaultTableDataSource"/>
                                                                    <output name="cgvTable" type="ca.phon.query.report.datasource.DefaultTableDataSource"/>
                                                                    <output name="counts" type="java.lang.Object"/>
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="__script"><![CDATA[importPackage(Packages.ca.phon.syllable)
importPackage(Packages.ca.phon.ipa.alignment)

var coverStr = "G=\\g; C=\\c; V=\\v; stress=false; implicitBoundaries=true; insertSyllableBoundaries=true;";

function init(inputs, outputs) {
	inputs.add("target", "", false, false);
	inputs.add("actual", "", false, false);
	inputs.add("alignment", "", false, false);

	outputs.add("table", "", false, Packages.ca.phon.query.report.datasource.DefaultTableDataSource);
	outputs.add("stressTable", "", false, Packages.ca.phon.query.report.datasource.DefaultTableDataSource);
	outputs.add("cgvTable", "", false, Packages.ca.phon.query.report.datasource.DefaultTableDataSource);
	outputs.add("counts", "", false, java.lang.Object);
}

function run(context) {
	var target = context.get("target");
	var actual = context.get("actual");
	var alignment = context.get("alignment");

	var table = new DefaultTableDataSource();
	var col = 0;
	table.setColumnTitle(col++, "Category");
	table.setColumnTitle(col++, "IPA Target");
	table.setColumnTitle(col++, "IPA Actual");
	table.setColumnTitle(col++, "Position");
	table.setColumnTitle(col++, "Description");

	var syllableAligner = new SyllableAligner();
	var syllAlignment = syllableAligner.calculateSyllableAlignment(target, actual, alignment);

	var counts = {
		"syllCount": 0,
		"stressCorrect": {
			"stressed": {
				"initial": 0,
				"medial": 0,
				"final": 0
			},
			"unstressed": {
				"initial": 0,
				"medial": 0,
				"final": 0
			}
		},
		"stressIncorrect": {
			"stressed": {
				"initial": 0,
				"medial": 0,
				"final": 0
			},
			"unstressed": {
				"initial": 0,
				"medial": 0,
				"final": 0
			}
		},
		"fullSyllableAddition": {
			"stressed": {
				"initial": 0,
				"medial": 0,
				"final": 0
			},
			"unstressed": {
				"initial": 0,
				"medial": 0,
				"final": 0
			}
		},
		"fullSyllableDeletion": {
			"stressed": {
				"initial": 0,
				"medial": 0,
				"final": 0
			},
			"unstressed": {
				"initial": 0,
				"medial": 0,
				"final": 0
			}
		},
		"syllableReduction": {
			"onset": {
				"stressed": {
					"initial": 0,
					"medial": 0,
					"final": 0
				},
				"unstressed": {
					"initial": 0,
					"medial": 0,
					"final": 0
				}
			},
			"coda": {
				"stressed": {
					"initial": 0,
					"medial": 0,
					"final": 0
				},
				"unstressed": {
					"initial": 0,
					"medial": 0,
					"final": 0
				}
			},
			"onsetAndCoda": {
				"stressed": {
					"initial": 0,
					"medial": 0,
					"final": 0
				},
				"unstressed": {
					"initial": 0,
					"medial": 0,
					"final": 0
				}
			}
		},
		"syllableExpansion": {
			"onset": {
				"stressed": {
					"initial": 0,
					"medial": 0,
					"final": 0
				},
				"unstressed": {
					"initial": 0,
					"medial": 0,
					"final": 0
				}
			},
			"coda": {
				"stressed": {
					"initial": 0,
					"medial": 0,
					"final": 0
				},
				"unstressed": {
					"initial": 0,
					"medial": 0,
					"final": 0
				}
			},
			"onsetAndCoda": {
				"stressed": {
					"initial": 0,
					"medial": 0,
					"final": 0
				},
				"unstressed": {
					"initial": 0,
					"medial": 0,
					"final": 0
				}
			}
		},
		"cgvCorrect": {
			"stressed": {
				"initial": 0,
				"medial": 0,
				"final": 0
			},
			"unstressed": {
				"initial": 0,
				"medial": 0,
				"final": 0
			}
		},
		"cgvIncorrect": {
			"stressed": {
				"initial": 0,
				"medial": 0,
				"final": 0
			},
			"unstressed": {
				"initial": 0,
				"medial": 0,
				"final": 0
			}
		}
	};

	performTallies(counts, target, actual, alignment, syllAlignment);

	var stressTable = addStressRows(table, target, actual, alignment, syllAlignment);
	for(var row = 0; row < stressTable.rowCount; row++) {
		var rowData = stressTable.getRow(row);
		table.addRow(rowData);
	}

	var cgvTable = addCGVRows(table, target, actual, alignment, syllAlignment);
	for(var row = 0; row < cgvTable.rowCount; row++) {
		var rowData = cgvTable.getRow(row);
		table.addRow(rowData);
	}

	context.put("table", table);
	context.put("stressTable", stressTable);
	context.put("cgvTable", cgvTable);
	context.put("counts", counts);
}

function performTallies(counts, target, actual, align, syllAlign) {
	counts.targetSyllCounts += syllAlign.alignmentLength;

	for(var alignIdx = 0; alignIdx < syllAlign.alignmentLength; alignIdx++) {
		var alignedEles = syllAlign.getAlignedElements(alignIdx);

		var targetSyll = alignedEles.get(0);
		var targetStress = (targetSyll != null ? targetSyll.getExtension(SyllableStress) : null);

		var actualSyll = alignedEles.get(1);
		var actualStress = (actualSyll != null ? actualSyll.getExtension(SyllableStress) : null);

		var targetSyllIdx = syllAlign.topAlignment[alignIdx];
		var actualSyllIdx = syllAlign.bottomAlignment[alignIdx];

		var stress =
			(targetStress != null
				? (targetStress == SyllableStress.NoStress ? "unstressed" : "stressed")
				: (actualStress == SyllableStress.NoStress ? "unstressed" : "stressed"));

		var position =
			(targetSyllIdx >= 0
				? (targetSyllIdx == 0 ? "initial" : (targetSyllIdx < target.syllables().size()-1 ? "medial" : "final"))
				: (actualSyllIdx == 0 ? "initial" : (actualSyllIdx < actual.syllables().size()-1 ? "medial" : "final")));
		counts.syllCount++;

		if(targetStress == actualStress) {
			counts.stressCorrect[stress][position]++;
		} else {
			counts.stressIncorrect[stress][position]++;
		}
		if(targetSyll == null || actualSyll == null) {
			if(targetSyll == null) {
				counts.fullSyllableAddition[stress][position]++;
			} else {
				counts.fullSyllableDeletion[stress][position]++;
			}
			counts.cgvIncorrect[stress][position]++;
		} else {
			if(targetSyll.cover(coverStr).toString().equals(actualSyll.cover(coverStr).toString())) {
				counts.cgvCorrect[stress][position]++;
			} else {
				counts.cgvIncorrect[stress][position]++;
			}

			//expansion/reduction
			var numTargetO = 0;
			var numTargetC = 0;
			for(var i = 0; i < targetSyll.length(); i++) {
				var targetEle = targetSyll.elementAt(i);
				if(targetEle.scType == SyllableConstituentType.ONSET) {
					++numTargetO;
				} else if(targetEle.scType == SyllableConstituentType.CODA) {
					++numTargetC;
				}
			}

			var numActualO = 0;
			var numActualC = 0;
			for(var i = 0; i < actualSyll.length(); i++) {
				var actualEle = actualSyll.elementAt(i);
				if(actualEle.scType == SyllableConstituentType.ONSET) {
					++numActualO;
				} else if(actualEle.scType == SyllableConstituentType.CODA) {
					++numActualC;
				}
			}

			if(numActualO != numTargetO) {
				if(numActualO < numTargetO) {
					counts.syllableReduction.onset[stress][position]++;
				} else {
					counts.syllableExpansion.onset[stress][position]++;
				}
			}

			if(numActualC != numTargetC) {
				if(numActualC < numTargetC) {
					counts.syllableReduction.coda[stress][position]++;
				} else {
					counts.syllableExpansion.coda[stress][position]++;
				}
			}
		}
	}
}

function addStressRows(table, target, actual, align, syllAlign) {
	var table = new DefaultTableDataSource();
	var col = 0;
	table.setColumnTitle(col++, "Category");
	table.setColumnTitle(col++, "IPA Target");
	table.setColumnTitle(col++, "IPA Actual");
	table.setColumnTitle(col++, "Position");
	table.setColumnTitle(col++, "Description");

	col = 0;
	var rowData = [];
	for(var alignIdx = 0; alignIdx < syllAlign.alignmentLength; alignIdx++) {
		var alignedEles = syllAlign.getAlignedElements(alignIdx);

		var targetSyll = alignedEles.get(0);
		var actualSyll = alignedEles.get(1);

		var targetSyllIdx = syllAlign.topAlignment[alignIdx];
		var actualSyllIdx = syllAlign.bottomAlignment[alignIdx];

		col = 0;
		rowData[col++] = (alignIdx == 0 ? "Stress" : "");
		rowData[col++] = (targetSyll != null ? targetSyll.stressPattern : "\u2205");
		rowData[col++] = (actualSyll != null ? actualSyll.stressPattern : "\u2205");

		var position =
			(targetSyllIdx >= 0
				? (targetSyllIdx == 0 ? "Initial" : (targetSyllIdx < target.syllables().size()-1 ? "Medial" : "Final"))
				: (actualSyllIdx == 0 ? "Initial" : (actualSyllIdx < actual.syllables().size()-1 ? "Medial" : "Final")));
		rowData[col++] = position;

		var description = (rowData[1] == rowData[2] ? "Correct" : "Incorrect");
		if(targetSyll == null || actualSyll == null) {
			if(targetSyll == null)
				description = "Syllable Epenthesis";
			else
				description = "Full Syllable Deletion";
		}
		rowData[col++] = description;

		table.addRow(rowData);
	}

	return table;
}

function addCGVRows(table, target, actual, align, syllAlign) {
	var table = new DefaultTableDataSource();
	var col = 0;
	table.setColumnTitle(col++, "Category");
	table.setColumnTitle(col++, "IPA Target");
	table.setColumnTitle(col++, "IPA Actual");
	table.setColumnTitle(col++, "Position");
	table.setColumnTitle(col++, "Description");

	col = 0;
	var rowData = [];
	for(var alignIdx = 0; alignIdx < syllAlign.alignmentLength; alignIdx++) {
		var alignedEles = syllAlign.getAlignedElements(alignIdx);

		var targetSyll = alignedEles.get(0);
		var actualSyll = alignedEles.get(1);

		var targetSyllIdx = syllAlign.topAlignment[alignIdx];
		var actualSyllIdx = syllAlign.bottomAlignment[alignIdx];

		col = 0;
		rowData[col++] = (alignIdx == 0 ? "CGV Pattern" : "");
		rowData[col++] = (targetSyll != null ? targetSyll.cover(coverStr) : "\u2205");
		rowData[col++] = (actualSyll != null ? actualSyll.cover(coverStr) : "\u2205");

		var position =
			(targetSyllIdx >= 0
				? (targetSyllIdx == 0 ? "Initial" : (targetSyllIdx < target.syllables().size()-1 ? "Medial" : "Final"))
				: (actualSyllIdx == 0 ? "Initial" : (actualSyllIdx < actual.syllables().size()-1 ? "Medial" : "Final")));
		rowData[col++] = position;

		var description = (rowData[1].toString() == rowData[2].toString() ? "Correct" : "Incorrect");
		if(targetSyll == null || actualSyll == null) {
			if(targetSyll == null)
				description = "Syllable Epenthesis";
			else
				description = "Full Syllable Deletion";
		}
		rowData[col++] = description;

		table.addRow(rowData);
	}

	return table;
}
]]></oga:property>
                                                                        </oga:settings>
                                                                        <oga:meta x="681" y="438"/>
                                                                    </extensions>
                                                                </node>
                                                                <node id="feaa6135ab9f4863" name="Segmental Level Analysis" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                                                                    <input name="target" optional="false"/>
                                                                    <input name="actual" optional="false"/>
                                                                    <input name="alignment" optional="false"/>
                                                                    <output name="table" type="ca.phon.query.report.datasource.DefaultTableDataSource"/>
                                                                    <output name="counts" type="java.lang.Object"/>
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="__script"><![CDATA[importPackage(Packages.ca.phon.syllable)
importPackage(Packages.ca.phon.ipa.alignment)
importPackage(Packages.ca.phon.ipa.relations)

var ignoreDiacriticsParamInfo = {
	"id": "options.ignoreDiacritics",
	"title": "Ignore diacritics",
	"def": false,
	"desc": ""
};
var ignoreDiacriticsParam;
var options = {
	"ignoreDiacritics": ignoreDiacriticsParamInfo.def
};

function init(inputs, outputs) {
	inputs.add("target", "", false, false);
	inputs.add("actual", "", false, false);
	inputs.add("alignment", "", false, false);

	outputs.add("table", "", false, Packages.ca.phon.query.report.datasource.DefaultTableDataSource);
	outputs.add("counts", "", false, java.lang.Object);
}

function setup_params(params) {
	ignoreDiacriticsParam = new BooleanScriptParam(
		ignoreDiacriticsParamInfo.id,
		ignoreDiacriticsParamInfo.title,
		ignoreDiacriticsParamInfo.desc,
		ignoreDiacriticsParamInfo.def);
	params.add(ignoreDiacriticsParam);
}

function run(context) {
	var target = context.get("target");
	var actual = context.get("actual");
	var alignment = context.get("alignment");

	var syllAligner = new SyllableAligner();
	var syllableAlignment = syllAligner.calculateSyllableAlignment(target, actual, alignment);

	// find any segmental relations
	var detector = new SegmentalRelations(true, true);
	var relations = detector.detect(alignment);

	var table = new DefaultTableDataSource();

	var col = 0;
	table.setColumnTitle(col++, "IPA Target");
	table.setColumnTitle(col++, "IPA Actual");
	table.setColumnTitle(col++, "Position");
	table.setColumnTitle(col++, "Description");

	// collect data
	var counts = {
		"target": target,
		"actual": actual,
		"alignment": alignment,
		"relations": relations,
		"onset": {
			"target": { "count": 0, "positions": [] },
			"correct": { "count": 0, "positions": [] },
			"substitution": { "count": 0, "positions": [] },
			"deletion": { "count": 0, "positions": [] },
			"distortion": { "count": 0, "positions": [] },
			"epenthesis": { "count": 0, "positions": [] }
		},
		"nucleus": {
			"target": { "count": 0, "positions": [] },
			"correct": { "count": 0, "positions": [] },
			"substitution": { "count": 0, "positions": [] },
			"deletion": { "count": 0, "positions": [] },
			"distortion": { "count": 0, "positions": [] },
			"epenthesis": { "count": 0, "positions": [] }
		},
		"coda": {
			"target": { "count": 0, "positions": [] },
			"correct": { "count": 0, "positions": [] },
			"substitution": { "count": 0, "positions": [] },
			"deletion": { "count": 0, "positions": [] },
			"distortion": { "count": 0, "positions": [] },
			"epenthesis": { "count": 0, "positions": [] }
		},
		"unknown": {
			"target": { "count": 0, "positions": [] },
			"correct": { "count": 0, "positions": [] },
			"substitution": { "count": 0, "positions": [] },
			"deletion": { "count": 0, "positions": [] },
			"distortion": { "count": 0, "positions": [] },
			"epenthesis": { "count": 0, "positions": [] }
		}
	};

	for(var i = 0; i < alignment.alignmentLength; i++) {
		var alignedEles = alignment.getAlignedElements(i);

		var targetEle = alignedEles.get(0);
		var actualEle = alignedEles.get(1);

		var alignTxt = (targetEle != null ? targetEle.toString() : "\u2205");
		alignTxt += " \u2194 ";
		alignTxt += (actualEle != null ? actualEle.toString() : "\u2205");

		var objCount = counts.unknown;
		var testEle = (targetEle != null ? targetEle : actualEle);

		var testSyll = getSyllable(syllableAlignment, testEle);
		var alignedSyll = syllableAlignment.getAlignedElement(testSyll);

		var syllDeleted = false;
		if(!alignedSyll.isPresent()) {
			syllDeleted = true;
		}

		var scType = SyllableConstituentType.UNKNOWN;
		if(testEle.scType == SyllableConstituentType.LEFTAPPENDIX
			|| testEle.scType == SyllableConstituentType.ONSET) {
			objCount = counts.onset;
			scType = SyllableConstituentType.ONSET;
		} else if(testEle.scType == SyllableConstituentType.NUCLEUS
			|| testEle.scType == SyllableConstituentType.OEHS) {
			objCount = counts.nucleus;
			scType = SyllableConstituentType.NUCLEUS;
		} else if(testEle.scType == SyllableConstituentType.CODA
			|| testEle.scType == SyllableConstituentType.RIGHTAPPENDIX) {
			objCount = counts.coda;
			scType = SyllableConstituentType.CODA;
		}

		var typeTxt = (syllDeleted ? "\u03c3 " : " ");
		if(targetEle != null && actualEle != null) {
			objCount.target.count++;
			objCount.target.positions.push(i);

			var matches =
				(options.ignoreDiacritics == true ? targetEle.basePhone == actualEle.basePhone :
					targetEle.toString().equals(actualEle.toString()));
			if(matches) {
				objCount.correct.count++;
				objCount.correct.positions.push(i);

				typeTxt += "Correct";
			} else {
				if(targetEle.basePhone == actualEle.basePhone) {
					// distortion
					objCount.distortion.count++;
					objCount.distortion.positions.push(i);

					typeTxt += "Distortion";
				} else {
					objCount.substitution.count++;
					objCount.substitution.positions.push(i);

					typeTxt += "Substitution";
				}
			}
		} else if(targetEle != null && actualEle == null) {
			if(!syllDeleted) {
				objCount.target.count++;
				objCount.target.positions.push(i);

				objCount.deletion.count++;
				objCount.deletion.positions.push(i);
			}

			typeTxt += "Deletion";
		} else if(targetEle == null && actualEle != null) {
			if(!syllDeleted) {
				objCount.epenthesis.count++;
				objCount.epenthesis.positions.push(i);
			}
			typeTxt += "Epenthesis";
		}

		var idx = 0;
		var rowData = [];

		rowData[idx++] = (targetEle != null ? targetEle : "\u2205");
		rowData[idx++] = (actualEle != null ? actualEle : "\u2205");
		rowData[idx++] = scType;
		rowData[idx++] = typeTxt;

		table.addRow(rowData);
	}

	context.put("table", table);
	context.put("counts", counts);
}

function getSyllable(syllableAlignment, ele) {
	for(var i = 0; i < syllableAlignment.topElements.length; i++) {
		var syll = syllableAlignment.topElements[i];
		if(syll.indexOf(ele) >= 0) {
			return syll;
		}
	}
	for(var i = 0; i < syllableAlignment.bottomElements.length; i++) {
		var syll = syllableAlignment.bottomElements[i];
		if(syll.indexOf(ele) >= 0) {
			return syll;
		}
	}
	return null;
}
]]></oga:property>
                                                                        </oga:settings>
                                                                        <oga:meta x="683" y="919"/>
                                                                    </extensions>
                                                                </node>
                                                                <node id="56e6371e" name="Word Table" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                                                        </oga:settings>
                                                                        <oga:meta x="1092" y="41"/>
                                                                    </extensions>
                                                                </node>
                                                                <node id="eecf31cb778c485b" name="Word Stress Inventory" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                                                                    <input name="wordTable" optional="false"/>
                                                                    <output name="inventory" type="ca.phon.query.report.datasource.DefaultTableDataSource"/>
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="__script"><![CDATA[importPackage(Packages.ca.phon.query.report.datasource)

function init(inputs, outputs) {
	inputs.add("wordTable", "", false, false);

	outputs.add("inventory", "", false, DefaultTableDataSource);
}

function run(context) {
	var wordTable = context.get("wordTable");
	var table = new DefaultTableDataSource();

	var col = 0;
	table.setColumnTitle(col++, "IPA Target");
	table.setColumnTitle(col++, "IPA Actual");
	table.setColumnTitle(col++, "Count");

	var rowData = [];
	col = 0;
	rowData[0] = wordTable.getValueAt("Stress", "Target");
	rowData[1] = wordTable.getValueAt("Stress", "Actual");
	rowData[2] = new java.lang.Integer(1);
	table.addRow(rowData);

	context.put("inventory", table);
}
]]></oga:property>
                                                                        </oga:settings>
                                                                        <oga:meta x="1092" y="177"/>
                                                                    </extensions>
                                                                </node>
                                                                <node id="723d0f44" name="Prosodic Table" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                                                        </oga:settings>
                                                                        <oga:meta x="1092" y="321"/>
                                                                    </extensions>
                                                                </node>
                                                                <node id="61720ed05820496e" type="class:ca.phon.app.opgraph.nodes.table.InventoryNode">
                                                                    <extensions>
                                                                        <opqry:inventoryoptions>
                                                                            <opqry:column caseSensitive="false" column="IPA Target" ignoreDiacritics="false"/>
                                                                            <opqry:column caseSensitive="false" column="IPA Actual" ignoreDiacritics="false"/>
                                                                        </opqry:inventoryoptions>
                                                                        <oga:settings/>
                                                                        <oga:meta x="1092" y="470"/>
                                                                    </extensions>
                                                                </node>
                                                                <node id="7fc3dff2ddd44a75" type="class:ca.phon.app.opgraph.nodes.table.InventoryNode">
                                                                    <extensions>
                                                                        <opqry:inventoryoptions>
                                                                            <opqry:column caseSensitive="false" column="IPA Target" ignoreDiacritics="false"/>
                                                                            <opqry:column caseSensitive="false" column="IPA Actual" ignoreDiacritics="false"/>
                                                                        </opqry:inventoryoptions>
                                                                        <oga:settings/>
                                                                        <oga:meta x="1092" y="581"/>
                                                                    </extensions>
                                                                </node>
                                                                <node id="1a9b10f5" name="Prosodic Subtotal" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.lang.Object]]></oga:property>
                                                                        </oga:settings>
                                                                        <oga:meta x="1092" y="705"/>
                                                                    </extensions>
                                                                </node>
                                                                <node id="b7e1c97" name="Segmental Table" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                                                        </oga:settings>
                                                                        <oga:meta x="1407" y="848"/>
                                                                    </extensions>
                                                                </node>
                                                                <node id="37b9418a" type="class:ca.phon.app.opgraph.nodes.table.InventoryNode">
                                                                    <extensions>
                                                                        <opqry:inventoryoptions>
                                                                            <opqry:column caseSensitive="false" column="IPA Target" ignoreDiacritics="false"/>
                                                                            <opqry:column caseSensitive="false" column="IPA Actual" ignoreDiacritics="false"/>
                                                                        </opqry:inventoryoptions>
                                                                        <oga:settings/>
                                                                        <oga:meta x="1092" y="981"/>
                                                                    </extensions>
                                                                </node>
                                                                <node id="257a7e47" name="Segmental Subtotal" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.lang.Object]]></oga:property>
                                                                        </oga:settings>
                                                                        <oga:meta x="1407" y="1104"/>
                                                                    </extensions>
                                                                </node>
                                                                <node id="6e80e611" name="Prosodic Stress Inventory" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.TableDataSource]]></oga:property>
                                                                        </oga:settings>
                                                                        <oga:meta x="1407" y="470"/>
                                                                    </extensions>
                                                                </node>
                                                                <node id="5d58298b" name="Prosodic CGV Inventory" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.TableDataSource]]></oga:property>
                                                                        </oga:settings>
                                                                        <oga:meta x="1407" y="581"/>
                                                                    </extensions>
                                                                </node>
                                                                <node id="1e17e35e" name="Segmental Inventory" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.TableDataSource]]></oga:property>
                                                                        </oga:settings>
                                                                        <oga:meta x="1407" y="981"/>
                                                                    </extensions>
                                                                </node>
                                                                <link dest="d6964130060d4eac" destField="target" source="ac130279f6464980" sourceField="obj"/>
                                                                <link dest="d6964130060d4eac" destField="actual" source="828342a8827348f6" sourceField="obj"/>
                                                                <link dest="d6964130060d4eac" destField="alignment" source="126f6847b0734271" sourceField="obj"/>
                                                                <link dest="feaa6135ab9f4863" destField="target" source="ac130279f6464980" sourceField="obj"/>
                                                                <link dest="feaa6135ab9f4863" destField="actual" source="828342a8827348f6" sourceField="obj"/>
                                                                <link dest="feaa6135ab9f4863" destField="alignment" source="126f6847b0734271" sourceField="obj"/>
                                                                <link dest="7ff0063dcd5f4c55" destField="target" source="ac130279f6464980" sourceField="obj"/>
                                                                <link dest="7ff0063dcd5f4c55" destField="actual" source="828342a8827348f6" sourceField="obj"/>
                                                                <link dest="7ff0063dcd5f4c55" destField="alignment" source="126f6847b0734271" sourceField="obj"/>
                                                                <link dest="56e6371e" destField="obj" source="7ff0063dcd5f4c55" sourceField="table"/>
                                                                <link dest="b7e1c97" destField="obj" source="feaa6135ab9f4863" sourceField="table"/>
                                                                <link dest="257a7e47" destField="obj" source="feaa6135ab9f4863" sourceField="counts"/>
                                                                <link dest="37b9418a" destField="table" source="feaa6135ab9f4863" sourceField="table"/>
                                                                <link dest="1e17e35e" destField="obj" source="37b9418a" sourceField="table"/>
                                                                <link dest="723d0f44" destField="obj" source="d6964130060d4eac" sourceField="table"/>
                                                                <link dest="61720ed05820496e" destField="table" source="d6964130060d4eac" sourceField="stressTable"/>
                                                                <link dest="6e80e611" destField="obj" source="61720ed05820496e" sourceField="table"/>
                                                                <link dest="7fc3dff2ddd44a75" destField="table" source="d6964130060d4eac" sourceField="cgvTable"/>
                                                                <link dest="5d58298b" destField="obj" source="7fc3dff2ddd44a75" sourceField="table"/>
                                                                <link dest="1a9b10f5" destField="obj" source="d6964130060d4eac" sourceField="counts"/>
                                                                <link dest="eecf31cb778c485b" destField="wordTable" source="7ff0063dcd5f4c55" sourceField="table"/>
                                                                <extensions>
                                                                    <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                                                    <oga:notes>
                                                                        <oga:note color="0xffff96" height="750" title="Inputs" width="431" x="21" y="50"/>
                                                                        <oga:note color="0x96ff96" height="426" title="Segmental Level" width="1125" x="613" y="800"/>
                                                                        <oga:note color="0xffc864" height="276" title="Word Level" width="1120" x="615" y="14"/>
                                                                        <oga:note color="0x9696ff" height="505" title="Prosodic Level" width="1123" x="615" y="293"/>
                                                                    </oga:notes>
                                                                </extensions>
                                                            </graph>
                                                            <ogcn:published_input field="obj" name="word" ref="429f5069103f4b19"/>
                                                            <ogcn:published_input field="obj" name="target" ref="ac130279f6464980"/>
                                                            <ogcn:published_input field="obj" name="actual" ref="828342a8827348f6"/>
                                                            <ogcn:published_input field="obj" name="alignment" ref="126f6847b0734271"/>
                                                            <ogcn:published_output field="obj" name="wordTable" ref="56e6371e"/>
                                                            <ogcn:published_output field="obj" name="prosodicTable" ref="723d0f44"/>
                                                            <ogcn:published_output field="obj" name="segmentalTable" ref="b7e1c97"/>
                                                            <ogcn:published_output field="obj" name="segmental inventory" ref="1e17e35e"/>
                                                            <ogcn:published_output field="obj" name="segmental totals" ref="257a7e47"/>
                                                            <ogcn:published_output field="obj" name="prosodic stress inventory" ref="6e80e611"/>
                                                            <ogcn:published_output field="obj" name="prosodic cgv inventory" ref="5d58298b"/>
                                                            <ogcn:published_output field="obj" name="prosodic totals" ref="1a9b10f5"/>
                                                            <ogcn:published_output field="inventory" name="word stress inventory" ref="eecf31cb778c485b"/>
                                                            <extensions>
                                                                <oga:meta x="778" y="165"/>
                                                            </extensions>
                                                        </ogcn:macro>
                                                        <node id="16647069" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                                                            <input name="speaker" optional="false"/>
                                                            <input name="orthography" optional="false"/>
                                                            <output name="wordBufferName" type="java.lang.String"/>
                                                            <output name="prosodicBufferName" type="java.lang.String"/>
                                                            <output name="segmentalBufferName" type="java.lang.String"/>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	inputs.add("speaker", "", false, false);
	inputs.add("orthography", "", false, false);

	outputs.add("wordBufferName", "", false, java.lang.String);
	outputs.add("prosodicBufferName", "", false, java.lang.String);
	outputs.add("segmentalBufferName", "", false, java.lang.String);
}

function run(context) {
	var speaker = context.get("speaker");
	var ortho = context.get("orthography");

	var bufferBase = speaker + "_" + ortho;

	context.put("wordBufferName", new java.lang.String(bufferBase + "_word"));
	context.put("prosodicBufferName", new java.lang.String(bufferBase + "_prosodic"));
	context.put("segmentalBufferName", new java.lang.String(bufferBase + "_segmental"));
}
]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="778" y="424"/>
                                                            </extensions>
                                                        </node>
                                                        <ogcn:macro id="394b481a" name="Setup Section Name" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                                            <graph id="250c124">
                                                                <node id="584303a5" name="object1" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.lang.String]]></oga:property>
                                                                        </oga:settings>
                                                                        <oga:meta x="15" y="15"/>
                                                                    </extensions>
                                                                </node>
                                                                <node id="4da9275f" name="object2" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.ipa.IPATranscript]]></oga:property>
                                                                        </oga:settings>
                                                                        <oga:meta x="15" y="156"/>
                                                                    </extensions>
                                                                </node>
                                                                <node id="10ece68d" name="object3" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.ipa.IPATranscript]]></oga:property>
                                                                        </oga:settings>
                                                                        <oga:meta x="15" y="297"/>
                                                                    </extensions>
                                                                </node>
                                                                <node id="28f886aa" type="class:ca.gedge.opgraph.nodes.general.ArrayNode">
                                                                    <input name="object1" optional="false">object in array</input>
                                                                    <input name="object2" optional="false">object in array</input>
                                                                    <input name="object3" optional="false">object in array</input>
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="ca.gedge.opgraph.nodes.general.ArrayNode.numObjects"><![CDATA[3]]></oga:property>
                                                                        </oga:settings>
                                                                        <oga:meta x="193" y="15"/>
                                                                    </extensions>
                                                                </node>
                                                                <node id="37285b91" type="class:ca.gedge.opgraph.nodes.general.TextNode">
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="ca.gedge.opgraph.nodes.general.TextNode.text"><![CDATA[%s /%s/ \u2194 /%s/]]></oga:property>
                                                                        </oga:settings>
                                                                        <oga:meta x="368" y="15"/>
                                                                    </extensions>
                                                                </node>
                                                                <link dest="28f886aa" destField="object3" source="10ece68d" sourceField="obj"/>
                                                                <link dest="28f886aa" destField="object2" source="4da9275f" sourceField="obj"/>
                                                                <link dest="37285b91" destField="objects" source="28f886aa" sourceField="array"/>
                                                                <link dest="28f886aa" destField="object1" source="584303a5" sourceField="obj"/>
                                                                <extensions>
                                                                    <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                                                </extensions>
                                                            </graph>
                                                            <ogcn:published_input field="obj" name="orthography" ref="10ece68d"/>
                                                            <ogcn:published_input field="obj" name="target" ref="4da9275f"/>
                                                            <ogcn:published_input field="obj" name="actual" ref="584303a5"/>
                                                            <ogcn:published_output field="value" name="value" ref="37285b91"/>
                                                            <extensions>
                                                                <oga:meta x="726" y="595"/>
                                                            </extensions>
                                                        </ogcn:macro>
                                                        <node id="d7870bab58fa43bb" name="Add to Word Stress Inventory" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                                                            <input name="inventory" optional="false"/>
                                                            <input name="sub-inventory" optional="false"/>
                                                            <output name="inventory" type="ca.phon.query.report.datasource.DefaultTableDataSource"/>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	inputs.add("inventory", "", false, false);
	inputs.add("sub-inventory", "", false, false);

	outputs.add("inventory", "", false, Packages.ca.phon.query.report.datasource.DefaultTableDataSource);
}

function run(context) {
	var keyCols = [ 0, 1 ];

	var inventory = context.get("inventory");
	var subInventory = context.get("sub-inventory");

	for(var row = 0; row < subInventory.rowCount; row++) {
		var rowData = subInventory.getRow(row);

		var rowKey = [ rowData[0], rowData[1] ];
		var count = inventory.getValueAt(keyCols, rowKey, "Count");

		if(count != null) {
			var newCount = count.intValue() + rowData[2].intValue();
			inventory.setValueAt(keyCols, rowKey, "Count", new java.lang.Integer(newCount));
		} else {
			inventory.addRow(rowData);
		}
	}
}
]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="1845" y="97"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="aa083d0b196e4847" name="Print Word WAP Table" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                            <input name="data" optional="false">Data to print</input>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="dataTemplate"><![CDATA[$DATA]]></oga:property>
                                                                    <oga:property key="showText"><![CDATA[false]]></oga:property>
                                                                    <oga:property key="showTable"><![CDATA[true]]></oga:property>
                                                                    <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="1278" y="143"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="d76f2c1f13134b81" name="Word Totals" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                                                            <input name="totals" optional="false"/>
                                                            <input name="wordTable" optional="false"/>
                                                            <output name="totals" type="java.lang.Object"/>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	inputs.add("totals", "", false, false);
	inputs.add("wordTable", "", false, false);

	outputs.add("totals", "", false, java.lang.Object);
}

function run(context) {
	var totals = context.get("totals");
	var wordTable = context.get("wordTable");

	totals.total++;

	if(wordTable.getValueAt("Word", "Match") == true) {
		totals.correct++;
	}

	if(wordTable.getValueAt("# Syllables", "Match") == true) {
		totals.syllablesCorrect++;
	}

	if(wordTable.getValueAt("Stress", "Match") == true) {
		totals.stressCorrect++;
	}

	if(wordTable.getValueAt("CGV Shape", "Match") == true) {
		totals.cgvShapeCorrect++;
	}

	var numTarget = wordTable.getValueAt("# Transitions", "Target").intValue();
	var numActual = wordTable.getValueAt("# Transitions", "Actual").intValue();
	var numSeg = wordTable.getValueAt("Segregated Transitions", "Actual").intValue();
	numActual -= numSeg;

	if(numTarget == numActual) {
		totals.transitionsCorrect += numTarget;
	} else {
		if(numTarget > numActual) {
			// deletions & segregated transitions
			totals.transitionsCorrect += numActual;
			totals.transitionsIncorrect += numTarget - numActual;
		} else {
			// epenthesis
			totals.transitionsCorrect += numTarget;
			totals.transitionsIncorrect += numActual - numTarget;
		}
	}

	context.put("totals", totals);
}
]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="1845" y="233"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="5d2109e00f864104" name="Add to Prosodic Stress Inventory" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                                                            <input name="inventory" optional="false"/>
                                                            <input name="sub-inventory" optional="false"/>
                                                            <output name="inventory" type="ca.phon.query.report.datasource.DefaultTableDataSource"/>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	inputs.add("inventory", "", false, false);
	inputs.add("sub-inventory", "", false, false);

	outputs.add("inventory", "", false, Packages.ca.phon.query.report.datasource.DefaultTableDataSource);
}

function run(context) {
	var keyCols = [ 0, 1 ];

	var inventory = context.get("inventory");
	var subInventory = context.get("sub-inventory");

	for(var row = 0; row < subInventory.rowCount; row++) {
		var rowData = subInventory.getRow(row);

		var rowKey = [ rowData[0], rowData[1] ];
		var count = inventory.getValueAt(keyCols, rowKey, "Count");

		if(count != null) {
			var newCount = count.intValue() + rowData[2].intValue();
			inventory.setValueAt(keyCols, rowKey, "Count", new java.lang.Integer(newCount));
		} else {
			inventory.addRow(rowData);
		}
	}
}
]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="1845" y="526"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="684ca6f5" type="class:ca.phon.app.opgraph.nodes.report.ReportSectionHeaderNode">
                                                            <extensions>
                                                                <oga:meta x="929" y="589"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="c7525e49168a49f2" name="Print Prosodic WAP Table" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                            <input name="data" optional="false">Data to print</input>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="dataTemplate"><![CDATA[$DATA]]></oga:property>
                                                                    <oga:property key="showText"><![CDATA[false]]></oga:property>
                                                                    <oga:property key="showTable"><![CDATA[true]]></oga:property>
                                                                    <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="1278" y="643"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="6d8ef1bab8d74b05" name="Add to Prosodic CGV Inventory" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                                                            <input name="inventory" optional="false"/>
                                                            <input name="sub-inventory" optional="false"/>
                                                            <output name="inventory" type="ca.phon.query.report.datasource.DefaultTableDataSource"/>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	inputs.add("inventory", "", false, false);
	inputs.add("sub-inventory", "", false, false);

	outputs.add("inventory", "", false, Packages.ca.phon.query.report.datasource.DefaultTableDataSource);
}

function run(context) {
	var keyCols = [ 0, 1 ];

	var inventory = context.get("inventory");
	var subInventory = context.get("sub-inventory");

	for(var row = 0; row < subInventory.rowCount; row++) {
		var rowData = subInventory.getRow(row);

		var rowKey = [ rowData[0], rowData[1] ];
		var count = inventory.getValueAt(keyCols, rowKey, "Count");

		if(count != null) {
			var newCount = count.intValue() + rowData[2].intValue();
			inventory.setValueAt(keyCols, rowKey, "Count", new java.lang.Integer(newCount));
		} else {
			inventory.addRow(rowData);
		}
	}
}
]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="1845" y="664"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="32cf3224f68544b0" name="Prosodic Totals" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                                                            <input name="totals" optional="false"/>
                                                            <input name="subtotal" optional="false"/>
                                                            <output name="totals" type="java.lang.Object"/>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	inputs.add("totals", "", false, false);
	inputs.add("subtotal", "", false, false);

	outputs.add("totals", "", false, java.lang.Object);
}

function run(context) {
	var totals = context.get("totals");
	var subtotal = context.get("subtotal");

//	sumcounts(totals.syllCount, subtotal.syllCount);

	totals.syllCount += subtotal.syllCount;
	sumcounts(totals.stressCorrect, subtotal.stressCorrect);
	sumcounts(totals.stressIncorrect, subtotal.stressIncorrect);
	sumcounts(totals.fullSyllableAddition, subtotal.fullSyllableAddition);
	sumcounts(totals.fullSyllableDeletion, subtotal.fullSyllableDeletion);
	sumcounts(totals.syllableReduction.onset, subtotal.syllableReduction.onset);
	sumcounts(totals.syllableReduction.coda, subtotal.syllableReduction.coda);
	sumcounts(totals.syllableReduction.onsetAndCoda, subtotal.syllableReduction.onsetAndCoda);
	sumcounts(totals.syllableExpansion.onset, subtotal.syllableExpansion.onset);
	sumcounts(totals.syllableExpansion.coda, subtotal.syllableExpansion.coda);
	sumcounts(totals.syllableExpansion.onsetAndCoda, subtotal.syllableExpansion.onsetAndCoda);
	sumcounts(totals.cgvCorrect, subtotal.cgvCorrect);
	sumcounts(totals.cgvIncorrect, subtotal.cgvIncorrect);

	context.put("totals", totals);
}

function sumcounts(total, subtotal) {
	total.stressed["initial"] += subtotal.stressed["initial"];
	total.unstressed["initial"] += subtotal.unstressed["initial"];

	total.stressed["medial"] += subtotal.stressed["medial"];
	total.unstressed["medial"] += subtotal.unstressed["medial"];

	total.stressed["final"] += subtotal.stressed["final"];
	total.unstressed["final"] += subtotal.unstressed["final"];
}
]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="1845" y="805"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="31b394bd" name="Add to Segmental Inventory" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                                                            <input name="inventory" optional="false"/>
                                                            <input name="sub-inventory" optional="false"/>
                                                            <output name="inventory" type="ca.phon.query.report.datasource.DefaultTableDataSource"/>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	inputs.add("inventory", "", false, false);
	inputs.add("sub-inventory", "", false, false);

	outputs.add("inventory", "", false, Packages.ca.phon.query.report.datasource.DefaultTableDataSource);
}

function run(context) {
	var keyCols = [ 0, 1 ];

	var inventory = context.get("inventory");
	var subInventory = context.get("sub-inventory");

	for(var row = 0; row < subInventory.rowCount; row++) {
		var rowData = subInventory.getRow(row);

		var rowKey = [ rowData[0], rowData[1] ];
		var count = inventory.getValueAt(keyCols, rowKey, "Count");

		if(count != null) {
			var newCount = count.intValue() + rowData[2].intValue();
			inventory.setValueAt(keyCols, rowKey, "Count", new java.lang.Integer(newCount));
		} else {
			inventory.addRow(rowData);
		}
	}
}
]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="1845" y="1007"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="5d81a99f" name="Print Segmental WAP Table" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                            <input name="data" optional="false">Data to print</input>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="dataTemplate"><![CDATA[$DATA]]></oga:property>
                                                                    <oga:property key="showText"><![CDATA[false]]></oga:property>
                                                                    <oga:property key="showTable"><![CDATA[true]]></oga:property>
                                                                    <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="1278" y="1071"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="d295335" name="Segmental Totals" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                                                            <input name="totals" optional="false"/>
                                                            <input name="subtotal" optional="false"/>
                                                            <output name="totals" type="java.lang.Object"/>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	inputs.add("totals", "", false, false);
	inputs.add("subtotal", "", false, false);

	outputs.add("totals", "", false, java.lang.Object);
}

function run(context) {
	var totals = context.get("totals");
	var subtotal = context.get("subtotal");

	sumcounts(totals.onset, subtotal.onset);
	sumcounts(totals.nucleus, subtotal.nucleus);
	sumcounts(totals.coda, subtotal.coda);
	sumcounts(totals.unknown, subtotal.unknown);

	context.put("totals", totals);
}

function sumcounts(total, subtotal) {
	total.target.count += subtotal.target.count;
	total.correct.count += subtotal.correct.count;
	total.substitution.count += subtotal.substitution.count;
	total.deletion.count += subtotal.deletion.count;
	total.epenthesis.count += subtotal.epenthesis.count;
}
]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="1845" y="1151"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="6ba46b7e" type="class:ca.phon.app.opgraph.nodes.report.TableSectionNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.phon.app.opgraph.nodes.report.TableSectionNode.columns"/>
                                                                    <oga:property key="ca.phon.app.opgraph.nodes.report.TableSectionNode.includeColumns"><![CDATA[true]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="1585" y="143">
                                                                    <oga:default for="sectionName" type="java.lang.String">Word Level</oga:default>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <node id="d416fbb" type="class:ca.phon.app.opgraph.nodes.report.TableSectionNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.phon.app.opgraph.nodes.report.TableSectionNode.columns"/>
                                                                    <oga:property key="ca.phon.app.opgraph.nodes.report.TableSectionNode.includeColumns"><![CDATA[true]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="1585" y="642">
                                                                    <oga:default for="sectionName" type="java.lang.String">Prosodic Level</oga:default>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <node id="77f39e4e" type="class:ca.phon.app.opgraph.nodes.report.TableSectionNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.phon.app.opgraph.nodes.report.TableSectionNode.columns"/>
                                                                    <oga:property key="ca.phon.app.opgraph.nodes.report.TableSectionNode.includeColumns"><![CDATA[true]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="1585" y="1065">
                                                                    <oga:default for="sectionName" type="java.lang.String">Segmental Level</oga:default>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <link dest="64f8407c" destField="obj" source="36e48cb9" sourceField="obj"/>
                                                        <link dest="4541ca3a0e544ebd" destField="table" source="f150b722d7ce4792" sourceField="obj"/>
                                                        <link dest="4541ca3a0e544ebd" destField="row" source="64f8407c" sourceField="obj"/>
                                                        <link dest="93e56a1c9e0d4fa8" destField="target" source="4541ca3a0e544ebd" sourceField="target"/>
                                                        <link dest="93e56a1c9e0d4fa8" destField="actual" source="4541ca3a0e544ebd" sourceField="actual"/>
                                                        <link dest="93e56a1c9e0d4fa8" destField="alignment" source="4541ca3a0e544ebd" sourceField="alignment"/>
                                                        <link dest="93e56a1c9e0d4fa8" destField="word" source="4541ca3a0e544ebd" sourceField="orthography"/>
                                                        <link dest="d295335" destField="totals" source="7d75bcad2044891" sourceField="obj"/>
                                                        <link dest="5d81a99f" destField="data" source="93e56a1c9e0d4fa8" sourceField="segmentalTable"/>
                                                        <link dest="16647069" destField="orthography" source="4541ca3a0e544ebd" sourceField="orthography"/>
                                                        <link dest="16647069" destField="speaker" source="37e5d87a8ee2429a" sourceField="obj"/>
                                                        <link dest="5d81a99f" destField="buffer" source="16647069" sourceField="segmentalBufferName"/>
                                                        <link dest="c7525e49168a49f2" destField="data" source="93e56a1c9e0d4fa8" sourceField="prosodicTable"/>
                                                        <link dest="c7525e49168a49f2" destField="buffer" source="16647069" sourceField="prosodicBufferName"/>
                                                        <link dest="aa083d0b196e4847" destField="data" source="93e56a1c9e0d4fa8" sourceField="wordTable"/>
                                                        <link dest="aa083d0b196e4847" destField="buffer" source="16647069" sourceField="wordBufferName"/>
                                                        <link dest="6ba46b7e" destField="tableName" source="aa083d0b196e4847" sourceField="buffer"/>
                                                        <link dest="d416fbb" destField="tableName" source="c7525e49168a49f2" sourceField="buffer"/>
                                                        <link dest="77f39e4e" destField="tableName" source="5d81a99f" sourceField="buffer"/>
                                                        <link dest="394b481a" destField="orthography" source="4541ca3a0e544ebd" sourceField="actual"/>
                                                        <link dest="684ca6f5" destField="sectionName" source="394b481a" sourceField="value"/>
                                                        <link dest="394b481a" destField="target" source="4541ca3a0e544ebd" sourceField="target"/>
                                                        <link dest="394b481a" destField="actual" source="4541ca3a0e544ebd" sourceField="orthography"/>
                                                        <link dest="684ca6f5" destField="parent" source="198af750" sourceField="obj"/>
                                                        <link dest="6ba46b7e" destField="parent" source="684ca6f5" sourceField="section"/>
                                                        <link dest="d416fbb" destField="parent" source="684ca6f5" sourceField="section"/>
                                                        <link dest="77f39e4e" destField="parent" source="684ca6f5" sourceField="section"/>
                                                        <link dest="d295335" destField="subtotal" source="93e56a1c9e0d4fa8" sourceField="segmental totals"/>
                                                        <link dest="31b394bd" destField="sub-inventory" source="93e56a1c9e0d4fa8" sourceField="segmental inventory"/>
                                                        <link dest="31b394bd" destField="inventory" source="1fba7ca21ccf40cb" sourceField="obj"/>
                                                        <link dest="5d2109e00f864104" destField="sub-inventory" source="93e56a1c9e0d4fa8" sourceField="prosodic stress inventory"/>
                                                        <link dest="6d8ef1bab8d74b05" destField="sub-inventory" source="93e56a1c9e0d4fa8" sourceField="prosodic cgv inventory"/>
                                                        <link dest="5d2109e00f864104" destField="inventory" source="ae20bdbcf7944aa3" sourceField="obj"/>
                                                        <link dest="6d8ef1bab8d74b05" destField="inventory" source="41f90df2b5dc4c6a" sourceField="obj"/>
                                                        <link dest="32cf3224f68544b0" destField="subtotal" source="93e56a1c9e0d4fa8" sourceField="prosodic totals"/>
                                                        <link dest="32cf3224f68544b0" destField="totals" source="9180f8cb2c484444" sourceField="obj"/>
                                                        <link dest="d76f2c1f13134b81" destField="totals" source="33e2b46afe8b4f77" sourceField="obj"/>
                                                        <link dest="d76f2c1f13134b81" destField="wordTable" source="93e56a1c9e0d4fa8" sourceField="wordTable"/>
                                                        <link dest="d7870bab58fa43bb" destField="sub-inventory" source="93e56a1c9e0d4fa8" sourceField="word stress inventory"/>
                                                        <link dest="d7870bab58fa43bb" destField="inventory" source="abaf83695374a2d" sourceField="obj"/>
                                                        <extensions>
                                                            <oga:notes>
                                                                <oga:note color="0xffff96" height="1634" title="Inputs" width="407" x="38" y="188"/>
                                                                <oga:note color="0xffc864" height="417" title="Word Level" width="926" x="1211" y="50"/>
                                                                <oga:note color="0x96ff96" height="356" title="Segmental Level" width="943" x="1209" y="962"/>
                                                                <oga:note color="0x9696ff" height="486" title="Prosodic Level" width="927" x="1211" y="472"/>
                                                            </oga:notes>
                                                            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                                        </extensions>
                                                    </graph>
                                                    <ogcn:published_input field="obj" name="table" ref="f150b722d7ce4792"/>
                                                    <ogcn:published_input field="obj" name="speaker" ref="37e5d87a8ee2429a"/>
                                                    <ogcn:published_input field="obj" name="segmental totals" ref="7d75bcad2044891"/>
                                                    <ogcn:published_input field="obj" name="report node" ref="198af750"/>
                                                    <ogcn:published_input field="obj" name="segmental inventory" ref="1fba7ca21ccf40cb"/>
                                                    <ogcn:published_input field="obj" name="prosodic stress inventory" ref="ae20bdbcf7944aa3"/>
                                                    <ogcn:published_input field="obj" name="prosodic cgv inventory" ref="41f90df2b5dc4c6a"/>
                                                    <ogcn:published_input field="obj" name="prosodic totals" ref="9180f8cb2c484444"/>
                                                    <ogcn:published_input field="obj" name="word totals" ref="33e2b46afe8b4f77"/>
                                                    <ogcn:published_input field="obj" name="word stress inventory" ref="abaf83695374a2d"/>
                                                    <ogcn:published_output field="totals" name="segmental totals" ref="d295335"/>
                                                    <ogcn:published_output field="inventory" name="segmental inventory" ref="31b394bd"/>
                                                    <ogcn:published_output field="inventory" name="prosodic stress inventory" ref="5d2109e00f864104"/>
                                                    <ogcn:published_output field="inventory" name="prosodic cgv inventory" ref="6d8ef1bab8d74b05"/>
                                                    <ogcn:published_output field="totals" name="prosodic totals" ref="32cf3224f68544b0"/>
                                                    <ogcn:published_output field="totals" name="word totals" ref="d76f2c1f13134b81"/>
                                                    <ogcn:published_output field="inventory" name="word stress inventory" ref="d7870bab58fa43bb"/>
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.IterableClassNode.className"><![CDATA[java.util.List]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="1080" y="152"/>
                                                    </extensions>
                                                </ogcn:macro>
                                                <ogcn:macro id="1866f2d6" name="Print Segmental Totals" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                                    <graph id="63c34c4c">
                                                        <node id="1c103704" name="object1" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.lang.Object]]></oga:property>
                                                                </oga:settings>
                                                            </extensions>
                                                        </node>
                                                        <node id="aac15e8" name="object11" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                                                </oga:settings>
                                                            </extensions>
                                                        </node>
                                                        <node id="78e6ee5a" name="parent" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.app.opgraph.report.tree.ReportTreeNode]]></oga:property>
                                                                </oga:settings>
                                                            </extensions>
                                                        </node>
                                                        <node id="6ae94a00" name="totals" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.lang.Object]]></oga:property>
                                                                </oga:settings>
                                                            </extensions>
                                                        </node>
                                                        <node id="2043e708" name="Setup Segmental Totals Table" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                                                            <input name="totals" optional="false"/>
                                                            <output name="table" type="ca.phon.query.report.datasource.DefaultTableDataSource"/>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="__script"><![CDATA[importClass(Packages.ca.phon.query.report.datasource.DefaultTableDataSource)

function init(inputs, outputs) {
	inputs.add("totals", "", false, false);

	outputs.add("table", "", false, DefaultTableDataSource);
}

function run(context) {
	var totals = context.get("totals");
	var table = new DefaultTableDataSource();

	var colIdx = 0;
	table.setColumnTitle(colIdx++, "");
	table.setColumnTitle(colIdx++, "Onset");
	table.setColumnTitle(colIdx++, "Nucleus");
	table.setColumnTitle(colIdx++, "Coda");
	table.setColumnTitle(colIdx++, "Total Consonants (O+C)");
	table.setColumnTitle(colIdx++, "Total Phones");

	var idx = 0;
	var rowData = []
	// target
	rowData[idx++] = "# Target";
	rowData[idx++] = new java.lang.Integer(totals.onset.target.count);
	rowData[idx++] = new java.lang.Integer(totals.nucleus.target.count);
	rowData[idx++] = new java.lang.Integer(totals.coda.target.count);
	var pccTarget = totals.onset.target.count+totals.coda.target.count;
	rowData[idx++] = new java.lang.Integer(pccTarget);
	var ppcTarget = totals.onset.target.count+totals.nucleus.target.count+totals.coda.target.count;
	rowData[idx++] = new java.lang.Integer(ppcTarget);
	table.addRow(rowData);

	idx = 0;
	// correct
	rowData[idx++] = "# Correct";
	rowData[idx++] = new java.lang.Integer(totals.onset.correct.count);
	rowData[idx++] = new java.lang.Integer(totals.nucleus.correct.count);
	rowData[idx++] = new java.lang.Integer(totals.coda.correct.count);
	var pccCorrect = totals.onset.correct.count+totals.coda.correct.count;
	rowData[idx++] = new java.lang.Integer(pccCorrect);
	var ppcCorrect = totals.onset.correct.count+totals.nucleus.correct.count+totals.coda.correct.count;
	rowData[idx++] = new java.lang.Integer(ppcCorrect);
	table.addRow(rowData);

	idx = 0;
	// substitutions
	rowData[idx++] = "# Substitutions";
	rowData[idx++] = new java.lang.Integer(totals.onset.substitution.count);
	rowData[idx++] = new java.lang.Integer(totals.nucleus.substitution.count);
	rowData[idx++] = new java.lang.Integer(totals.coda.substitution.count);
	var pccSubstitution = totals.onset.substitution.count+totals.coda.substitution.count;
	rowData[idx++] = new java.lang.Integer(pccSubstitution);
	var ppcSubstitution = totals.onset.substitution.count+totals.nucleus.substitution.count+totals.coda.substitution.count;
	rowData[idx++] = new java.lang.Integer(ppcSubstitution);
	table.addRow(rowData);

	idx = 0;
	// deletions
	rowData[idx++] = "# Deletions";
	rowData[idx++] = new java.lang.Integer(totals.onset.deletion.count);
	rowData[idx++] = new java.lang.Integer(totals.nucleus.deletion.count);
	rowData[idx++] = new java.lang.Integer(totals.coda.deletion.count);
	var pccDeletion = totals.onset.deletion.count+totals.coda.deletion.count;
	rowData[idx++] = new java.lang.Integer(pccDeletion);
	var ppcDeletion = totals.onset.deletion.count+totals.nucleus.deletion.count+totals.coda.deletion.count;
	rowData[idx++] = new java.lang.Integer(ppcDeletion);
	table.addRow(rowData);

	idx = 0;
	// distortions
	rowData[idx++] = "# Distortions";
	rowData[idx++] = new java.lang.Integer(totals.onset.distortion.count);
	rowData[idx++] = new java.lang.Integer(totals.nucleus.distortion.count);
	rowData[idx++] = new java.lang.Integer(totals.coda.distortion.count);
	var pccDistortion = totals.onset.distortion.count+totals.coda.distortion.count;
	rowData[idx++] = new java.lang.Integer(pccDistortion);
	var ppcDistortion = totals.onset.distortion.count+totals.nucleus.distortion.count+totals.coda.distortion.count;
	rowData[idx++] = new java.lang.Integer(ppcDistortion);
	table.addRow(rowData);

	idx = 0;
	// epenthesis
	rowData[idx++] = "# Epenthesis";
	rowData[idx++] = new java.lang.Integer(totals.onset.epenthesis.count);
	rowData[idx++] = new java.lang.Integer(totals.nucleus.epenthesis.count);
	rowData[idx++] = new java.lang.Integer(totals.coda.epenthesis.count);
	var pccEpenthesis = totals.onset.epenthesis.count+totals.coda.epenthesis.count;
	rowData[idx++] = new java.lang.Integer(pccEpenthesis);
	var ppcEpenthesis = totals.onset.epenthesis.count+totals.nucleus.epenthesis.count+totals.coda.epenthesis.count;
	rowData[idx++] = new java.lang.Integer(ppcEpenthesis);
	table.addRow(rowData);

	idx = 0;
	// % correct
	rowData[idx++] = "% Correct";
	var pc = (totals.onset.target.count + totals.onset.epenthesis.count > 0
		? (totals.onset.correct.count / (totals.onset.correct.count+totals.onset.substitution.count+totals.onset.deletion.count+totals.onset.distortion.count+totals.onset.epenthesis.count)) * 100.0
		: 0.0);
	rowData[idx++] = new java.lang.Float(pc);

	pc = (totals.nucleus.target.count + totals.nucleus.epenthesis.count > 0
		? (totals.nucleus.correct.count / (totals.nucleus.correct.count+totals.nucleus.substitution.count+totals.nucleus.deletion.count+totals.nucleus.distortion.count+totals.nucleus.epenthesis.count)) * 100.0
		: 0.0);
	rowData[idx++] = new java.lang.Float(pc);

	pc = (totals.coda.target.count + totals.coda.epenthesis.count > 0
		? (totals.coda.correct.count / (totals.coda.correct.count+totals.coda.substitution.count+totals.coda.deletion.count+totals.coda.distortion.count+totals.coda.epenthesis.count)) * 100.0
		: 0.0);
	rowData[idx++] = new java.lang.Float(pc);

	pc = (pccTarget + pccEpenthesis > 0
		? (pccCorrect / (pccCorrect+pccSubstitution+pccDeletion+pccDistortion+pccEpenthesis)) * 100.0
		: 0.0);
	rowData[idx++] = new java.lang.Float(pc);

	pc = (ppcTarget + ppcEpenthesis > 0
		? (ppcCorrect / (ppcCorrect+ppcSubstitution+ppcDeletion+ppcDistortion+ppcEpenthesis)) * 100.0
		: 0.0);
	rowData[idx++] = new java.lang.Float(pc);

	table.addRow(rowData);

	context.put("table", table);
}
]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="1347" y="593"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="4328585" type="class:ca.gedge.opgraph.nodes.general.ArrayNode">
                                                            <input name="object1" optional="false">object in array</input>
                                                            <input name="object2" optional="false">object in array</input>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.general.ArrayNode.numObjects"><![CDATA[2]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="927" y="733"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="9b586f21c9e54f99" type="class:ca.gedge.opgraph.nodes.general.ArrayNode">
                                                            <input name="object1" optional="false">object in array</input>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.general.ArrayNode.numObjects"><![CDATA[1]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="926" y="843"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="2ce5ba5" type="class:ca.gedge.opgraph.nodes.general.TextNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.general.TextNode.text"><![CDATA[Segmental Totals_%s_%s]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="1103" y="739"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="f727df0ae57a40e5" type="class:ca.gedge.opgraph.nodes.general.TextNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.general.TextNode.text"><![CDATA[Segmental Level Breakdown (%s)]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="1104" y="850"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="29a99473" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                            <input name="data" optional="false">Data to print</input>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="dataTemplate"><![CDATA[$DATA]]></oga:property>
                                                                    <oga:property key="showText"><![CDATA[false]]></oga:property>
                                                                    <oga:property key="showTable"><![CDATA[true]]></oga:property>
                                                                    <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="1347" y="714">
                                                                    <oga:default for="buffer" type="java.lang.String">Segmental Totals</oga:default>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <node id="42d39f0f" type="class:ca.phon.app.opgraph.nodes.report.TableSectionNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.phon.app.opgraph.nodes.report.TableSectionNode.columns"/>
                                                                    <oga:property key="ca.phon.app.opgraph.nodes.report.TableSectionNode.includeColumns"><![CDATA[true]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="1676" y="635">
                                                                    <oga:default for="addToBeginning" type="java.lang.Boolean">true</oga:default>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <link dest="9b586f21c9e54f99" destField="object1" source="1c103704" sourceField="obj"/>
                                                        <link dest="f727df0ae57a40e5" destField="objects" source="9b586f21c9e54f99" sourceField="array"/>
                                                        <link dest="2043e708" destField="totals" source="6ae94a00" sourceField="obj"/>
                                                        <link dest="42d39f0f" destField="parent" source="78e6ee5a" sourceField="obj"/>
                                                        <link dest="4328585" destField="object2" source="1c103704" sourceField="obj"/>
                                                        <link dest="29a99473" destField="data" source="2043e708" sourceField="table"/>
                                                        <link dest="2ce5ba5" destField="objects" source="4328585" sourceField="array"/>
                                                        <link dest="29a99473" destField="buffer" source="2ce5ba5" sourceField="value"/>
                                                        <link dest="42d39f0f" destField="sectionName" source="f727df0ae57a40e5" sourceField="value"/>
                                                        <link dest="42d39f0f" destField="tableName" source="29a99473" sourceField="buffer"/>
                                                        <link dest="4328585" destField="object1" source="aac15e8" sourceField="obj"/>
                                                    </graph>
                                                    <ogcn:published_input field="obj" name="object1" ref="1c103704"/>
                                                    <ogcn:published_input field="obj" name="totals" ref="6ae94a00"/>
                                                    <ogcn:published_input field="obj" name="parent" ref="78e6ee5a"/>
                                                    <ogcn:published_input field="obj" name="object11" ref="aac15e8"/>
                                                    <extensions>
                                                        <oga:meta x="1522" y="603"/>
                                                    </extensions>
                                                </ogcn:macro>
                                                <ogcn:macro id="42e3777a" name="Print Segmental Inventory" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                                    <graph id="2779a301">
                                                        <node id="11f459df" name="object1" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.lang.Object]]></oga:property>
                                                                </oga:settings>
                                                            </extensions>
                                                        </node>
                                                        <node id="2bbf2d1c" name="object11" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                                                </oga:settings>
                                                            </extensions>
                                                        </node>
                                                        <node id="5f898952" name="parent" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.app.opgraph.report.tree.ReportTreeNode]]></oga:property>
                                                                </oga:settings>
                                                            </extensions>
                                                        </node>
                                                        <node id="2f92319f" name="table" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                                                </oga:settings>
                                                            </extensions>
                                                        </node>
                                                        <node id="260c104a" type="class:ca.phon.app.opgraph.nodes.table.SortNode">
                                                            <extensions>
                                                                <opqry:sortoptions>
                                                                    <opqry:sortBy column="IPA Target" order="ascending" type="ipa"/>
                                                                    <opqry:sortBy column="IPA Actual" order="ascending" type="ipa"/>
                                                                </opqry:sortoptions>
                                                                <oga:settings/>
                                                                <oga:meta x="1539" y="1009"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="b0b207d658c44212" type="class:ca.gedge.opgraph.nodes.general.ArrayNode">
                                                            <input name="object1" optional="false">object in array</input>
                                                            <input name="object2" optional="false">object in array</input>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.general.ArrayNode.numObjects"><![CDATA[2]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="1178" y="1055"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="d450618e101c47e0" type="class:ca.gedge.opgraph.nodes.general.ArrayNode">
                                                            <input name="object1" optional="false">object in array</input>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.general.ArrayNode.numObjects"><![CDATA[1]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="1170" y="1179"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="9b425362cfca4142" type="class:ca.gedge.opgraph.nodes.general.TextNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.general.TextNode.text"><![CDATA[Segmental Inventory_%s_%s]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="1358" y="1061"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="bfce7bea75834ee9" type="class:ca.gedge.opgraph.nodes.general.TextNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.general.TextNode.text"><![CDATA[Segmental Level Inventory (%s)]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="1348" y="1186"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="5cd1f00d" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                            <input name="data" optional="false">Data to print</input>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="dataTemplate"><![CDATA[$DATA]]></oga:property>
                                                                    <oga:property key="showText"><![CDATA[false]]></oga:property>
                                                                    <oga:property key="showTable"><![CDATA[true]]></oga:property>
                                                                    <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="1710" y="1055">
                                                                    <oga:default for="buffer" type="java.lang.String"/>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <node id="1210b3fa" type="class:ca.phon.app.opgraph.nodes.report.TableSectionNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.phon.app.opgraph.nodes.report.TableSectionNode.columns"/>
                                                                    <oga:property key="ca.phon.app.opgraph.nodes.report.TableSectionNode.includeColumns"><![CDATA[true]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="1686" y="1209">
                                                                    <oga:default for="addToBeginning" type="java.lang.Boolean">true</oga:default>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <link dest="bfce7bea75834ee9" destField="objects" source="d450618e101c47e0" sourceField="array"/>
                                                        <link dest="d450618e101c47e0" destField="object1" source="11f459df" sourceField="obj"/>
                                                        <link dest="1210b3fa" destField="parent" source="5f898952" sourceField="obj"/>
                                                        <link dest="b0b207d658c44212" destField="object2" source="11f459df" sourceField="obj"/>
                                                        <link dest="260c104a" destField="table" source="2f92319f" sourceField="obj"/>
                                                        <link dest="5cd1f00d" destField="buffer" source="9b425362cfca4142" sourceField="value"/>
                                                        <link dest="1210b3fa" destField="tableName" source="5cd1f00d" sourceField="buffer"/>
                                                        <link dest="1210b3fa" destField="sectionName" source="bfce7bea75834ee9" sourceField="value"/>
                                                        <link dest="b0b207d658c44212" destField="object1" source="2bbf2d1c" sourceField="obj"/>
                                                        <link dest="9b425362cfca4142" destField="objects" source="b0b207d658c44212" sourceField="array"/>
                                                        <link dest="5cd1f00d" destField="data" source="260c104a" sourceField="table"/>
                                                    </graph>
                                                    <ogcn:published_input field="obj" name="object1" ref="11f459df"/>
                                                    <ogcn:published_input field="obj" name="parent" ref="5f898952"/>
                                                    <ogcn:published_input field="obj" name="table" ref="2f92319f"/>
                                                    <ogcn:published_input field="obj" name="object11" ref="2bbf2d1c"/>
                                                    <extensions>
                                                        <oga:meta x="1519" y="764"/>
                                                    </extensions>
                                                </ogcn:macro>
                                                <ogcn:macro id="24ad622f" name="Print Prosodic Totals" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                                    <graph id="2be14293">
                                                        <node id="15777049" name="object1" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.lang.Object]]></oga:property>
                                                                </oga:settings>
                                                            </extensions>
                                                        </node>
                                                        <node id="576f8f7a" name="object2" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                                                </oga:settings>
                                                            </extensions>
                                                        </node>
                                                        <node id="2ecc94a7" name="parent" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.app.opgraph.report.tree.ReportTreeNode]]></oga:property>
                                                                </oga:settings>
                                                            </extensions>
                                                        </node>
                                                        <node id="540b704f" name="totals" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.lang.Object]]></oga:property>
                                                                </oga:settings>
                                                            </extensions>
                                                        </node>
                                                        <node id="136e64d1" name="Setup Prosodic Totals Table" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                                                            <input name="totals" optional="false"/>
                                                            <output name="table" type="ca.phon.query.report.datasource.DefaultTableDataSource"/>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	inputs.add("totals", "", false, false);

	outputs.add("table", "", false, Packages.ca.phon.query.report.datasource.DefaultTableDataSource);
}

function run(context) {
	var counts = context.get("totals");
	var table = new Packages.ca.phon.query.report.datasource.DefaultTableDataSource();

	var col = 0;
	var rowData = [];

	table.setColumnTitle(col++, "Dimension");
	table.setColumnTitle(col++, "Un'Str Initial");
	table.setColumnTitle(col++, "Un'Str Medial");
	table.setColumnTitle(col++, "Un'Str Final");
	table.setColumnTitle(col++, "Un'Str Total");
	table.setColumnTitle(col++, "Str Initial");
	table.setColumnTitle(col++, "Str Medial");
	table.setColumnTitle(col++, "Str Final");
	table.setColumnTitle(col++, "Str Total");
	table.setColumnTitle(col++, "Total");
	table.setColumnTitle(col++, "%");

	java.lang.System.out.println(counts.syllCount + "");

	addRow(table, "Stress correct", counts.stressCorrect, counts.syllCount);
	addRow(table, "Stress incorrect", counts.stressIncorrect, counts.syllCount);
	addRow(table, "Full syllable addition", counts.fullSyllableAddition, counts.syllCount);
	addRow(table, "Full syllable deletion", counts.fullSyllableDeletion, counts.syllCount);
	addRow(table, "Syllable expansion (O)", counts.syllableExpansion.onset, counts.syllCount);
	addRow(table, "Syllable expansion (C)", counts.syllableExpansion.coda, counts.syllCount);
//	addRow(table, "Syllable expansion (O&C)", counts.syllableExpansion.onsetAndCoda, counts.syllCount);
	addRow(table, "Syllable reduction (O)", counts.syllableReduction.onset, counts.syllCount);
	addRow(table, "Syllable reduction (C)", counts.syllableReduction.coda, counts.syllCount);
//	addRow(table, "Syllable reduction (O&C)", counts.syllableReduction.onsetAndCoda, counts.syllCount);
	addRow(table, "CGV shape correct", counts.cgvCorrect, counts.syllCount);
	addRow(table, "CGV shape incorrect", counts.cgvIncorrect, counts.syllCount);

	context.put("table", table);
}

function addRow(table, title, count, syllCount) {
	var col = 0;
	var rowData = [];

	rowData[col++] = title;
	rowData[col++] = new java.lang.Integer(count.unstressed.initial);
	rowData[col++] = new java.lang.Integer(count.unstressed.medial);
	rowData[col++] = new java.lang.Integer(count.unstressed["final"]);
	rowData[col++] = new java.lang.Integer( rowData[1].intValue() + rowData[2].intValue() + rowData[3].intValue() );

	rowData[col++] = new java.lang.Integer(count.stressed.initial);
	rowData[col++] = new java.lang.Integer(count.stressed.medial);
	rowData[col++] = new java.lang.Integer(count.stressed["final"]);
	rowData[col++] = new java.lang.Integer( rowData[5].intValue() + rowData[6].intValue() + rowData[7].intValue() );

	rowData[col++] = new java.lang.Integer( rowData[4].intValue() + rowData[8].intValue() );
	rowData[col++] = new java.lang.Float( (rowData[9].intValue() / syllCount ) * 100.0 );

	table.addRow(rowData);
}
]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="1304" y="1468"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="4ff546413b5643a0" type="class:ca.gedge.opgraph.nodes.general.ArrayNode">
                                                            <input name="object1" optional="false">object in array</input>
                                                            <input name="object2" optional="false">object in array</input>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.general.ArrayNode.numObjects"><![CDATA[2]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="1219" y="1622"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="711ff7df10c54020" type="class:ca.gedge.opgraph.nodes.general.ArrayNode">
                                                            <input name="object1" optional="false">object in array</input>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.general.ArrayNode.numObjects"><![CDATA[1]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="1218" y="1732"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="c64cbf42c8e6429d" type="class:ca.gedge.opgraph.nodes.general.TextNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.general.TextNode.text"><![CDATA[Prosodic Totals_%s_%s]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="1395" y="1628"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="7cd254ecaaf44d34" type="class:ca.gedge.opgraph.nodes.general.TextNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.general.TextNode.text"><![CDATA[Prosodic Level Breakdown (%s)]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="1396" y="1739"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="60cdcd2e182848b5" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                            <input name="data" optional="false">Data to print</input>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="dataTemplate"><![CDATA[$DATA]]></oga:property>
                                                                    <oga:property key="showText"><![CDATA[false]]></oga:property>
                                                                    <oga:property key="showTable"><![CDATA[true]]></oga:property>
                                                                    <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="1682" y="1452">
                                                                    <oga:default for="buffer" type="java.lang.String">Segmental Totals</oga:default>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <node id="f34c217418a54b57" type="class:ca.phon.app.opgraph.nodes.report.TableSectionNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.phon.app.opgraph.nodes.report.TableSectionNode.columns"/>
                                                                    <oga:property key="ca.phon.app.opgraph.nodes.report.TableSectionNode.includeColumns"><![CDATA[true]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="1679" y="1660">
                                                                    <oga:default for="addToBeginning" type="java.lang.Boolean">true</oga:default>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <link dest="60cdcd2e182848b5" destField="buffer" source="c64cbf42c8e6429d" sourceField="value"/>
                                                        <link dest="60cdcd2e182848b5" destField="data" source="136e64d1" sourceField="table"/>
                                                        <link dest="f34c217418a54b57" destField="parent" source="2ecc94a7" sourceField="obj"/>
                                                        <link dest="f34c217418a54b57" destField="sectionName" source="7cd254ecaaf44d34" sourceField="value"/>
                                                        <link dest="c64cbf42c8e6429d" destField="objects" source="4ff546413b5643a0" sourceField="array"/>
                                                        <link dest="4ff546413b5643a0" destField="object1" source="15777049" sourceField="obj"/>
                                                        <link dest="7cd254ecaaf44d34" destField="objects" source="711ff7df10c54020" sourceField="array"/>
                                                        <link dest="4ff546413b5643a0" destField="object2" source="576f8f7a" sourceField="obj"/>
                                                        <link dest="f34c217418a54b57" destField="tableName" source="60cdcd2e182848b5" sourceField="buffer"/>
                                                        <link dest="136e64d1" destField="totals" source="540b704f" sourceField="obj"/>
                                                        <link dest="711ff7df10c54020" destField="object1" source="15777049" sourceField="obj"/>
                                                    </graph>
                                                    <ogcn:published_input field="obj" name="parent" ref="2ecc94a7"/>
                                                    <ogcn:published_input field="obj" name="object1" ref="15777049"/>
                                                    <ogcn:published_input field="obj" name="object2" ref="576f8f7a"/>
                                                    <ogcn:published_input field="obj" name="totals" ref="540b704f"/>
                                                    <extensions>
                                                        <oga:meta x="1519" y="1025"/>
                                                    </extensions>
                                                </ogcn:macro>
                                                <ogcn:macro id="5c8d81fa" name="Print Prosodic CGV Inventory" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                                    <graph id="3f0e8c6d">
                                                        <node id="69631dde" name="object1" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.lang.Object]]></oga:property>
                                                                </oga:settings>
                                                            </extensions>
                                                        </node>
                                                        <node id="4c88fe2b" name="object2" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                                                </oga:settings>
                                                            </extensions>
                                                        </node>
                                                        <node id="71066508" name="parent" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.app.opgraph.report.tree.ReportTreeNode]]></oga:property>
                                                                </oga:settings>
                                                            </extensions>
                                                        </node>
                                                        <node id="793c1b03" name="table" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                                                </oga:settings>
                                                            </extensions>
                                                        </node>
                                                        <node id="20bde00ac02a423a" type="class:ca.phon.app.opgraph.nodes.table.SortNode">
                                                            <extensions>
                                                                <opqry:sortoptions>
                                                                    <opqry:sortBy column="IPA Target" order="ascending" type="plain"/>
                                                                    <opqry:sortBy column="IPA Actual" order="ascending" type="plain"/>
                                                                </opqry:sortoptions>
                                                                <oga:settings/>
                                                                <oga:meta x="1447" y="1855"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="7c2e616c682740bd" type="class:ca.gedge.opgraph.nodes.general.ArrayNode">
                                                            <input name="object1" optional="false">object in array</input>
                                                            <input name="object2" optional="false">object in array</input>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.general.ArrayNode.numObjects"><![CDATA[2]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="1238" y="1946"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="9175d92e508049b5" type="class:ca.gedge.opgraph.nodes.general.ArrayNode">
                                                            <input name="object1" optional="false">object in array</input>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.general.ArrayNode.numObjects"><![CDATA[1]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="1230" y="2070"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="dd7217a0acef475c" type="class:ca.gedge.opgraph.nodes.general.TextNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.general.TextNode.text"><![CDATA[Prosodic CGV Inventory_%s_%s]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="1418" y="1952"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="9c6a662cf4254425" type="class:ca.gedge.opgraph.nodes.general.TextNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.general.TextNode.text"><![CDATA[Prosodic Level CGV Inventory (%s)]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="1408" y="2077"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="5b6add9ecfb84ec7" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                            <input name="data" optional="false">Data to print</input>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="dataTemplate"><![CDATA[$DATA]]></oga:property>
                                                                    <oga:property key="showText"><![CDATA[false]]></oga:property>
                                                                    <oga:property key="showTable"><![CDATA[true]]></oga:property>
                                                                    <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="1708" y="1861">
                                                                    <oga:default for="buffer" type="java.lang.String"/>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <node id="5ce80eeb8028457e" type="class:ca.phon.app.opgraph.nodes.report.TableSectionNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.phon.app.opgraph.nodes.report.TableSectionNode.columns"/>
                                                                    <oga:property key="ca.phon.app.opgraph.nodes.report.TableSectionNode.includeColumns"><![CDATA[true]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="1684" y="2015">
                                                                    <oga:default for="addToBeginning" type="java.lang.Boolean">true</oga:default>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <link dest="7c2e616c682740bd" destField="object2" source="4c88fe2b" sourceField="obj"/>
                                                        <link dest="5ce80eeb8028457e" destField="tableName" source="5b6add9ecfb84ec7" sourceField="buffer"/>
                                                        <link dest="9c6a662cf4254425" destField="objects" source="9175d92e508049b5" sourceField="array"/>
                                                        <link dest="dd7217a0acef475c" destField="objects" source="7c2e616c682740bd" sourceField="array"/>
                                                        <link dest="7c2e616c682740bd" destField="object1" source="69631dde" sourceField="obj"/>
                                                        <link dest="5ce80eeb8028457e" destField="parent" source="71066508" sourceField="obj"/>
                                                        <link dest="5b6add9ecfb84ec7" destField="data" source="20bde00ac02a423a" sourceField="table"/>
                                                        <link dest="5b6add9ecfb84ec7" destField="buffer" source="dd7217a0acef475c" sourceField="value"/>
                                                        <link dest="20bde00ac02a423a" destField="table" source="793c1b03" sourceField="obj"/>
                                                        <link dest="9175d92e508049b5" destField="object1" source="69631dde" sourceField="obj"/>
                                                        <link dest="5ce80eeb8028457e" destField="sectionName" source="9c6a662cf4254425" sourceField="value"/>
                                                    </graph>
                                                    <ogcn:published_input field="obj" name="object2" ref="4c88fe2b"/>
                                                    <ogcn:published_input field="obj" name="object1" ref="69631dde"/>
                                                    <ogcn:published_input field="obj" name="parent" ref="71066508"/>
                                                    <ogcn:published_input field="obj" name="table" ref="793c1b03"/>
                                                    <extensions>
                                                        <oga:meta x="1522" y="1200"/>
                                                    </extensions>
                                                </ogcn:macro>
                                                <ogcn:macro id="1d24b4ef" name="Print Prosodic Stress Inventory" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                                    <graph id="63ec23c">
                                                        <node id="19ee6a60" name="object1" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.lang.Object]]></oga:property>
                                                                </oga:settings>
                                                            </extensions>
                                                        </node>
                                                        <node id="31120f4b" name="object2" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                                                </oga:settings>
                                                            </extensions>
                                                        </node>
                                                        <node id="7c3a2b12" name="parent" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.app.opgraph.report.tree.ReportTreeNode]]></oga:property>
                                                                </oga:settings>
                                                            </extensions>
                                                        </node>
                                                        <node id="1289123e" name="table" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                                                </oga:settings>
                                                            </extensions>
                                                        </node>
                                                        <node id="f8bf975a0148414b" type="class:ca.phon.app.opgraph.nodes.table.SortNode">
                                                            <extensions>
                                                                <opqry:sortoptions>
                                                                    <opqry:sortBy column="IPA Target" order="ascending" type="plain"/>
                                                                    <opqry:sortBy column="IPA Actual" order="ascending" type="plain"/>
                                                                </opqry:sortoptions>
                                                                <oga:settings/>
                                                                <oga:meta x="1464" y="2295"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="16a51ceb7aea481f" type="class:ca.gedge.opgraph.nodes.general.ArrayNode">
                                                            <input name="object1" optional="false">object in array</input>
                                                            <input name="object2" optional="false">object in array</input>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.general.ArrayNode.numObjects"><![CDATA[2]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="1255" y="2386"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="635efeb24524e5c" type="class:ca.gedge.opgraph.nodes.general.ArrayNode">
                                                            <input name="object1" optional="false">object in array</input>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.general.ArrayNode.numObjects"><![CDATA[1]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="1247" y="2510"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="c981c06e18de4635" type="class:ca.gedge.opgraph.nodes.general.TextNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.general.TextNode.text"><![CDATA[Prosodic Stress Inventory_%s_%s]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="1435" y="2392"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="58b11817cee44ad5" type="class:ca.gedge.opgraph.nodes.general.TextNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.general.TextNode.text"><![CDATA[Prosodic Level Stress Inventory (%s)]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="1425" y="2517"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="6fac1e39c5604f38" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                            <input name="data" optional="false">Data to print</input>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="dataTemplate"><![CDATA[$DATA]]></oga:property>
                                                                    <oga:property key="showText"><![CDATA[false]]></oga:property>
                                                                    <oga:property key="showTable"><![CDATA[true]]></oga:property>
                                                                    <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="1725" y="2301">
                                                                    <oga:default for="buffer" type="java.lang.String"/>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <node id="ba9504321e114d71" type="class:ca.phon.app.opgraph.nodes.report.TableSectionNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.phon.app.opgraph.nodes.report.TableSectionNode.columns"/>
                                                                    <oga:property key="ca.phon.app.opgraph.nodes.report.TableSectionNode.includeColumns"><![CDATA[true]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="1701" y="2455">
                                                                    <oga:default for="addToBeginning" type="java.lang.Boolean">true</oga:default>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <link dest="16a51ceb7aea481f" destField="object1" source="19ee6a60" sourceField="obj"/>
                                                        <link dest="ba9504321e114d71" destField="tableName" source="6fac1e39c5604f38" sourceField="buffer"/>
                                                        <link dest="635efeb24524e5c" destField="object1" source="19ee6a60" sourceField="obj"/>
                                                        <link dest="f8bf975a0148414b" destField="table" source="1289123e" sourceField="obj"/>
                                                        <link dest="ba9504321e114d71" destField="sectionName" source="58b11817cee44ad5" sourceField="value"/>
                                                        <link dest="16a51ceb7aea481f" destField="object2" source="31120f4b" sourceField="obj"/>
                                                        <link dest="58b11817cee44ad5" destField="objects" source="635efeb24524e5c" sourceField="array"/>
                                                        <link dest="6fac1e39c5604f38" destField="data" source="f8bf975a0148414b" sourceField="table"/>
                                                        <link dest="ba9504321e114d71" destField="parent" source="7c3a2b12" sourceField="obj"/>
                                                        <link dest="6fac1e39c5604f38" destField="buffer" source="c981c06e18de4635" sourceField="value"/>
                                                        <link dest="c981c06e18de4635" destField="objects" source="16a51ceb7aea481f" sourceField="array"/>
                                                    </graph>
                                                    <ogcn:published_input field="obj" name="object1" ref="19ee6a60"/>
                                                    <ogcn:published_input field="obj" name="table" ref="1289123e"/>
                                                    <ogcn:published_input field="obj" name="object2" ref="31120f4b"/>
                                                    <ogcn:published_input field="obj" name="parent" ref="7c3a2b12"/>
                                                    <extensions>
                                                        <oga:meta x="1524" y="1374"/>
                                                    </extensions>
                                                </ogcn:macro>
                                                <ogcn:macro id="a65548d" name="Print Word Totals" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                                    <graph id="7a9f297f">
                                                        <node id="4c9b63df" name="object1" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.lang.Object]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="922" y="1477"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="1f9fe366" name="object2" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="922" y="1477"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="3114a5ad" name="parent" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.app.opgraph.report.tree.ReportTreeNode]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="922" y="1477"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="43b22170" name="totals" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.lang.Object]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="922" y="1477"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="fc8f4f8d03ca4d96" name="Setup Word Totals Table" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                                                            <input name="totals" optional="false"/>
                                                            <output name="table" type="ca.phon.query.report.datasource.DefaultTableDataSource"/>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	inputs.add("totals", "", false, false);

	outputs.add("table", "", false, Packages.ca.phon.query.report.datasource.DefaultTableDataSource);
}

function run(context) {
	var counts = context.get("totals");
	var table = new Packages.ca.phon.query.report.datasource.DefaultTableDataSource();

	var col = 0;
	table.setColumnTitle(col++, "Category");
	table.setColumnTitle(col++, "Correct");
	table.setColumnTitle(col++, "Incorrect");
	table.setColumnTitle(col++, "% Correct");

	var total = counts.total;

	addRowS(table, "Word", total, counts.correct);
	addRowS(table, "# Syllables", total, counts.syllablesCorrect || 0);
	addRowS(table, "Stress", total, counts.stressCorrect || 0);
	addRowS(table, "CGV Shape", total, counts.cgvShapeCorrect || 0);
	addRow(table, "# Transitions", total, counts.transitionsCorrect || 0, counts.transitionsIncorrect || 0);

	context.put("table", table);
}

function addRowS(table, category, total, correct) {
	addRow(table, category, total, correct, total - correct);
}

function addRow(table, category, total, correct, incorrect) {
	var col = 0;
	var rowData = [];

	var pc = (correct / (correct + incorrect)) * 100.0;

	rowData[col++] = category;
	rowData[col++] = new java.lang.Integer(correct);
	rowData[col++] = new java.lang.Integer(incorrect);
	rowData[col++] = new java.lang.Float(pc);

	table.addRow(rowData);
}
]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="1343" y="2737"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="dfb02f13fd3c4d4d" type="class:ca.gedge.opgraph.nodes.general.ArrayNode">
                                                            <input name="object1" optional="false">object in array</input>
                                                            <input name="object2" optional="false">object in array</input>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.general.ArrayNode.numObjects"><![CDATA[2]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="1323" y="2887"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="e5069dde805142be" type="class:ca.gedge.opgraph.nodes.general.ArrayNode">
                                                            <input name="object1" optional="false">object in array</input>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.general.ArrayNode.numObjects"><![CDATA[1]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="1315" y="3011"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="8151e28d1cac4389" type="class:ca.gedge.opgraph.nodes.general.TextNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.general.TextNode.text"><![CDATA[Word Level Accuracy_%s_%s]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="1503" y="2893"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="48a3a59c61cc4e93" type="class:ca.gedge.opgraph.nodes.general.TextNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.general.TextNode.text"><![CDATA[Word Level Accuracy (%s)]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="1493" y="3018"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="818b618de4b541e8" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                            <input name="data" optional="false">Data to print</input>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="dataTemplate"><![CDATA[$DATA]]></oga:property>
                                                                    <oga:property key="showText"><![CDATA[false]]></oga:property>
                                                                    <oga:property key="showTable"><![CDATA[true]]></oga:property>
                                                                    <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="1729" y="2800">
                                                                    <oga:default for="buffer" type="java.lang.String"/>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <node id="fc337fb2dbba4218" type="class:ca.phon.app.opgraph.nodes.report.TableSectionNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.phon.app.opgraph.nodes.report.TableSectionNode.columns"/>
                                                                    <oga:property key="ca.phon.app.opgraph.nodes.report.TableSectionNode.includeColumns"><![CDATA[true]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="1705" y="2954">
                                                                    <oga:default for="addToBeginning" type="java.lang.Boolean">true</oga:default>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <link dest="48a3a59c61cc4e93" destField="objects" source="e5069dde805142be" sourceField="array"/>
                                                        <link dest="e5069dde805142be" destField="object1" source="4c9b63df" sourceField="obj"/>
                                                        <link dest="818b618de4b541e8" destField="buffer" source="8151e28d1cac4389" sourceField="value"/>
                                                        <link dest="fc337fb2dbba4218" destField="parent" source="3114a5ad" sourceField="obj"/>
                                                        <link dest="818b618de4b541e8" destField="data" source="fc8f4f8d03ca4d96" sourceField="table"/>
                                                        <link dest="dfb02f13fd3c4d4d" destField="object1" source="4c9b63df" sourceField="obj"/>
                                                        <link dest="dfb02f13fd3c4d4d" destField="object2" source="1f9fe366" sourceField="obj"/>
                                                        <link dest="8151e28d1cac4389" destField="objects" source="dfb02f13fd3c4d4d" sourceField="array"/>
                                                        <link dest="fc337fb2dbba4218" destField="tableName" source="818b618de4b541e8" sourceField="buffer"/>
                                                        <link dest="fc337fb2dbba4218" destField="sectionName" source="48a3a59c61cc4e93" sourceField="value"/>
                                                        <link dest="fc8f4f8d03ca4d96" destField="totals" source="43b22170" sourceField="obj"/>
                                                    </graph>
                                                    <ogcn:published_input field="obj" name="object1" ref="4c9b63df"/>
                                                    <ogcn:published_input field="obj" name="parent" ref="3114a5ad"/>
                                                    <ogcn:published_input field="obj" name="object2" ref="1f9fe366"/>
                                                    <ogcn:published_input field="obj" name="totals" ref="43b22170"/>
                                                    <extensions>
                                                        <oga:meta x="1527" y="1595"/>
                                                    </extensions>
                                                </ogcn:macro>
                                                <ogcn:macro id="513f7b3" name="Print Word Stress Inventory" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                                    <graph id="eddd776">
                                                        <node id="6932ecdf" name="object1" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.lang.Object]]></oga:property>
                                                                </oga:settings>
                                                            </extensions>
                                                        </node>
                                                        <node id="14ca059f" name="object2" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                                                </oga:settings>
                                                            </extensions>
                                                        </node>
                                                        <node id="4cb785f8" name="parent" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.app.opgraph.report.tree.ReportTreeNode]]></oga:property>
                                                                </oga:settings>
                                                            </extensions>
                                                        </node>
                                                        <node id="5995adf2" name="table" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                                                </oga:settings>
                                                            </extensions>
                                                        </node>
                                                        <node id="ac19e3307b5445c9" type="class:ca.phon.app.opgraph.nodes.table.SortNode">
                                                            <extensions>
                                                                <opqry:sortoptions>
                                                                    <opqry:sortBy column="IPA Target" order="ascending" type="plain"/>
                                                                    <opqry:sortBy column="IPA Actual" order="ascending" type="plain"/>
                                                                </opqry:sortoptions>
                                                                <oga:settings/>
                                                                <oga:meta x="1469" y="3201"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="cb2a93b8a91f48f8" type="class:ca.gedge.opgraph.nodes.general.ArrayNode">
                                                            <input name="object1" optional="false">object in array</input>
                                                            <input name="object2" optional="false">object in array</input>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.general.ArrayNode.numObjects"><![CDATA[2]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="1260" y="3292"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="32dea4daa53d45ec" type="class:ca.gedge.opgraph.nodes.general.ArrayNode">
                                                            <input name="object1" optional="false">object in array</input>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.general.ArrayNode.numObjects"><![CDATA[1]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="1252" y="3416"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="a73a5b9aef554a3a" type="class:ca.gedge.opgraph.nodes.general.TextNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.general.TextNode.text"><![CDATA[Word Stress Inventory_%s_%s]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="1440" y="3298"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="7fa5b6586714c07" type="class:ca.gedge.opgraph.nodes.general.TextNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.general.TextNode.text"><![CDATA[Word Level Stress Inventory (%s)]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="1430" y="3423"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="33851ec010d948a9" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                            <input name="data" optional="false">Data to print</input>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="dataTemplate"><![CDATA[$DATA]]></oga:property>
                                                                    <oga:property key="showText"><![CDATA[false]]></oga:property>
                                                                    <oga:property key="showTable"><![CDATA[true]]></oga:property>
                                                                    <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="1730" y="3207">
                                                                    <oga:default for="buffer" type="java.lang.String"/>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <node id="ccf5ee904d9c4747" type="class:ca.phon.app.opgraph.nodes.report.TableSectionNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.phon.app.opgraph.nodes.report.TableSectionNode.columns"/>
                                                                    <oga:property key="ca.phon.app.opgraph.nodes.report.TableSectionNode.includeColumns"><![CDATA[true]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="1706" y="3361">
                                                                    <oga:default for="addToBeginning" type="java.lang.Boolean">true</oga:default>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <link dest="ccf5ee904d9c4747" destField="parent" source="4cb785f8" sourceField="obj"/>
                                                        <link dest="cb2a93b8a91f48f8" destField="object2" source="14ca059f" sourceField="obj"/>
                                                        <link dest="a73a5b9aef554a3a" destField="objects" source="cb2a93b8a91f48f8" sourceField="array"/>
                                                        <link dest="7fa5b6586714c07" destField="objects" source="32dea4daa53d45ec" sourceField="array"/>
                                                        <link dest="cb2a93b8a91f48f8" destField="object1" source="6932ecdf" sourceField="obj"/>
                                                        <link dest="33851ec010d948a9" destField="data" source="ac19e3307b5445c9" sourceField="table"/>
                                                        <link dest="ccf5ee904d9c4747" destField="tableName" source="33851ec010d948a9" sourceField="buffer"/>
                                                        <link dest="ccf5ee904d9c4747" destField="sectionName" source="7fa5b6586714c07" sourceField="value"/>
                                                        <link dest="ac19e3307b5445c9" destField="table" source="5995adf2" sourceField="obj"/>
                                                        <link dest="33851ec010d948a9" destField="buffer" source="a73a5b9aef554a3a" sourceField="value"/>
                                                        <link dest="32dea4daa53d45ec" destField="object1" source="6932ecdf" sourceField="obj"/>
                                                    </graph>
                                                    <ogcn:published_input field="obj" name="parent" ref="4cb785f8"/>
                                                    <ogcn:published_input field="obj" name="object2" ref="14ca059f"/>
                                                    <ogcn:published_input field="obj" name="object1" ref="6932ecdf"/>
                                                    <ogcn:published_input field="obj" name="table" ref="5995adf2"/>
                                                    <extensions>
                                                        <oga:meta x="1529" y="1769"/>
                                                    </extensions>
                                                </ogcn:macro>
                                                <link dest="a8f4c8d442b84425" destField="end" source="5c792a0560b4beb" sourceField="result"/>
                                                <link dest="a8f4c8d442b84425" destField="start" source="7481fcacc2964d6d" sourceField="value"/>
                                                <link dest="5c792a0560b4beb" destField="rowCount" source="b25c5b3d1d7440da" sourceField="rowCount"/>
                                                <link dest="6cca2ae5" destField="collection" source="a8f4c8d442b84425" sourceField="range"/>
                                                <link dest="6cca2ae5" destField="table" source="b25c5b3d1d7440da" sourceField="obj"/>
                                                <link dest="6cca2ae5" destField="speaker" source="c221b0481e9c496b" sourceField="obj"/>
                                                <link dest="6cca2ae5" destField="segmental totals" source="3b4467e2" sourceField="totals"/>
                                                <link dest="2d30e84c" destField="sectionName" source="d440941" sourceField="value"/>
                                                <link dest="d440941" destField="obj" source="6b3143df3116411b" sourceField="obj"/>
                                                <link dest="6cca2ae5" destField="report node" source="2d30e84c" sourceField="section"/>
                                                <link dest="2d30e84c" destField="parent" source="4e5e792d" sourceField="obj"/>
                                                <link dest="6cca2ae5" destField="segmental inventory" source="418d68da3a2d4006" sourceField="inventory"/>
                                                <link dest="6cca2ae5" destField="prosodic stress inventory" source="d8082defc2c34245" sourceField="inventory"/>
                                                <link dest="6cca2ae5" destField="prosodic cgv inventory" source="3bf4ef709a6b4654" sourceField="inventory"/>
                                                <link dest="6cca2ae5" destField="prosodic totals" source="236aab80" sourceField="totals"/>
                                                <link dest="6cca2ae5" destField="word totals" source="930a709c6906488c" sourceField="totals"/>
                                                <link dest="6cca2ae5" destField="word stress inventory" source="d961403f4c754788" sourceField="inventory"/>
                                                <link dest="1866f2d6" destField="object11" source="c221b0481e9c496b" sourceField="obj"/>
                                                <link dest="1866f2d6" destField="totals" source="6cca2ae5" sourceField="segmental totals"/>
                                                <link dest="1866f2d6" destField="parent" source="2d30e84c" sourceField="section"/>
                                                <link dest="1866f2d6" destField="object1" source="6b3143df3116411b" sourceField="obj"/>
                                                <link dest="42e3777a" destField="object1" source="6b3143df3116411b" sourceField="obj"/>
                                                <link dest="42e3777a" destField="table" source="6cca2ae5" sourceField="segmental inventory"/>
                                                <link dest="42e3777a" destField="parent" source="2d30e84c" sourceField="section"/>
                                                <link dest="42e3777a" destField="object11" source="c221b0481e9c496b" sourceField="obj"/>
                                                <link dest="24ad622f" destField="parent" source="2d30e84c" sourceField="section"/>
                                                <link dest="24ad622f" destField="totals" source="6cca2ae5" sourceField="prosodic totals"/>
                                                <link dest="24ad622f" destField="object1" source="6b3143df3116411b" sourceField="obj"/>
                                                <link dest="24ad622f" destField="object2" source="c221b0481e9c496b" sourceField="obj"/>
                                                <link dest="5c8d81fa" destField="parent" source="2d30e84c" sourceField="section"/>
                                                <link dest="5c8d81fa" destField="table" source="6cca2ae5" sourceField="prosodic cgv inventory"/>
                                                <link dest="5c8d81fa" destField="object1" source="6b3143df3116411b" sourceField="obj"/>
                                                <link dest="5c8d81fa" destField="object2" source="c221b0481e9c496b" sourceField="obj"/>
                                                <link dest="1d24b4ef" destField="parent" source="2d30e84c" sourceField="section"/>
                                                <link dest="1d24b4ef" destField="object1" source="6b3143df3116411b" sourceField="obj"/>
                                                <link dest="1d24b4ef" destField="table" source="6cca2ae5" sourceField="prosodic stress inventory"/>
                                                <link dest="1d24b4ef" destField="object2" source="c221b0481e9c496b" sourceField="obj"/>
                                                <link dest="a65548d" destField="object1" source="6b3143df3116411b" sourceField="obj"/>
                                                <link dest="a65548d" destField="object2" source="c221b0481e9c496b" sourceField="obj"/>
                                                <link dest="a65548d" destField="totals" source="6cca2ae5" sourceField="word totals"/>
                                                <link dest="a65548d" destField="parent" source="2d30e84c" sourceField="section"/>
                                                <link dest="513f7b3" destField="object2" source="c221b0481e9c496b" sourceField="obj"/>
                                                <link dest="513f7b3" destField="table" source="6cca2ae5" sourceField="word stress inventory"/>
                                                <link dest="513f7b3" destField="parent" source="2d30e84c" sourceField="section"/>
                                                <link dest="513f7b3" destField="object1" source="6b3143df3116411b" sourceField="obj"/>
                                                <extensions>
                                                    <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                                    <oga:notes>
                                                        <oga:note color="0xffff96" height="791" title="Published Inputs" width="310" x="25" y="100"/>
                                                        <oga:note color="0x96ff96" height="401" title="Segmental Inventory/Totals" width="932" x="872" y="550"/>
                                                        <oga:note color="0x9696ff" height="597" title="Prosodic Level Information" width="937" x="869" y="961"/>
                                                        <oga:note color="0xffc864" height="387" title="Word Level" width="940" x="868" y="1561"/>
                                                    </oga:notes>
                                                </extensions>
                                            </graph>
                                            <ogcn:published_input field="obj" name="table" ref="b25c5b3d1d7440da"/>
                                            <ogcn:published_input field="obj" name="speaker" ref="c221b0481e9c496b"/>
                                            <ogcn:published_input field="obj" name="session name" ref="6b3143df3116411b"/>
                                            <ogcn:published_input field="obj" name="report node" ref="4e5e792d"/>
                                            <ogcn:published_output field="segmental totals" name="segmental totals" ref="6cca2ae5"/>
                                            <ogcn:published_output field="segmental inventory" name="segmental inventory" ref="6cca2ae5"/>
                                            <ogcn:published_output field="prosodic stress inventory" name="prosodic stress inventory" ref="6cca2ae5"/>
                                            <ogcn:published_output field="prosodic cgv inventory" name="prosodic cgv inventory" ref="6cca2ae5"/>
                                            <ogcn:published_output field="prosodic totals" name="prosodic totals" ref="6cca2ae5"/>
                                            <ogcn:published_output field="word totals" name="word totals" ref="6cca2ae5"/>
                                            <ogcn:published_output field="word stress inventory" name="word stress inventory" ref="6cca2ae5"/>
                                            <extensions>
                                                <oga:meta x="754" y="145"/>
                                            </extensions>
                                        </ogcn:macro>
                                        <node id="ad24c63f0459481b" name="Add to Word Stress Inventory" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                                            <input name="inventory" optional="false"/>
                                            <input name="sub-inventory" optional="false"/>
                                            <output name="inventory" type="ca.phon.query.report.datasource.DefaultTableDataSource"/>
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	inputs.add("inventory", "", false, false);
	inputs.add("sub-inventory", "", false, false);

	outputs.add("inventory", "", false, Packages.ca.phon.query.report.datasource.DefaultTableDataSource);
}

function run(context) {
	var keyCols = [ 0, 1 ];

	var inventory = context.get("inventory");
	var subInventory = context.get("sub-inventory");

	for(var row = 0; row < subInventory.rowCount; row++) {
		var rowData = subInventory.getRow(row);

		var rowKey = [ rowData[0], rowData[1] ];
		var count = inventory.getValueAt(keyCols, rowKey, "Count");

		if(count != null) {
			var newCount = count.intValue() + rowData[2].intValue();
			inventory.setValueAt(keyCols, rowKey, "Count", new java.lang.Integer(newCount));
		} else {
			inventory.addRow(rowData);
		}
	}
}
]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="1283" y="105"/>
                                            </extensions>
                                        </node>
                                        <node id="b2abd77ee9084be3" name="Word Totals" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                                            <input name="totals" optional="false"/>
                                            <input name="subtotal" optional="false"/>
                                            <output name="totals" type="java.lang.Object"/>
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	inputs.add("totals", "", false, false);
	inputs.add("subtotal", "", false, false);

	outputs.add("totals", "", false, java.lang.Object);
}

function run(context) {
	var totals = context.get("totals");
	var subtotal = context.get("subtotal");

	totals.total += subtotal.total;
	totals.correct += subtotal.correct;
	totals.syllablesCorrect += subtotal.syllablesCorrect;
	totals.stressCorrect += subtotal.stressCorrect;
	totals.cgvShapeCorrect += subtotal.cgvShapeCorrect;
	totals.transitionsCorrect += subtotal.transitionsCorrect;
	totals.transitionsIncorrect += subtotal.transitionsIncorrect;

	context.put("totals", totals);
}
]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="1283" y="241"/>
                                            </extensions>
                                        </node>
                                        <node id="fd153936e99f48a8" name="Add to Prosodic Stress Inventory" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                                            <input name="inventory" optional="false"/>
                                            <input name="sub-inventory" optional="false"/>
                                            <output name="inventory" type="ca.phon.query.report.datasource.DefaultTableDataSource"/>
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	inputs.add("inventory", "", false, false);
	inputs.add("sub-inventory", "", false, false);

	outputs.add("inventory", "", false, Packages.ca.phon.query.report.datasource.DefaultTableDataSource);
}

function run(context) {
	var keyCols = [ 0, 1 ];

	var inventory = context.get("inventory");
	var subInventory = context.get("sub-inventory");

	for(var row = 0; row < subInventory.rowCount; row++) {
		var rowData = subInventory.getRow(row);

		var rowKey = [ rowData[0], rowData[1] ];
		var count = inventory.getValueAt(keyCols, rowKey, "Count");

		if(count != null) {
			var newCount = count.intValue() + rowData[2].intValue();
			inventory.setValueAt(keyCols, rowKey, "Count", new java.lang.Integer(newCount));
		} else {
			inventory.addRow(rowData);
		}
	}
}
]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="1283" y="461"/>
                                            </extensions>
                                        </node>
                                        <node id="4aa768be512b445d" name="Add to Prosodic CGV Inventory" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                                            <input name="inventory" optional="false"/>
                                            <input name="sub-inventory" optional="false"/>
                                            <output name="inventory" type="ca.phon.query.report.datasource.DefaultTableDataSource"/>
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	inputs.add("inventory", "", false, false);
	inputs.add("sub-inventory", "", false, false);

	outputs.add("inventory", "", false, Packages.ca.phon.query.report.datasource.DefaultTableDataSource);
}

function run(context) {
	var keyCols = [ 0, 1 ];

	var inventory = context.get("inventory");
	var subInventory = context.get("sub-inventory");

	for(var row = 0; row < subInventory.rowCount; row++) {
		var rowData = subInventory.getRow(row);

		var rowKey = [ rowData[0], rowData[1] ];
		var count = inventory.getValueAt(keyCols, rowKey, "Count");

		if(count != null) {
			var newCount = count.intValue() + rowData[2].intValue();
			inventory.setValueAt(keyCols, rowKey, "Count", new java.lang.Integer(newCount));
		} else {
			inventory.addRow(rowData);
		}
	}
}
]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="1283" y="602"/>
                                            </extensions>
                                        </node>
                                        <node id="b1653a090b2449f5" name="Prosodic Totals" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                                            <input name="totals" optional="false"/>
                                            <input name="subtotal" optional="false"/>
                                            <output name="totals" type="java.lang.Object"/>
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	inputs.add("totals", "", false, false);
	inputs.add("subtotal", "", false, false);

	outputs.add("totals", "", false, java.lang.Object);
}

function run(context) {
	var totals = context.get("totals");
	var subtotal = context.get("subtotal");

//	sumcounts(totals.syllCount, subtotal.syllCount);

	totals.syllCount += subtotal.syllCount;
	sumcounts(totals.stressCorrect, subtotal.stressCorrect);
	sumcounts(totals.stressIncorrect, subtotal.stressIncorrect);
	sumcounts(totals.fullSyllableAddition, subtotal.fullSyllableAddition);
	sumcounts(totals.fullSyllableDeletion, subtotal.fullSyllableDeletion);
	sumcounts(totals.syllableReduction.onset, subtotal.syllableReduction.onset);
	sumcounts(totals.syllableReduction.coda, subtotal.syllableReduction.coda);
	sumcounts(totals.syllableReduction.onsetAndCoda, subtotal.syllableReduction.onsetAndCoda);
	sumcounts(totals.syllableExpansion.onset, subtotal.syllableExpansion.onset);
	sumcounts(totals.syllableExpansion.coda, subtotal.syllableExpansion.coda);
	sumcounts(totals.syllableExpansion.onsetAndCoda, subtotal.syllableExpansion.onsetAndCoda);
	sumcounts(totals.cgvCorrect, subtotal.cgvCorrect);
	sumcounts(totals.cgvIncorrect, subtotal.cgvIncorrect);

	context.put("totals", totals);
}

function sumcounts(total, subtotal) {
	total.stressed["initial"] += subtotal.stressed["initial"];
	total.unstressed["initial"] += subtotal.unstressed["initial"];

	total.stressed["medial"] += subtotal.stressed["medial"];
	total.unstressed["medial"] += subtotal.unstressed["medial"];

	total.stressed["final"] += subtotal.stressed["final"];
	total.unstressed["final"] += subtotal.unstressed["final"];
}
]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="1283" y="743"/>
                                            </extensions>
                                        </node>
                                        <node id="eb28c5583c0f4ffb" name="Segmental Totals" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                                            <input name="totals" optional="false"/>
                                            <input name="subtotal" optional="false"/>
                                            <output name="totals" type="java.lang.Object"/>
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	inputs.add("totals", "", false, false);
	inputs.add("subtotal", "", false, false);

	outputs.add("totals", "", false, java.lang.Object);
}

function run(context) {
	var totals = context.get("totals");
	var subtotal = context.get("subtotal");

	sumcounts(totals.onset, subtotal.onset);
	sumcounts(totals.nucleus, subtotal.nucleus);
	sumcounts(totals.coda, subtotal.coda);
	sumcounts(totals.unknown, subtotal.unknown);

	context.put("totals", totals);
}

function sumcounts(total, subtotal) {
	total.target.count += subtotal.target.count;
	total.correct.count += subtotal.correct.count;
	total.substitution.count += subtotal.substitution.count;
	total.deletion.count += subtotal.deletion.count;
	total.epenthesis.count += subtotal.epenthesis.count;
}
]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="1283" y="918"/>
                                            </extensions>
                                        </node>
                                        <node id="7e796d8bd06c40be" name="Add to Segmental Inventory" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                                            <input name="inventory" optional="false"/>
                                            <input name="sub-inventory" optional="false"/>
                                            <output name="inventory" type="ca.phon.query.report.datasource.DefaultTableDataSource"/>
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	inputs.add("inventory", "", false, false);
	inputs.add("sub-inventory", "", false, false);

	outputs.add("inventory", "", false, Packages.ca.phon.query.report.datasource.DefaultTableDataSource);
}

function run(context) {
	var keyCols = [ 0, 1 ];

	var inventory = context.get("inventory");
	var subInventory = context.get("sub-inventory");

	for(var row = 0; row < subInventory.rowCount; row++) {
		var rowData = subInventory.getRow(row);

		var rowKey = [ rowData[0], rowData[1] ];
		var count = inventory.getValueAt(keyCols, rowKey, "Count");

		if(count != null) {
			var newCount = count.intValue() + rowData[2].intValue();
			inventory.setValueAt(keyCols, rowKey, "Count", new java.lang.Integer(newCount));
		} else {
			inventory.addRow(rowData);
		}
	}
}
]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="1283" y="1059"/>
                                            </extensions>
                                        </node>
                                        <link dest="d0e50cd137aa45c3" destField="sessionName" source="9cd592ba93e14241" sourceField="obj"/>
                                        <link dest="d0e50cd137aa45c3" destField="tableMap" source="22103902a02f452c" sourceField="obj"/>
                                        <link dest="c243d0cc85994d01" destField="enabled" source="d0e50cd137aa45c3" sourceField="exists"/>
                                        <link dest="c243d0cc85994d01" destField="table" source="d0e50cd137aa45c3" sourceField="table"/>
                                        <link dest="c243d0cc85994d01" destField="speaker" source="2cde07591d49421f" sourceField="obj"/>
                                        <link dest="c243d0cc85994d01" destField="session name" source="9cd592ba93e14241" sourceField="obj"/>
                                        <link dest="eb28c5583c0f4ffb" destField="totals" source="9d4e5d5c75304010" sourceField="obj"/>
                                        <link dest="eb28c5583c0f4ffb" destField="subtotal" source="c243d0cc85994d01" sourceField="segmental totals"/>
                                        <link dest="eb28c5583c0f4ffb" destField="enabled" source="d0e50cd137aa45c3" sourceField="exists"/>
                                        <link dest="c243d0cc85994d01" destField="report node" source="64fcff23" sourceField="obj"/>
                                        <link dest="7e796d8bd06c40be" destField="sub-inventory" source="c243d0cc85994d01" sourceField="segmental inventory"/>
                                        <link dest="7e796d8bd06c40be" destField="inventory" source="a5a5820bf71e4629" sourceField="obj"/>
                                        <link dest="7e796d8bd06c40be" destField="enabled" source="d0e50cd137aa45c3" sourceField="exists"/>
                                        <link dest="fd153936e99f48a8" destField="sub-inventory" source="c243d0cc85994d01" sourceField="prosodic stress inventory"/>
                                        <link dest="4aa768be512b445d" destField="sub-inventory" source="c243d0cc85994d01" sourceField="prosodic cgv inventory"/>
                                        <link dest="fd153936e99f48a8" destField="inventory" source="472d740342384f80" sourceField="obj"/>
                                        <link dest="4aa768be512b445d" destField="inventory" source="c4c0c10d49e54042" sourceField="obj"/>
                                        <link dest="fd153936e99f48a8" destField="enabled" source="d0e50cd137aa45c3" sourceField="exists"/>
                                        <link dest="4aa768be512b445d" destField="enabled" source="d0e50cd137aa45c3" sourceField="exists"/>
                                        <link dest="b1653a090b2449f5" destField="subtotal" source="c243d0cc85994d01" sourceField="prosodic totals"/>
                                        <link dest="b1653a090b2449f5" destField="enabled" source="d0e50cd137aa45c3" sourceField="exists"/>
                                        <link dest="b1653a090b2449f5" destField="totals" source="4b1f966a76eb4b88" sourceField="obj"/>
                                        <link dest="b2abd77ee9084be3" destField="subtotal" source="c243d0cc85994d01" sourceField="word totals"/>
                                        <link dest="b2abd77ee9084be3" destField="enabled" source="d0e50cd137aa45c3" sourceField="exists"/>
                                        <link dest="b2abd77ee9084be3" destField="totals" source="5a76f6232e654ec7" sourceField="obj"/>
                                        <link dest="ad24c63f0459481b" destField="sub-inventory" source="c243d0cc85994d01" sourceField="word stress inventory"/>
                                        <link dest="ad24c63f0459481b" destField="inventory" source="eedb0526f33e4643" sourceField="obj"/>
                                        <link dest="ad24c63f0459481b" destField="enabled" source="d0e50cd137aa45c3" sourceField="exists"/>
                                        <extensions>
                                            <oga:notes>
                                                <oga:note color="0xffff96" height="1494" title="Published Inputs" width="374" x="26" y="187"/>
                                                <oga:note color="0xffc864" height="328" title="Word Level" width="377" x="1224" y="70"/>
                                                <oga:note color="0x9696ff" height="471" title="Prosodic Level" width="378" x="1224" y="406"/>
                                                <oga:note color="0x96ff96" height="324" title="Segmental Level" width="378" x="1225" y="884"/>
                                            </oga:notes>
                                            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                        </extensions>
                                    </graph>
                                    <ogcn:published_input field="obj" name="tableMap" ref="22103902a02f452c"/>
                                    <ogcn:published_input field="obj" name="speaker" ref="2cde07591d49421f"/>
                                    <ogcn:published_input field="obj" name="segmental totals" ref="9d4e5d5c75304010"/>
                                    <ogcn:published_input field="obj" name="report node" ref="64fcff23"/>
                                    <ogcn:published_input field="obj" name="segmental inventory" ref="a5a5820bf71e4629"/>
                                    <ogcn:published_input field="obj" name="prosodic stress inventory" ref="472d740342384f80"/>
                                    <ogcn:published_input field="obj" name="prosodic cgv inventory" ref="c4c0c10d49e54042"/>
                                    <ogcn:published_input field="obj" name="prosodic totals" ref="4b1f966a76eb4b88"/>
                                    <ogcn:published_input field="obj" name="word totals" ref="5a76f6232e654ec7"/>
                                    <ogcn:published_input field="obj" name="word stress inventory" ref="eedb0526f33e4643"/>
                                    <ogcn:published_output field="totals" name="segmental totals" ref="eb28c5583c0f4ffb"/>
                                    <ogcn:published_output field="inventory" name="segmental inventory" ref="7e796d8bd06c40be"/>
                                    <ogcn:published_output field="inventory" name="prosodic stress inventory" ref="fd153936e99f48a8"/>
                                    <ogcn:published_output field="inventory" name="prosodic cgv inventory" ref="4aa768be512b445d"/>
                                    <ogcn:published_output field="totals" name="prosodic totals" ref="b1653a090b2449f5"/>
                                    <ogcn:published_output field="totals" name="word totals" ref="b2abd77ee9084be3"/>
                                    <ogcn:published_output field="inventory" name="word stress inventory" ref="ad24c63f0459481b"/>
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.IterableClassNode.className"><![CDATA[java.util.Set]]></oga:property>
                                        </oga:settings>
                                        <oga:meta x="998" y="288"/>
                                    </extensions>
                                </ogcn:macro>
                                <ogcn:macro id="78d3bb1a" name="Print Segmental Totals" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                    <graph id="1352c40a">
                                        <node id="c493495" name="object1" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.lang.String]]></oga:property>
                                                </oga:settings>
                                            </extensions>
                                        </node>
                                        <node id="4da5a52d" name="parent" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.app.opgraph.report.tree.ReportTreeNode]]></oga:property>
                                                </oga:settings>
                                            </extensions>
                                        </node>
                                        <node id="6afcc489" name="totals" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.lang.Object]]></oga:property>
                                                </oga:settings>
                                            </extensions>
                                        </node>
                                        <node id="78029f403c7a488a" name="Setup Segmental Totals Table" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                                            <input name="totals" optional="false"/>
                                            <output name="table" type="ca.phon.query.report.datasource.DefaultTableDataSource"/>
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="__script"><![CDATA[importClass(Packages.ca.phon.query.report.datasource.DefaultTableDataSource)

function init(inputs, outputs) {
	inputs.add("totals", "", false, false);

	outputs.add("table", "", false, DefaultTableDataSource);
}

function run(context) {
	var totals = context.get("totals");
	var table = new DefaultTableDataSource();

	var colIdx = 0;
	table.setColumnTitle(colIdx++, "");
	table.setColumnTitle(colIdx++, "Onset");
	table.setColumnTitle(colIdx++, "Nucleus");
	table.setColumnTitle(colIdx++, "Coda");
	table.setColumnTitle(colIdx++, "Total Consonants (O+C)");
	table.setColumnTitle(colIdx++, "Total Phones");

	var idx = 0;
	var rowData = []
	// target
	rowData[idx++] = "# Target";
	rowData[idx++] = new java.lang.Integer(totals.onset.target.count);
	rowData[idx++] = new java.lang.Integer(totals.nucleus.target.count);
	rowData[idx++] = new java.lang.Integer(totals.coda.target.count);
	var pccTarget = totals.onset.target.count+totals.coda.target.count;
	rowData[idx++] = new java.lang.Integer(pccTarget);
	var ppcTarget = totals.onset.target.count+totals.nucleus.target.count+totals.coda.target.count;
	rowData[idx++] = new java.lang.Integer(ppcTarget);
	table.addRow(rowData);

	idx = 0;
	// correct
	rowData[idx++] = "# Correct";
	rowData[idx++] = new java.lang.Integer(totals.onset.correct.count);
	rowData[idx++] = new java.lang.Integer(totals.nucleus.correct.count);
	rowData[idx++] = new java.lang.Integer(totals.coda.correct.count);
	var pccCorrect = totals.onset.correct.count+totals.coda.correct.count;
	rowData[idx++] = new java.lang.Integer(pccCorrect);
	var ppcCorrect = totals.onset.correct.count+totals.nucleus.correct.count+totals.coda.correct.count;
	rowData[idx++] = new java.lang.Integer(ppcCorrect);
	table.addRow(rowData);

	idx = 0;
	// substitutions
	rowData[idx++] = "# Substitutions";
	rowData[idx++] = new java.lang.Integer(totals.onset.substitution.count);
	rowData[idx++] = new java.lang.Integer(totals.nucleus.substitution.count);
	rowData[idx++] = new java.lang.Integer(totals.coda.substitution.count);
	var pccSubstitution = totals.onset.substitution.count+totals.coda.substitution.count;
	rowData[idx++] = new java.lang.Integer(pccSubstitution);
	var ppcSubstitution = totals.onset.substitution.count+totals.nucleus.substitution.count+totals.coda.substitution.count;
	rowData[idx++] = new java.lang.Integer(ppcSubstitution);
	table.addRow(rowData);

	idx = 0;
	// deletions
	rowData[idx++] = "# Deletions";
	rowData[idx++] = new java.lang.Integer(totals.onset.deletion.count);
	rowData[idx++] = new java.lang.Integer(totals.nucleus.deletion.count);
	rowData[idx++] = new java.lang.Integer(totals.coda.deletion.count);
	var pccDeletion = totals.onset.deletion.count+totals.coda.deletion.count;
	rowData[idx++] = new java.lang.Integer(pccDeletion);
	var ppcDeletion = totals.onset.deletion.count+totals.nucleus.deletion.count+totals.coda.deletion.count;
	rowData[idx++] = new java.lang.Integer(ppcDeletion);
	table.addRow(rowData);

	idx = 0;
	// distortions
	rowData[idx++] = "# Distortions";
	rowData[idx++] = new java.lang.Integer(totals.onset.distortion.count);
	rowData[idx++] = new java.lang.Integer(totals.nucleus.distortion.count);
	rowData[idx++] = new java.lang.Integer(totals.coda.distortion.count);
	var pccDistortion = totals.onset.distortion.count+totals.coda.distortion.count;
	rowData[idx++] = new java.lang.Integer(pccDistortion);
	var ppcDistortion = totals.onset.distortion.count+totals.nucleus.distortion.count+totals.coda.distortion.count;
	rowData[idx++] = new java.lang.Integer(ppcDistortion);
	table.addRow(rowData);

	idx = 0;
	// epenthesis
	rowData[idx++] = "# Epenthesis";
	rowData[idx++] = new java.lang.Integer(totals.onset.epenthesis.count);
	rowData[idx++] = new java.lang.Integer(totals.nucleus.epenthesis.count);
	rowData[idx++] = new java.lang.Integer(totals.coda.epenthesis.count);
	var pccEpenthesis = totals.onset.epenthesis.count+totals.coda.epenthesis.count;
	rowData[idx++] = new java.lang.Integer(pccEpenthesis);
	var ppcEpenthesis = totals.onset.epenthesis.count+totals.nucleus.epenthesis.count+totals.coda.epenthesis.count;
	rowData[idx++] = new java.lang.Integer(ppcEpenthesis);
	table.addRow(rowData);

	idx = 0;
	// % correct
	rowData[idx++] = "% Correct";
	var pc = (totals.onset.target.count + totals.onset.epenthesis.count > 0
		? (totals.onset.correct.count / (totals.onset.correct.count+totals.onset.substitution.count+totals.onset.deletion.count+totals.onset.distortion.count+totals.onset.epenthesis.count)) * 100.0
		: 0.0);
	rowData[idx++] = new java.lang.Float(pc);

	pc = (totals.nucleus.target.count + totals.nucleus.epenthesis.count > 0
		? (totals.nucleus.correct.count / (totals.nucleus.correct.count+totals.nucleus.substitution.count+totals.nucleus.deletion.count+totals.nucleus.distortion.count+totals.nucleus.epenthesis.count)) * 100.0
		: 0.0);
	rowData[idx++] = new java.lang.Float(pc);

	pc = (totals.coda.target.count + totals.coda.epenthesis.count > 0
		? (totals.coda.correct.count / (totals.coda.correct.count+totals.coda.substitution.count+totals.coda.deletion.count+totals.coda.distortion.count+totals.coda.epenthesis.count)) * 100.0
		: 0.0);
	rowData[idx++] = new java.lang.Float(pc);

	pc = (pccTarget + pccEpenthesis > 0
		? (pccCorrect / (pccCorrect+pccSubstitution+pccDeletion+pccDistortion+pccEpenthesis)) * 100.0
		: 0.0);
	rowData[idx++] = new java.lang.Float(pc);

	pc = (ppcTarget + ppcEpenthesis > 0
		? (ppcCorrect / (ppcCorrect+ppcSubstitution+ppcDeletion+ppcDistortion+ppcEpenthesis)) * 100.0
		: 0.0);
	rowData[idx++] = new java.lang.Float(pc);

	table.addRow(rowData);

	context.put("table", table);
}
]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="1328" y="691"/>
                                            </extensions>
                                        </node>
                                        <node id="e6d3148c2a344b00" type="class:ca.gedge.opgraph.nodes.general.ArrayNode">
                                            <input name="object1" optional="false">object in array</input>
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.general.ArrayNode.numObjects"><![CDATA[1]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="905" y="866"/>
                                            </extensions>
                                        </node>
                                        <node id="863c268" type="class:ca.gedge.opgraph.nodes.general.ArrayNode">
                                            <input name="object1" optional="false">object in array</input>
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.general.ArrayNode.numObjects"><![CDATA[1]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="904" y="968"/>
                                            </extensions>
                                        </node>
                                        <node id="f01df4a584cc40a1" type="class:ca.gedge.opgraph.nodes.general.TextNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.general.TextNode.text"><![CDATA[Segmental Totals_%s]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="1105" y="862"/>
                                            </extensions>
                                        </node>
                                        <node id="de60a85" type="class:ca.gedge.opgraph.nodes.general.TextNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.general.TextNode.text"><![CDATA[Segmental Level Breakdown (%s)]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="1104" y="964"/>
                                            </extensions>
                                        </node>
                                        <node id="3042292c7cbe4d0b" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                            <input name="data" optional="false">Data to print</input>
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="dataTemplate"><![CDATA[$DATA]]></oga:property>
                                                    <oga:property key="showText"><![CDATA[false]]></oga:property>
                                                    <oga:property key="showTable"><![CDATA[true]]></oga:property>
                                                    <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="1342" y="816">
                                                    <oga:default for="buffer" type="java.lang.String">Segmental Totals_Speaker</oga:default>
                                                </oga:meta>
                                            </extensions>
                                        </node>
                                        <node id="464997be" type="class:ca.phon.app.opgraph.nodes.report.TableSectionNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.phon.app.opgraph.nodes.report.TableSectionNode.columns"/>
                                                    <oga:property key="ca.phon.app.opgraph.nodes.report.TableSectionNode.includeColumns"><![CDATA[true]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="1338" y="979">
                                                    <oga:default for="addToBeginning" type="java.lang.Boolean">true</oga:default>
                                                </oga:meta>
                                            </extensions>
                                        </node>
                                        <link dest="3042292c7cbe4d0b" destField="buffer" source="f01df4a584cc40a1" sourceField="value"/>
                                        <link dest="78029f403c7a488a" destField="totals" source="6afcc489" sourceField="obj"/>
                                        <link dest="464997be" destField="sectionName" source="de60a85" sourceField="value"/>
                                        <link dest="f01df4a584cc40a1" destField="objects" source="e6d3148c2a344b00" sourceField="array"/>
                                        <link dest="863c268" destField="object1" source="c493495" sourceField="obj"/>
                                        <link dest="e6d3148c2a344b00" destField="object1" source="c493495" sourceField="obj"/>
                                        <link dest="de60a85" destField="objects" source="863c268" sourceField="array"/>
                                        <link dest="464997be" destField="parent" source="4da5a52d" sourceField="obj"/>
                                        <link dest="3042292c7cbe4d0b" destField="data" source="78029f403c7a488a" sourceField="table"/>
                                        <link dest="464997be" destField="tableName" source="3042292c7cbe4d0b" sourceField="buffer"/>
                                    </graph>
                                    <ogcn:published_input field="obj" name="totals" ref="6afcc489"/>
                                    <ogcn:published_input field="obj" name="object1" ref="c493495"/>
                                    <ogcn:published_input field="obj" name="parent" ref="4da5a52d"/>
                                    <extensions>
                                        <oga:meta x="1139" y="691"/>
                                    </extensions>
                                </ogcn:macro>
                                <ogcn:macro id="1aa05ac1" name="Print Segmental Inventory" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                    <graph id="387711b5">
                                        <node id="713fbaa8" name="data" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                                </oga:settings>
                                            </extensions>
                                        </node>
                                        <node id="77d39f3e" name="object1" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.lang.String]]></oga:property>
                                                </oga:settings>
                                            </extensions>
                                        </node>
                                        <node id="5e48ea1b" name="parent" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.app.opgraph.report.tree.ReportTreeNode]]></oga:property>
                                                </oga:settings>
                                            </extensions>
                                        </node>
                                        <node id="a928a00eaef0461c" type="class:ca.gedge.opgraph.nodes.general.ArrayNode">
                                            <input name="object1" optional="false">object in array</input>
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.general.ArrayNode.numObjects"><![CDATA[1]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="944" y="1112"/>
                                            </extensions>
                                        </node>
                                        <node id="fe4f758ac329449b" type="class:ca.gedge.opgraph.nodes.general.ArrayNode">
                                            <input name="object1" optional="false">object in array</input>
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.general.ArrayNode.numObjects"><![CDATA[1]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="946" y="1214"/>
                                            </extensions>
                                        </node>
                                        <node id="2c44f16673a540f3" type="class:ca.gedge.opgraph.nodes.general.TextNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.general.TextNode.text"><![CDATA[Segmental Inventory_%s]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="1144" y="1108"/>
                                            </extensions>
                                        </node>
                                        <node id="8d0824b5deae4eaf" type="class:ca.gedge.opgraph.nodes.general.TextNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.general.TextNode.text"><![CDATA[Segmental Level Inventory (%s)]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="1143" y="1210"/>
                                            </extensions>
                                        </node>
                                        <node id="4e136032" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                            <input name="data" optional="false">Data to print</input>
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="dataTemplate"><![CDATA[$DATA]]></oga:property>
                                                    <oga:property key="showText"><![CDATA[false]]></oga:property>
                                                    <oga:property key="showTable"><![CDATA[true]]></oga:property>
                                                    <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="1328" y="1043"/>
                                            </extensions>
                                        </node>
                                        <node id="5d98ccdd" type="class:ca.phon.app.opgraph.nodes.report.TableSectionNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.phon.app.opgraph.nodes.report.TableSectionNode.columns"/>
                                                    <oga:property key="ca.phon.app.opgraph.nodes.report.TableSectionNode.includeColumns"><![CDATA[true]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="1327" y="1228">
                                                    <oga:default for="addToBeginning" type="java.lang.Boolean">true</oga:default>
                                                </oga:meta>
                                            </extensions>
                                        </node>
                                        <link dest="5d98ccdd" destField="sectionName" source="8d0824b5deae4eaf" sourceField="value"/>
                                        <link dest="4e136032" destField="buffer" source="2c44f16673a540f3" sourceField="value"/>
                                        <link dest="8d0824b5deae4eaf" destField="objects" source="fe4f758ac329449b" sourceField="array"/>
                                        <link dest="2c44f16673a540f3" destField="objects" source="a928a00eaef0461c" sourceField="array"/>
                                        <link dest="a928a00eaef0461c" destField="object1" source="77d39f3e" sourceField="obj"/>
                                        <link dest="4e136032" destField="data" source="713fbaa8" sourceField="obj"/>
                                        <link dest="fe4f758ac329449b" destField="object1" source="77d39f3e" sourceField="obj"/>
                                        <link dest="5d98ccdd" destField="parent" source="5e48ea1b" sourceField="obj"/>
                                        <link dest="5d98ccdd" destField="tableName" source="4e136032" sourceField="buffer"/>
                                    </graph>
                                    <ogcn:published_input field="obj" name="object1" ref="77d39f3e"/>
                                    <ogcn:published_input field="obj" name="data" ref="713fbaa8"/>
                                    <ogcn:published_input field="obj" name="parent" ref="5e48ea1b"/>
                                    <extensions>
                                        <oga:meta x="1139" y="832"/>
                                    </extensions>
                                </ogcn:macro>
                                <ogcn:macro id="674ba9c4" name="Print Prosodic Totals" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                    <graph id="63115f13">
                                        <node id="2e51249" name="object1" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.lang.String]]></oga:property>
                                                </oga:settings>
                                            </extensions>
                                        </node>
                                        <node id="2259b4b2" name="parent" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.app.opgraph.report.tree.ReportTreeNode]]></oga:property>
                                                </oga:settings>
                                            </extensions>
                                        </node>
                                        <node id="7a27b396" name="totals" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.lang.Object]]></oga:property>
                                                </oga:settings>
                                            </extensions>
                                        </node>
                                        <node id="589c4934eec14513" name="Setup Prosodic Totals Table" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                                            <input name="totals" optional="false"/>
                                            <output name="table" type="ca.phon.query.report.datasource.DefaultTableDataSource"/>
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	inputs.add("totals", "", false, false);

	outputs.add("table", "", false, Packages.ca.phon.query.report.datasource.DefaultTableDataSource);
}

function run(context) {
	var counts = context.get("totals");
	var table = new Packages.ca.phon.query.report.datasource.DefaultTableDataSource();

	var col = 0;
	var rowData = [];

	table.setColumnTitle(col++, "Dimension");
	table.setColumnTitle(col++, "Un'Str Initial");
	table.setColumnTitle(col++, "Un'Str Medial");
	table.setColumnTitle(col++, "Un'Str Final");
	table.setColumnTitle(col++, "Un'Str Total");
	table.setColumnTitle(col++, "Str Initial");
	table.setColumnTitle(col++, "Str Medial");
	table.setColumnTitle(col++, "Str Final");
	table.setColumnTitle(col++, "Str Total");
	table.setColumnTitle(col++, "Total");
	table.setColumnTitle(col++, "%");

	java.lang.System.out.println(counts.syllCount + "");

	addRow(table, "Stress correct", counts.stressCorrect, counts.syllCount);
	addRow(table, "Stress incorrect", counts.stressIncorrect, counts.syllCount);
	addRow(table, "Full syllable addition", counts.fullSyllableAddition, counts.syllCount);
	addRow(table, "Full syllable deletion", counts.fullSyllableDeletion, counts.syllCount);
	addRow(table, "Syllable expansion (O)", counts.syllableExpansion.onset, counts.syllCount);
	addRow(table, "Syllable expansion (C)", counts.syllableExpansion.coda, counts.syllCount);
//	addRow(table, "Syllable expansion (O&C)", counts.syllableExpansion.onsetAndCoda, counts.syllCount);
	addRow(table, "Syllable reduction (O)", counts.syllableReduction.onset, counts.syllCount);
	addRow(table, "Syllable reduction (C)", counts.syllableReduction.coda, counts.syllCount);
//	addRow(table, "Syllable reduction (O&C)", counts.syllableReduction.onsetAndCoda, counts.syllCount);
	addRow(table, "CGV shape correct", counts.cgvCorrect, counts.syllCount);
	addRow(table, "CGV shape incorrect", counts.cgvIncorrect, counts.syllCount);

	context.put("table", table);
}

function addRow(table, title, count, syllCount) {
	var col = 0;
	var rowData = [];

	rowData[col++] = title;
	rowData[col++] = new java.lang.Integer(count.unstressed.initial);
	rowData[col++] = new java.lang.Integer(count.unstressed.medial);
	rowData[col++] = new java.lang.Integer(count.unstressed["final"]);
	rowData[col++] = new java.lang.Integer( rowData[1].intValue() + rowData[2].intValue() + rowData[3].intValue() );

	rowData[col++] = new java.lang.Integer(count.stressed.initial);
	rowData[col++] = new java.lang.Integer(count.stressed.medial);
	rowData[col++] = new java.lang.Integer(count.stressed["final"]);
	rowData[col++] = new java.lang.Integer( rowData[5].intValue() + rowData[6].intValue() + rowData[7].intValue() );

	rowData[col++] = new java.lang.Integer( rowData[4].intValue() + rowData[8].intValue() );
	rowData[col++] = new java.lang.Float( (rowData[9].intValue() / syllCount ) * 100.0 );

	table.addRow(rowData);
}
]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="1090" y="1489"/>
                                            </extensions>
                                        </node>
                                        <node id="8d12961f13a84c46" type="class:ca.gedge.opgraph.nodes.general.ArrayNode">
                                            <input name="object1" optional="false">object in array</input>
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.general.ArrayNode.numObjects"><![CDATA[1]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="897" y="1615"/>
                                            </extensions>
                                        </node>
                                        <node id="ceabe48643ce4f0e" type="class:ca.gedge.opgraph.nodes.general.ArrayNode">
                                            <input name="object1" optional="false">object in array</input>
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.general.ArrayNode.numObjects"><![CDATA[1]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="889" y="1739"/>
                                            </extensions>
                                        </node>
                                        <node id="9137201491eb4ae9" type="class:ca.gedge.opgraph.nodes.general.TextNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.general.TextNode.text"><![CDATA[Prosodic Level Breakdown_%s]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="1077" y="1621"/>
                                            </extensions>
                                        </node>
                                        <node id="cfe04c3badc14ae9" type="class:ca.gedge.opgraph.nodes.general.TextNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.general.TextNode.text"><![CDATA[Prosodic Level Breakdown (%s)]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="1067" y="1746"/>
                                            </extensions>
                                        </node>
                                        <node id="21adf64c36ae460c" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                            <input name="data" optional="false">Data to print</input>
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="dataTemplate"><![CDATA[$DATA]]></oga:property>
                                                    <oga:property key="showText"><![CDATA[false]]></oga:property>
                                                    <oga:property key="showTable"><![CDATA[true]]></oga:property>
                                                    <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="1367" y="1530">
                                                    <oga:default for="buffer" type="java.lang.String"/>
                                                </oga:meta>
                                            </extensions>
                                        </node>
                                        <node id="a80551e14a07461f" type="class:ca.phon.app.opgraph.nodes.report.TableSectionNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.phon.app.opgraph.nodes.report.TableSectionNode.columns"/>
                                                    <oga:property key="ca.phon.app.opgraph.nodes.report.TableSectionNode.includeColumns"><![CDATA[true]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="1343" y="1684">
                                                    <oga:default for="addToBeginning" type="java.lang.Boolean">true</oga:default>
                                                </oga:meta>
                                            </extensions>
                                        </node>
                                        <link dest="21adf64c36ae460c" destField="buffer" source="9137201491eb4ae9" sourceField="value"/>
                                        <link dest="a80551e14a07461f" destField="parent" source="2259b4b2" sourceField="obj"/>
                                        <link dest="9137201491eb4ae9" destField="objects" source="8d12961f13a84c46" sourceField="array"/>
                                        <link dest="ceabe48643ce4f0e" destField="object1" source="2e51249" sourceField="obj"/>
                                        <link dest="cfe04c3badc14ae9" destField="objects" source="ceabe48643ce4f0e" sourceField="array"/>
                                        <link dest="a80551e14a07461f" destField="tableName" source="21adf64c36ae460c" sourceField="buffer"/>
                                        <link dest="21adf64c36ae460c" destField="data" source="589c4934eec14513" sourceField="table"/>
                                        <link dest="589c4934eec14513" destField="totals" source="7a27b396" sourceField="obj"/>
                                        <link dest="a80551e14a07461f" destField="sectionName" source="cfe04c3badc14ae9" sourceField="value"/>
                                        <link dest="8d12961f13a84c46" destField="object1" source="2e51249" sourceField="obj"/>
                                    </graph>
                                    <ogcn:published_input field="obj" name="parent" ref="2259b4b2"/>
                                    <ogcn:published_input field="obj" name="object1" ref="2e51249"/>
                                    <ogcn:published_input field="obj" name="totals" ref="7a27b396"/>
                                    <extensions>
                                        <oga:meta x="1144" y="1032"/>
                                    </extensions>
                                </ogcn:macro>
                                <ogcn:macro id="3b9b4b3b" name="Print Prosodic CGV Inventory" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                    <graph id="5fe23ec0">
                                        <node id="728a95f5" name="object1" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.lang.String]]></oga:property>
                                                </oga:settings>
                                            </extensions>
                                        </node>
                                        <node id="6d6a62ac" name="parent" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.app.opgraph.report.tree.ReportTreeNode]]></oga:property>
                                                </oga:settings>
                                            </extensions>
                                        </node>
                                        <node id="196ff949" name="table" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                                </oga:settings>
                                            </extensions>
                                        </node>
                                        <node id="f5d4ff22b6894a57" type="class:ca.phon.app.opgraph.nodes.table.SortNode">
                                            <extensions>
                                                <opqry:sortoptions>
                                                    <opqry:sortBy column="IPA Target" order="ascending" type="plain"/>
                                                    <opqry:sortBy column="IPA Actual" order="ascending" type="plain"/>
                                                </opqry:sortoptions>
                                                <oga:settings/>
                                                <oga:meta x="1087" y="1915"/>
                                            </extensions>
                                        </node>
                                        <node id="a3bab2132d9c4d98" type="class:ca.gedge.opgraph.nodes.general.ArrayNode">
                                            <input name="object1" optional="false">object in array</input>
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.general.ArrayNode.numObjects"><![CDATA[1]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="878" y="2006"/>
                                            </extensions>
                                        </node>
                                        <node id="d98d39f71c874e53" type="class:ca.gedge.opgraph.nodes.general.ArrayNode">
                                            <input name="object1" optional="false">object in array</input>
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.general.ArrayNode.numObjects"><![CDATA[1]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="870" y="2130"/>
                                            </extensions>
                                        </node>
                                        <node id="b1587f9fbed949ef" type="class:ca.gedge.opgraph.nodes.general.TextNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.general.TextNode.text"><![CDATA[Prosodic CGV Inventory_%s]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="1058" y="2012"/>
                                            </extensions>
                                        </node>
                                        <node id="c0f245b2fab640e9" type="class:ca.gedge.opgraph.nodes.general.TextNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.general.TextNode.text"><![CDATA[Prosodic Level CGV Inventory (%s)]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="1048" y="2137"/>
                                            </extensions>
                                        </node>
                                        <node id="617bb6561fd4e7d" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                            <input name="data" optional="false">Data to print</input>
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="dataTemplate"><![CDATA[$DATA]]></oga:property>
                                                    <oga:property key="showText"><![CDATA[false]]></oga:property>
                                                    <oga:property key="showTable"><![CDATA[true]]></oga:property>
                                                    <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="1348" y="1921">
                                                    <oga:default for="buffer" type="java.lang.String"/>
                                                </oga:meta>
                                            </extensions>
                                        </node>
                                        <node id="934cab300af844fe" type="class:ca.phon.app.opgraph.nodes.report.TableSectionNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.phon.app.opgraph.nodes.report.TableSectionNode.columns"/>
                                                    <oga:property key="ca.phon.app.opgraph.nodes.report.TableSectionNode.includeColumns"><![CDATA[true]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="1324" y="2075">
                                                    <oga:default for="addToBeginning" type="java.lang.Boolean">true</oga:default>
                                                </oga:meta>
                                            </extensions>
                                        </node>
                                        <link dest="b1587f9fbed949ef" destField="objects" source="a3bab2132d9c4d98" sourceField="array"/>
                                        <link dest="f5d4ff22b6894a57" destField="table" source="196ff949" sourceField="obj"/>
                                        <link dest="d98d39f71c874e53" destField="object1" source="728a95f5" sourceField="obj"/>
                                        <link dest="617bb6561fd4e7d" destField="data" source="f5d4ff22b6894a57" sourceField="table"/>
                                        <link dest="a3bab2132d9c4d98" destField="object1" source="728a95f5" sourceField="obj"/>
                                        <link dest="617bb6561fd4e7d" destField="buffer" source="b1587f9fbed949ef" sourceField="value"/>
                                        <link dest="c0f245b2fab640e9" destField="objects" source="d98d39f71c874e53" sourceField="array"/>
                                        <link dest="934cab300af844fe" destField="parent" source="6d6a62ac" sourceField="obj"/>
                                        <link dest="934cab300af844fe" destField="tableName" source="617bb6561fd4e7d" sourceField="buffer"/>
                                        <link dest="934cab300af844fe" destField="sectionName" source="c0f245b2fab640e9" sourceField="value"/>
                                    </graph>
                                    <ogcn:published_input field="obj" name="table" ref="196ff949"/>
                                    <ogcn:published_input field="obj" name="object1" ref="728a95f5"/>
                                    <ogcn:published_input field="obj" name="parent" ref="6d6a62ac"/>
                                    <extensions>
                                        <oga:meta x="1144" y="1173"/>
                                    </extensions>
                                </ogcn:macro>
                                <ogcn:macro id="592af60c" name="Print Prosodic Stress Inventory" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                    <graph id="259bd2a7">
                                        <node id="9c21137" name="object1" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.lang.String]]></oga:property>
                                                </oga:settings>
                                            </extensions>
                                        </node>
                                        <node id="7dc28117" name="parent" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.app.opgraph.report.tree.ReportTreeNode]]></oga:property>
                                                </oga:settings>
                                            </extensions>
                                        </node>
                                        <node id="293f9044" name="table" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                                </oga:settings>
                                            </extensions>
                                        </node>
                                        <node id="492784cf94a64f2b" type="class:ca.phon.app.opgraph.nodes.table.SortNode">
                                            <extensions>
                                                <opqry:sortoptions>
                                                    <opqry:sortBy column="IPA Target" order="ascending" type="plain"/>
                                                    <opqry:sortBy column="IPA Actual" order="ascending" type="plain"/>
                                                </opqry:sortoptions>
                                                <oga:settings/>
                                                <oga:meta x="1088" y="2330"/>
                                            </extensions>
                                        </node>
                                        <node id="5ff09b5e066f437b" type="class:ca.gedge.opgraph.nodes.general.ArrayNode">
                                            <input name="object1" optional="false">object in array</input>
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.general.ArrayNode.numObjects"><![CDATA[1]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="879" y="2421"/>
                                            </extensions>
                                        </node>
                                        <node id="5f26763b994e4bc8" type="class:ca.gedge.opgraph.nodes.general.ArrayNode">
                                            <input name="object1" optional="false">object in array</input>
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.general.ArrayNode.numObjects"><![CDATA[1]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="871" y="2545"/>
                                            </extensions>
                                        </node>
                                        <node id="b9795b8516174890" type="class:ca.gedge.opgraph.nodes.general.TextNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.general.TextNode.text"><![CDATA[Prosodic Stress Inventory_%s]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="1059" y="2427"/>
                                            </extensions>
                                        </node>
                                        <node id="5728dab7dd32404d" type="class:ca.gedge.opgraph.nodes.general.TextNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.general.TextNode.text"><![CDATA[Prosodic Level Stress Inventory (%s)]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="1050" y="2553"/>
                                            </extensions>
                                        </node>
                                        <node id="95c6ba8270ac4a98" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                            <input name="data" optional="false">Data to print</input>
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="dataTemplate"><![CDATA[$DATA]]></oga:property>
                                                    <oga:property key="showText"><![CDATA[false]]></oga:property>
                                                    <oga:property key="showTable"><![CDATA[true]]></oga:property>
                                                    <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="1349" y="2336">
                                                    <oga:default for="buffer" type="java.lang.String"/>
                                                </oga:meta>
                                            </extensions>
                                        </node>
                                        <node id="2d744ff0346d41c9" type="class:ca.phon.app.opgraph.nodes.report.TableSectionNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.phon.app.opgraph.nodes.report.TableSectionNode.columns"/>
                                                    <oga:property key="ca.phon.app.opgraph.nodes.report.TableSectionNode.includeColumns"><![CDATA[true]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="1325" y="2490">
                                                    <oga:default for="addToBeginning" type="java.lang.Boolean">true</oga:default>
                                                </oga:meta>
                                            </extensions>
                                        </node>
                                        <link dest="5ff09b5e066f437b" destField="object1" source="9c21137" sourceField="obj"/>
                                        <link dest="5f26763b994e4bc8" destField="object1" source="9c21137" sourceField="obj"/>
                                        <link dest="492784cf94a64f2b" destField="table" source="293f9044" sourceField="obj"/>
                                        <link dest="2d744ff0346d41c9" destField="tableName" source="95c6ba8270ac4a98" sourceField="buffer"/>
                                        <link dest="b9795b8516174890" destField="objects" source="5ff09b5e066f437b" sourceField="array"/>
                                        <link dest="5728dab7dd32404d" destField="objects" source="5f26763b994e4bc8" sourceField="array"/>
                                        <link dest="2d744ff0346d41c9" destField="sectionName" source="5728dab7dd32404d" sourceField="value"/>
                                        <link dest="95c6ba8270ac4a98" destField="buffer" source="b9795b8516174890" sourceField="value"/>
                                        <link dest="95c6ba8270ac4a98" destField="data" source="492784cf94a64f2b" sourceField="table"/>
                                        <link dest="2d744ff0346d41c9" destField="parent" source="7dc28117" sourceField="obj"/>
                                    </graph>
                                    <ogcn:published_input field="obj" name="object1" ref="9c21137"/>
                                    <ogcn:published_input field="obj" name="table" ref="293f9044"/>
                                    <ogcn:published_input field="obj" name="parent" ref="7dc28117"/>
                                    <extensions>
                                        <oga:meta x="1144" y="1314"/>
                                    </extensions>
                                </ogcn:macro>
                                <ogcn:macro id="3f52b69f" name="Print Word Totals" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                    <graph id="3a3c0ddf">
                                        <node id="19bf134d" name="object1" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.lang.String]]></oga:property>
                                                </oga:settings>
                                            </extensions>
                                        </node>
                                        <node id="7caca3f7" name="parent" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.app.opgraph.report.tree.ReportTreeNode]]></oga:property>
                                                </oga:settings>
                                            </extensions>
                                        </node>
                                        <node id="5ce6decf" name="totals" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.lang.Object]]></oga:property>
                                                </oga:settings>
                                            </extensions>
                                        </node>
                                        <node id="55bd1d6be6dd4544" name="Setup Word Totals Table" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                                            <input name="totals" optional="false"/>
                                            <output name="table" type="ca.phon.query.report.datasource.DefaultTableDataSource"/>
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	inputs.add("totals", "", false, false);

	outputs.add("table", "", false, Packages.ca.phon.query.report.datasource.DefaultTableDataSource);
}

function run(context) {
	var counts = context.get("totals");
	var table = new Packages.ca.phon.query.report.datasource.DefaultTableDataSource();

	var col = 0;
	table.setColumnTitle(col++, "Category");
	table.setColumnTitle(col++, "Correct");
	table.setColumnTitle(col++, "Incorrect");
	table.setColumnTitle(col++, "% Correct");

	var total = counts.total;

	addRowS(table, "Word", total, counts.correct);
	addRowS(table, "# Syllables", total, counts.syllablesCorrect || 0);
	addRowS(table, "Stress", total, counts.stressCorrect || 0);
	addRowS(table, "CGV Shape", total, counts.cgvShapeCorrect || 0);
	addRow(table, "# Transitions", total, counts.transitionsCorrect || 0, counts.transitionsIncorrect || 0);

	context.put("table", table);
}

function addRowS(table, category, total, correct) {
	addRow(table, category, total, correct, total - correct);
}

function addRow(table, category, total, correct, incorrect) {
	var col = 0;
	var rowData = [];

	var pc = (correct / (correct + incorrect)) * 100.0;

	rowData[col++] = category;
	rowData[col++] = new java.lang.Integer(correct);
	rowData[col++] = new java.lang.Integer(incorrect);
	rowData[col++] = new java.lang.Float(pc);

	table.addRow(rowData);
}
]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="1012" y="2761"/>
                                            </extensions>
                                        </node>
                                        <node id="ccc9aafc6ce94cb6" type="class:ca.gedge.opgraph.nodes.general.ArrayNode">
                                            <input name="object1" optional="false">object in array</input>
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.general.ArrayNode.numObjects"><![CDATA[1]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="943" y="2919"/>
                                            </extensions>
                                        </node>
                                        <node id="eb97ed4353244a3a" type="class:ca.gedge.opgraph.nodes.general.ArrayNode">
                                            <input name="object1" optional="false">object in array</input>
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.general.ArrayNode.numObjects"><![CDATA[1]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="935" y="3043"/>
                                            </extensions>
                                        </node>
                                        <node id="879ed09a9f3f4e9a" type="class:ca.gedge.opgraph.nodes.general.TextNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.general.TextNode.text"><![CDATA[Word Level Accuracy_%s]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="1123" y="2925"/>
                                            </extensions>
                                        </node>
                                        <node id="490433fa4ce94dd5" type="class:ca.gedge.opgraph.nodes.general.TextNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.general.TextNode.text"><![CDATA[Word Level Accuracy (%s)]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="1132" y="3041"/>
                                            </extensions>
                                        </node>
                                        <node id="ec1ca0ff9b8b4947" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                            <input name="data" optional="false">Data to print</input>
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="dataTemplate"><![CDATA[$DATA]]></oga:property>
                                                    <oga:property key="showText"><![CDATA[false]]></oga:property>
                                                    <oga:property key="showTable"><![CDATA[true]]></oga:property>
                                                    <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="1393" y="2817">
                                                    <oga:default for="buffer" type="java.lang.String"/>
                                                </oga:meta>
                                            </extensions>
                                        </node>
                                        <node id="75d9f68da98e4bb5" type="class:ca.phon.app.opgraph.nodes.report.TableSectionNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.phon.app.opgraph.nodes.report.TableSectionNode.columns"/>
                                                    <oga:property key="ca.phon.app.opgraph.nodes.report.TableSectionNode.includeColumns"><![CDATA[true]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="1369" y="2971">
                                                    <oga:default for="addToBeginning" type="java.lang.Boolean">true</oga:default>
                                                </oga:meta>
                                            </extensions>
                                        </node>
                                        <link dest="55bd1d6be6dd4544" destField="totals" source="5ce6decf" sourceField="obj"/>
                                        <link dest="ec1ca0ff9b8b4947" destField="data" source="55bd1d6be6dd4544" sourceField="table"/>
                                        <link dest="ec1ca0ff9b8b4947" destField="buffer" source="879ed09a9f3f4e9a" sourceField="value"/>
                                        <link dest="ccc9aafc6ce94cb6" destField="object1" source="19bf134d" sourceField="obj"/>
                                        <link dest="879ed09a9f3f4e9a" destField="objects" source="ccc9aafc6ce94cb6" sourceField="array"/>
                                        <link dest="75d9f68da98e4bb5" destField="sectionName" source="490433fa4ce94dd5" sourceField="value"/>
                                        <link dest="75d9f68da98e4bb5" destField="parent" source="7caca3f7" sourceField="obj"/>
                                        <link dest="75d9f68da98e4bb5" destField="tableName" source="ec1ca0ff9b8b4947" sourceField="buffer"/>
                                        <link dest="eb97ed4353244a3a" destField="object1" source="19bf134d" sourceField="obj"/>
                                        <link dest="490433fa4ce94dd5" destField="objects" source="eb97ed4353244a3a" sourceField="array"/>
                                    </graph>
                                    <ogcn:published_input field="obj" name="totals" ref="5ce6decf"/>
                                    <ogcn:published_input field="obj" name="object1" ref="19bf134d"/>
                                    <ogcn:published_input field="obj" name="parent" ref="7caca3f7"/>
                                    <extensions>
                                        <oga:meta x="1147" y="1520"/>
                                    </extensions>
                                </ogcn:macro>
                                <ogcn:macro id="20f336d" name="Print Word Stress Inventory" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                    <graph id="4a4f9b10">
                                        <node id="37ef1fc6" name="object1" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.lang.String]]></oga:property>
                                                </oga:settings>
                                            </extensions>
                                        </node>
                                        <node id="6481337b" name="parent" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.app.opgraph.report.tree.ReportTreeNode]]></oga:property>
                                                </oga:settings>
                                            </extensions>
                                        </node>
                                        <node id="da45134" name="table" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                                </oga:settings>
                                            </extensions>
                                        </node>
                                        <node id="106699053aba48fe" type="class:ca.phon.app.opgraph.nodes.table.SortNode">
                                            <extensions>
                                                <opqry:sortoptions>
                                                    <opqry:sortBy column="IPA Target" order="ascending" type="plain"/>
                                                    <opqry:sortBy column="IPA Actual" order="ascending" type="plain"/>
                                                </opqry:sortoptions>
                                                <oga:settings/>
                                                <oga:meta x="1131" y="3202"/>
                                            </extensions>
                                        </node>
                                        <node id="fb2540fa630c4160" type="class:ca.gedge.opgraph.nodes.general.ArrayNode">
                                            <input name="object1" optional="false">object in array</input>
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.general.ArrayNode.numObjects"><![CDATA[1]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="892" y="3312"/>
                                            </extensions>
                                        </node>
                                        <node id="55861ec1c12749b5" type="class:ca.gedge.opgraph.nodes.general.ArrayNode">
                                            <input name="object1" optional="false">object in array</input>
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.general.ArrayNode.numObjects"><![CDATA[1]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="884" y="3436"/>
                                            </extensions>
                                        </node>
                                        <node id="9b21fbe93b54d12" type="class:ca.gedge.opgraph.nodes.general.TextNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.general.TextNode.text"><![CDATA[Word Stress Inventory_%s]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="1072" y="3318"/>
                                            </extensions>
                                        </node>
                                        <node id="8455b26981ae4c4c" type="class:ca.gedge.opgraph.nodes.general.TextNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.general.TextNode.text"><![CDATA[Word Level Stress Inventory (%s)]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="1062" y="3443"/>
                                            </extensions>
                                        </node>
                                        <node id="2e732f3f6b024601" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                            <input name="data" optional="false">Data to print</input>
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="dataTemplate"><![CDATA[$DATA]]></oga:property>
                                                    <oga:property key="showText"><![CDATA[false]]></oga:property>
                                                    <oga:property key="showTable"><![CDATA[true]]></oga:property>
                                                    <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="1362" y="3227">
                                                    <oga:default for="buffer" type="java.lang.String"/>
                                                </oga:meta>
                                            </extensions>
                                        </node>
                                        <node id="65e58e4a25114820" type="class:ca.phon.app.opgraph.nodes.report.TableSectionNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.phon.app.opgraph.nodes.report.TableSectionNode.columns"/>
                                                    <oga:property key="ca.phon.app.opgraph.nodes.report.TableSectionNode.includeColumns"><![CDATA[true]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="1338" y="3381">
                                                    <oga:default for="addToBeginning" type="java.lang.Boolean">true</oga:default>
                                                </oga:meta>
                                            </extensions>
                                        </node>
                                        <link dest="8455b26981ae4c4c" destField="objects" source="55861ec1c12749b5" sourceField="array"/>
                                        <link dest="65e58e4a25114820" destField="sectionName" source="8455b26981ae4c4c" sourceField="value"/>
                                        <link dest="65e58e4a25114820" destField="tableName" source="2e732f3f6b024601" sourceField="buffer"/>
                                        <link dest="55861ec1c12749b5" destField="object1" source="37ef1fc6" sourceField="obj"/>
                                        <link dest="2e732f3f6b024601" destField="buffer" source="9b21fbe93b54d12" sourceField="value"/>
                                        <link dest="fb2540fa630c4160" destField="object1" source="37ef1fc6" sourceField="obj"/>
                                        <link dest="9b21fbe93b54d12" destField="objects" source="fb2540fa630c4160" sourceField="array"/>
                                        <link dest="2e732f3f6b024601" destField="data" source="106699053aba48fe" sourceField="table"/>
                                        <link dest="65e58e4a25114820" destField="parent" source="6481337b" sourceField="obj"/>
                                        <link dest="106699053aba48fe" destField="table" source="da45134" sourceField="obj"/>
                                    </graph>
                                    <ogcn:published_input field="obj" name="object1" ref="37ef1fc6"/>
                                    <ogcn:published_input field="obj" name="parent" ref="6481337b"/>
                                    <ogcn:published_input field="obj" name="table" ref="da45134"/>
                                    <extensions>
                                        <oga:meta x="1147" y="1661"/>
                                    </extensions>
                                </ogcn:macro>
                                <link dest="923b1235cde247a8" destField="table" source="fda3b374aa2e4b57" sourceField="obj"/>
                                <link dest="cd529cc9bedf4ecc" destField="collection" source="923b1235cde247a8" sourceField="keySet"/>
                                <link dest="cd529cc9bedf4ecc" destField="tableMap" source="923b1235cde247a8" sourceField="tableMap"/>
                                <link dest="cd529cc9bedf4ecc" destField="speaker" source="32b10bbefcb14fb6" sourceField="obj"/>
                                <link dest="cd529cc9bedf4ecc" destField="segmental totals" source="57b2fd38a4c54ca8" sourceField="totals"/>
                                <link dest="6ced59c7" destField="sectionName" source="66eabc39" sourceField="value"/>
                                <link dest="66eabc39" destField="obj" source="32b10bbefcb14fb6" sourceField="obj"/>
                                <link dest="cd529cc9bedf4ecc" destField="report node" source="6ced59c7" sourceField="section"/>
                                <link dest="6ced59c7" destField="parent" source="5db72372" sourceField="obj"/>
                                <link dest="cd529cc9bedf4ecc" destField="segmental inventory" source="bbe78aecd8f94ff5" sourceField="inventory"/>
                                <link dest="cd529cc9bedf4ecc" destField="prosodic cgv inventory" source="dfaaabf7b0d14626" sourceField="inventory"/>
                                <link dest="cd529cc9bedf4ecc" destField="prosodic stress inventory" source="f0d71e1be7cd4dd2" sourceField="inventory"/>
                                <link dest="cd529cc9bedf4ecc" destField="prosodic totals" source="804e47177ea847a3" sourceField="totals"/>
                                <link dest="cd529cc9bedf4ecc" destField="word totals" source="97fdb8b4a9849e3" sourceField="totals"/>
                                <link dest="cd529cc9bedf4ecc" destField="word stress inventory" source="3d50035ed1d64160" sourceField="inventory"/>
                                <link dest="78d3bb1a" destField="totals" source="cd529cc9bedf4ecc" sourceField="segmental totals"/>
                                <link dest="78d3bb1a" destField="parent" source="6ced59c7" sourceField="section"/>
                                <link dest="78d3bb1a" destField="object1" source="66eabc39" sourceField="value"/>
                                <link dest="1aa05ac1" destField="data" source="cd529cc9bedf4ecc" sourceField="segmental inventory"/>
                                <link dest="1aa05ac1" destField="object1" source="66eabc39" sourceField="value"/>
                                <link dest="1aa05ac1" destField="parent" source="6ced59c7" sourceField="section"/>
                                <link dest="674ba9c4" destField="parent" source="6ced59c7" sourceField="section"/>
                                <link dest="674ba9c4" destField="object1" source="66eabc39" sourceField="value"/>
                                <link dest="674ba9c4" destField="totals" source="cd529cc9bedf4ecc" sourceField="prosodic totals"/>
                                <link dest="3b9b4b3b" destField="table" source="cd529cc9bedf4ecc" sourceField="prosodic cgv inventory"/>
                                <link dest="3b9b4b3b" destField="object1" source="66eabc39" sourceField="value"/>
                                <link dest="3b9b4b3b" destField="parent" source="6ced59c7" sourceField="section"/>
                                <link dest="592af60c" destField="parent" source="6ced59c7" sourceField="section"/>
                                <link dest="592af60c" destField="object1" source="66eabc39" sourceField="value"/>
                                <link dest="592af60c" destField="table" source="cd529cc9bedf4ecc" sourceField="prosodic stress inventory"/>
                                <link dest="3f52b69f" destField="totals" source="cd529cc9bedf4ecc" sourceField="word totals"/>
                                <link dest="3f52b69f" destField="parent" source="6ced59c7" sourceField="section"/>
                                <link dest="3f52b69f" destField="object1" source="66eabc39" sourceField="value"/>
                                <link dest="20f336d" destField="parent" source="6ced59c7" sourceField="section"/>
                                <link dest="20f336d" destField="object1" source="66eabc39" sourceField="value"/>
                                <link dest="20f336d" destField="table" source="cd529cc9bedf4ecc" sourceField="word stress inventory"/>
                                <extensions>
                                    <oga:notes>
                                        <oga:note color="0xffff96" height="868" title="Published Inputs" width="302" x="68" y="117"/>
                                        <oga:note color="0x96ff96" height="351" title="Segmental Level" width="829" x="572" y="650"/>
                                        <oga:note color="0x9696ff" height="447" title="Prosodic Level" width="832" x="572" y="1007"/>
                                        <oga:note color="0xffc864" height="360" title="Word Level" width="836" x="571" y="1461"/>
                                    </oga:notes>
                                    <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                </extensions>
                            </graph>
                            <ogcn:published_input field="obj" name="table" ref="fda3b374aa2e4b57"/>
                            <ogcn:published_input field="obj" name="selectedSessions" ref="a1995dcea18b4ba9"/>
                            <ogcn:published_input field="obj" name="speaker" ref="32b10bbefcb14fb6"/>
                            <ogcn:published_input field="obj" name="report node" ref="5db72372"/>
                            <ogcn:published_output field="segmental totals" name="totals" ref="cd529cc9bedf4ecc"/>
                            <ogcn:published_output field="segmental inventory" name="segmental inventory" ref="cd529cc9bedf4ecc"/>
                            <ogcn:published_output field="prosodic stress inventory" name="prosodic stress inventory" ref="cd529cc9bedf4ecc"/>
                            <ogcn:published_output field="prosodic cgv inventory" name="prosodic cgv inventory" ref="cd529cc9bedf4ecc"/>
                            <ogcn:published_output field="prosodic totals" name="prosodic totals" ref="cd529cc9bedf4ecc"/>
                            <ogcn:published_output field="word totals" name="word totals" ref="cd529cc9bedf4ecc"/>
                            <ogcn:published_output field="word stress inventory" name="word stress inventory" ref="cd529cc9bedf4ecc"/>
                            <extensions>
                                <oga:meta x="788" y="134"/>
                            </extensions>
                        </ogcn:macro>
                        <node id="3b0e69d380b0423a" name="Add to Word Stress Inventory" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                            <input name="inventory" optional="false"/>
                            <input name="sub-inventory" optional="false"/>
                            <output name="inventory" type="ca.phon.query.report.datasource.DefaultTableDataSource"/>
                            <extensions>
                                <oga:settings>
                                    <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	inputs.add("inventory", "", false, false);
	inputs.add("sub-inventory", "", false, false);

	outputs.add("inventory", "", false, Packages.ca.phon.query.report.datasource.DefaultTableDataSource);
}

function run(context) {
	var keyCols = [ 0, 1 ];

	var inventory = context.get("inventory");
	var subInventory = context.get("sub-inventory");

	for(var row = 0; row < subInventory.rowCount; row++) {
		var rowData = subInventory.getRow(row);

		var rowKey = [ rowData[0], rowData[1] ];
		var count = inventory.getValueAt(keyCols, rowKey, "Count");

		if(count != null) {
			var newCount = count.intValue() + rowData[2].intValue();
			inventory.setValueAt(keyCols, rowKey, "Count", new java.lang.Integer(newCount));
		} else {
			inventory.addRow(rowData);
		}
	}
}
]]></oga:property>
                                </oga:settings>
                                <oga:meta x="1280" y="34"/>
                            </extensions>
                        </node>
                        <node id="f7053bba333143bf" name="Word Totals" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                            <input name="totals" optional="false"/>
                            <input name="subtotal" optional="false"/>
                            <output name="totals" type="java.lang.Object"/>
                            <extensions>
                                <oga:settings>
                                    <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	inputs.add("totals", "", false, false);
	inputs.add("subtotal", "", false, false);

	outputs.add("totals", "", false, java.lang.Object);
}

function run(context) {
	var totals = context.get("totals");
	var subtotal = context.get("subtotal");

	totals.total += subtotal.total;
	totals.correct += subtotal.correct;
	totals.syllablesCorrect += subtotal.syllablesCorrect;
	totals.stressCorrect += subtotal.stressCorrect;
	totals.cgvShapeCorrect += subtotal.cgvShapeCorrect;
	totals.transitionsCorrect += subtotal.transitionsCorrect;
	totals.transitionsIncorrect += subtotal.transitionsIncorrect;

	context.put("totals", totals);
}
]]></oga:property>
                                </oga:settings>
                                <oga:meta x="1280" y="168"/>
                            </extensions>
                        </node>
                        <node id="359ed559ae514d1e" name="Add to Prosodic Stress Inventory" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                            <input name="inventory" optional="false"/>
                            <input name="sub-inventory" optional="false"/>
                            <output name="inventory" type="ca.phon.query.report.datasource.DefaultTableDataSource"/>
                            <extensions>
                                <oga:settings>
                                    <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	inputs.add("inventory", "", false, false);
	inputs.add("sub-inventory", "", false, false);

	outputs.add("inventory", "", false, Packages.ca.phon.query.report.datasource.DefaultTableDataSource);
}

function run(context) {
	var keyCols = [ 0, 1 ];

	var inventory = context.get("inventory");
	var subInventory = context.get("sub-inventory");

	for(var row = 0; row < subInventory.rowCount; row++) {
		var rowData = subInventory.getRow(row);

		var rowKey = [ rowData[0], rowData[1] ];
		var count = inventory.getValueAt(keyCols, rowKey, "Count");

		if(count != null) {
			var newCount = count.intValue() + rowData[2].intValue();
			inventory.setValueAt(keyCols, rowKey, "Count", new java.lang.Integer(newCount));
		} else {
			inventory.addRow(rowData);
		}
	}
}
]]></oga:property>
                                </oga:settings>
                                <oga:meta x="1280" y="341"/>
                            </extensions>
                        </node>
                        <node id="1c777bf18a05434e" name="Add to Prosodic CGV Inventory" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                            <input name="inventory" optional="false"/>
                            <input name="sub-inventory" optional="false"/>
                            <output name="inventory" type="ca.phon.query.report.datasource.DefaultTableDataSource"/>
                            <extensions>
                                <oga:settings>
                                    <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	inputs.add("inventory", "", false, false);
	inputs.add("sub-inventory", "", false, false);

	outputs.add("inventory", "", false, Packages.ca.phon.query.report.datasource.DefaultTableDataSource);
}

function run(context) {
	var keyCols = [ 0, 1 ];

	var inventory = context.get("inventory");
	var subInventory = context.get("sub-inventory");

	for(var row = 0; row < subInventory.rowCount; row++) {
		var rowData = subInventory.getRow(row);

		var rowKey = [ rowData[0], rowData[1] ];
		var count = inventory.getValueAt(keyCols, rowKey, "Count");

		if(count != null) {
			var newCount = count.intValue() + rowData[2].intValue();
			inventory.setValueAt(keyCols, rowKey, "Count", new java.lang.Integer(newCount));
		} else {
			inventory.addRow(rowData);
		}
	}
}
]]></oga:property>
                                </oga:settings>
                                <oga:meta x="1280" y="480"/>
                            </extensions>
                        </node>
                        <node id="a448632b03cc43d2" name="Prosodic Totals" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                            <input name="totals" optional="false"/>
                            <input name="subtotal" optional="false"/>
                            <output name="totals" type="java.lang.Object"/>
                            <extensions>
                                <oga:settings>
                                    <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	inputs.add("totals", "", false, false);
	inputs.add("subtotal", "", false, false);

	outputs.add("totals", "", false, java.lang.Object);
}

function run(context) {
	var totals = context.get("totals");
	var subtotal = context.get("subtotal");

//	sumcounts(totals.syllCount, subtotal.syllCount);

	totals.syllCount += subtotal.syllCount;
	sumcounts(totals.stressCorrect, subtotal.stressCorrect);
	sumcounts(totals.stressIncorrect, subtotal.stressIncorrect);
	sumcounts(totals.fullSyllableAddition, subtotal.fullSyllableAddition);
	sumcounts(totals.fullSyllableDeletion, subtotal.fullSyllableDeletion);
	sumcounts(totals.syllableReduction.onset, subtotal.syllableReduction.onset);
	sumcounts(totals.syllableReduction.coda, subtotal.syllableReduction.coda);
	sumcounts(totals.syllableReduction.onsetAndCoda, subtotal.syllableReduction.onsetAndCoda);
	sumcounts(totals.syllableExpansion.onset, subtotal.syllableExpansion.onset);
	sumcounts(totals.syllableExpansion.coda, subtotal.syllableExpansion.coda);
	sumcounts(totals.syllableExpansion.onsetAndCoda, subtotal.syllableExpansion.onsetAndCoda);
	sumcounts(totals.cgvCorrect, subtotal.cgvCorrect);
	sumcounts(totals.cgvIncorrect, subtotal.cgvIncorrect);

	context.put("totals", totals);
}

function sumcounts(total, subtotal) {
	total.stressed["initial"] += subtotal.stressed["initial"];
	total.unstressed["initial"] += subtotal.unstressed["initial"];

	total.stressed["medial"] += subtotal.stressed["medial"];
	total.unstressed["medial"] += subtotal.unstressed["medial"];

	total.stressed["final"] += subtotal.stressed["final"];
	total.unstressed["final"] += subtotal.unstressed["final"];
}
]]></oga:property>
                                </oga:settings>
                                <oga:meta x="1280" y="631"/>
                            </extensions>
                        </node>
                        <node id="1ccd59e9ffe049af" name="Segmental Totals" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                            <input name="totals" optional="false"/>
                            <input name="subtotal" optional="false"/>
                            <output name="totals" type="java.lang.Object"/>
                            <extensions>
                                <oga:settings>
                                    <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	inputs.add("totals", "", false, false);
	inputs.add("subtotal", "", false, false);

	outputs.add("totals", "", false, java.lang.Object);
}

function run(context) {
	var totals = context.get("totals");
	var subtotal = context.get("subtotal");

	sumcounts(totals.onset, subtotal.onset);
	sumcounts(totals.nucleus, subtotal.nucleus);
	sumcounts(totals.coda, subtotal.coda);
	sumcounts(totals.unknown, subtotal.unknown);

	context.put("totals", totals);
}

function sumcounts(total, subtotal) {
	total.target.count += subtotal.target.count;
	total.correct.count += subtotal.correct.count;
	total.substitution.count += subtotal.substitution.count;
	total.deletion.count += subtotal.deletion.count;
	total.epenthesis.count += subtotal.epenthesis.count;
}
]]></oga:property>
                                </oga:settings>
                                <oga:meta x="1280" y="825"/>
                            </extensions>
                        </node>
                        <node id="36eb798766f04a9e" name="Add to Segmental Inventory" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                            <input name="inventory" optional="false"/>
                            <input name="sub-inventory" optional="false"/>
                            <output name="inventory" type="ca.phon.query.report.datasource.DefaultTableDataSource"/>
                            <extensions>
                                <oga:settings>
                                    <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	inputs.add("inventory", "", false, false);
	inputs.add("sub-inventory", "", false, false);

	outputs.add("inventory", "", false, Packages.ca.phon.query.report.datasource.DefaultTableDataSource);
}

function run(context) {
	var keyCols = [ 0, 1 ];

	var inventory = context.get("inventory");
	var subInventory = context.get("sub-inventory");

	for(var row = 0; row < subInventory.rowCount; row++) {
		var rowData = subInventory.getRow(row);

		var rowKey = [ rowData[0], rowData[1] ];
		var count = inventory.getValueAt(keyCols, rowKey, "Count");

		if(count != null) {
			var newCount = count.intValue() + rowData[2].intValue();
			inventory.setValueAt(keyCols, rowKey, "Count", new java.lang.Integer(newCount));
		} else {
			inventory.addRow(rowData);
		}
	}
}
]]></oga:property>
                                </oga:settings>
                                <oga:meta x="1280" y="977"/>
                            </extensions>
                        </node>
                        <link dest="e8ae4a39fdd74375" destField="speaker" source="7d1055dcc76e435a" sourceField="obj"/>
                        <link dest="7d1055dcc76e435a" destField="obj" source="4579a77279ca4a66" sourceField="obj"/>
                        <link dest="e8ae4a39fdd74375" destField="tableMap" source="16d59d355bab4424" sourceField="obj"/>
                        <link dest="e9d3beb84fbe42d4" destField="table" source="e8ae4a39fdd74375" sourceField="table"/>
                        <link dest="e9d3beb84fbe42d4" destField="enabled" source="e8ae4a39fdd74375" sourceField="exists"/>
                        <link dest="e9d3beb84fbe42d4" destField="selectedSessions" source="3c9691c6bb004e13" sourceField="obj"/>
                        <link dest="e9d3beb84fbe42d4" destField="speaker" source="7d1055dcc76e435a" sourceField="obj"/>
                        <link dest="1ccd59e9ffe049af" destField="totals" source="6e8d3cbf56644e64" sourceField="obj"/>
                        <link dest="1ccd59e9ffe049af" destField="subtotal" source="e9d3beb84fbe42d4" sourceField="totals"/>
                        <link dest="1ccd59e9ffe049af" destField="enabled" source="e8ae4a39fdd74375" sourceField="exists"/>
                        <link dest="e9d3beb84fbe42d4" destField="report node" source="109c1849" sourceField="obj"/>
                        <link dest="36eb798766f04a9e" destField="enabled" source="e8ae4a39fdd74375" sourceField="exists"/>
                        <link dest="36eb798766f04a9e" destField="sub-inventory" source="e9d3beb84fbe42d4" sourceField="segmental inventory"/>
                        <link dest="36eb798766f04a9e" destField="inventory" source="fa3a91a457e0455e" sourceField="obj"/>
                        <link dest="359ed559ae514d1e" destField="sub-inventory" source="e9d3beb84fbe42d4" sourceField="prosodic stress inventory"/>
                        <link dest="1c777bf18a05434e" destField="sub-inventory" source="e9d3beb84fbe42d4" sourceField="prosodic cgv inventory"/>
                        <link dest="359ed559ae514d1e" destField="enabled" source="e8ae4a39fdd74375" sourceField="exists"/>
                        <link dest="1c777bf18a05434e" destField="enabled" source="e8ae4a39fdd74375" sourceField="exists"/>
                        <link dest="359ed559ae514d1e" destField="inventory" source="e5b1641ea8924bbc" sourceField="obj"/>
                        <link dest="1c777bf18a05434e" destField="inventory" source="9204e404e10c4e6c" sourceField="obj"/>
                        <link dest="a448632b03cc43d2" destField="subtotal" source="e9d3beb84fbe42d4" sourceField="prosodic totals"/>
                        <link dest="a448632b03cc43d2" destField="enabled" source="e8ae4a39fdd74375" sourceField="exists"/>
                        <link dest="a448632b03cc43d2" destField="totals" source="9678ec6fbbbf4a6c" sourceField="obj"/>
                        <link dest="f7053bba333143bf" destField="subtotal" source="e9d3beb84fbe42d4" sourceField="word totals"/>
                        <link dest="f7053bba333143bf" destField="totals" source="267cbb518d6d4d8f" sourceField="obj"/>
                        <link dest="f7053bba333143bf" destField="enabled" source="e8ae4a39fdd74375" sourceField="exists"/>
                        <link dest="3b0e69d380b0423a" destField="sub-inventory" source="e9d3beb84fbe42d4" sourceField="word stress inventory"/>
                        <link dest="3b0e69d380b0423a" destField="inventory" source="1ba6fbba018648d6" sourceField="obj"/>
                        <extensions>
                            <oga:notes>
                                <oga:note color="0xffff96" height="1286" title="Published Inputs" width="368" x="33" y="160"/>
                                <oga:note color="0xffc864" height="294" title="Word Level" width="460" x="1177" y="8"/>
                                <oga:note color="0x9696ff" height="464" title="Prosodic Level" width="464" x="1176" y="309"/>
                                <oga:note color="0x96ff96" height="345" title="Segmental Level" width="467" x="1174" y="778"/>
                            </oga:notes>
                            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                        </extensions>
                    </graph>
                    <ogcn:published_input field="obj" name="tableMap" ref="16d59d355bab4424"/>
                    <ogcn:published_input field="obj" name="selectedSessions" ref="3c9691c6bb004e13"/>
                    <ogcn:published_input field="obj" name="segmental totals" ref="6e8d3cbf56644e64"/>
                    <ogcn:published_input field="obj" name="report node" ref="109c1849"/>
                    <ogcn:published_input field="obj" name="segmental inventory" ref="fa3a91a457e0455e"/>
                    <ogcn:published_input field="obj" name="prosodic stress inventory" ref="e5b1641ea8924bbc"/>
                    <ogcn:published_input field="obj" name="prosodic cgv inventory" ref="9204e404e10c4e6c"/>
                    <ogcn:published_input field="obj" name="prosodic totals" ref="9678ec6fbbbf4a6c"/>
                    <ogcn:published_input field="obj" name="word totals" ref="267cbb518d6d4d8f"/>
                    <ogcn:published_input field="obj" name="word stress inventory" ref="1ba6fbba018648d6"/>
                    <ogcn:published_output field="totals" name="segmental totals" ref="1ccd59e9ffe049af"/>
                    <ogcn:published_output field="inventory" name="segmental inventory" ref="36eb798766f04a9e"/>
                    <ogcn:published_output field="inventory" name="prosodic stress inventory" ref="359ed559ae514d1e"/>
                    <ogcn:published_output field="inventory" name="prosodic cgv inventory" ref="1c777bf18a05434e"/>
                    <ogcn:published_output field="totals" name="prosodic totals" ref="a448632b03cc43d2"/>
                    <ogcn:published_output field="totals" name="word totals" ref="f7053bba333143bf"/>
                    <ogcn:published_output field="inventory" name="word stress inventory" ref="3b0e69d380b0423a"/>
                    <extensions>
                        <oga:settings>
                            <oga:property key="ca.gedge.opgraph.nodes.reflect.IterableClassNode.className"><![CDATA[java.util.ArrayList]]></oga:property>
                        </oga:settings>
                        <oga:meta x="847" y="141"/>
                    </extensions>
                </ogcn:macro>
                <ogcn:macro id="6d9a4866" name="Segmental Totals" type="ca.gedge.opgraph.nodes.general.MacroNode">
                    <graph id="154af69">
                        <node id="737af0a8" name="parent" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                            <extensions>
                                <oga:settings>
                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.app.opgraph.report.tree.ReportTreeNode]]></oga:property>
                                </oga:settings>
                                <oga:meta x="15" y="15"/>
                            </extensions>
                        </node>
                        <node id="5bc63bfd" name="totals" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                            <extensions>
                                <oga:settings>
                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.lang.Object]]></oga:property>
                                </oga:settings>
                                <oga:meta x="15" y="196"/>
                            </extensions>
                        </node>
                        <node id="dda647477e741b6" name="Setup Segmental Totals Table" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                            <input name="totals" optional="false"/>
                            <output name="table" type="ca.phon.query.report.datasource.DefaultTableDataSource"/>
                            <extensions>
                                <oga:settings>
                                    <oga:property key="__script"><![CDATA[importClass(Packages.ca.phon.query.report.datasource.DefaultTableDataSource)

function init(inputs, outputs) {
	inputs.add("totals", "", false, false);

	outputs.add("table", "", false, DefaultTableDataSource);
}

function run(context) {
	var totals = context.get("totals");
	var table = new DefaultTableDataSource();

	var colIdx = 0;
	table.setColumnTitle(colIdx++, "");
	table.setColumnTitle(colIdx++, "Onset");
	table.setColumnTitle(colIdx++, "Nucleus");
	table.setColumnTitle(colIdx++, "Coda");
	table.setColumnTitle(colIdx++, "Total Consonants (O+C)");
	table.setColumnTitle(colIdx++, "Total Phones");

	var idx = 0;
	var rowData = []
	// target
	rowData[idx++] = "# Target";
	rowData[idx++] = new java.lang.Integer(totals.onset.target.count);
	rowData[idx++] = new java.lang.Integer(totals.nucleus.target.count);
	rowData[idx++] = new java.lang.Integer(totals.coda.target.count);
	var pccTarget = totals.onset.target.count+totals.coda.target.count;
	rowData[idx++] = new java.lang.Integer(pccTarget);
	var ppcTarget = totals.onset.target.count+totals.nucleus.target.count+totals.coda.target.count;
	rowData[idx++] = new java.lang.Integer(ppcTarget);
	table.addRow(rowData);

	idx = 0;
	// correct
	rowData[idx++] = "# Correct";
	rowData[idx++] = new java.lang.Integer(totals.onset.correct.count);
	rowData[idx++] = new java.lang.Integer(totals.nucleus.correct.count);
	rowData[idx++] = new java.lang.Integer(totals.coda.correct.count);
	var pccCorrect = totals.onset.correct.count+totals.coda.correct.count;
	rowData[idx++] = new java.lang.Integer(pccCorrect);
	var ppcCorrect = totals.onset.correct.count+totals.nucleus.correct.count+totals.coda.correct.count;
	rowData[idx++] = new java.lang.Integer(ppcCorrect);
	table.addRow(rowData);

	idx = 0;
	// substitutions
	rowData[idx++] = "# Substitutions";
	rowData[idx++] = new java.lang.Integer(totals.onset.substitution.count);
	rowData[idx++] = new java.lang.Integer(totals.nucleus.substitution.count);
	rowData[idx++] = new java.lang.Integer(totals.coda.substitution.count);
	var pccSubstitution = totals.onset.substitution.count+totals.coda.substitution.count;
	rowData[idx++] = new java.lang.Integer(pccSubstitution);
	var ppcSubstitution = totals.onset.substitution.count+totals.nucleus.substitution.count+totals.coda.substitution.count;
	rowData[idx++] = new java.lang.Integer(ppcSubstitution);
	table.addRow(rowData);

	idx = 0;
	// deletions
	rowData[idx++] = "# Deletions";
	rowData[idx++] = new java.lang.Integer(totals.onset.deletion.count);
	rowData[idx++] = new java.lang.Integer(totals.nucleus.deletion.count);
	rowData[idx++] = new java.lang.Integer(totals.coda.deletion.count);
	var pccDeletion = totals.onset.deletion.count+totals.coda.deletion.count;
	rowData[idx++] = new java.lang.Integer(pccDeletion);
	var ppcDeletion = totals.onset.deletion.count+totals.nucleus.deletion.count+totals.coda.deletion.count;
	rowData[idx++] = new java.lang.Integer(ppcDeletion);
	table.addRow(rowData);

	idx = 0;
	// distortions
	rowData[idx++] = "# Distortions";
	rowData[idx++] = new java.lang.Integer(totals.onset.distortion.count);
	rowData[idx++] = new java.lang.Integer(totals.nucleus.distortion.count);
	rowData[idx++] = new java.lang.Integer(totals.coda.distortion.count);
	var pccDistortion = totals.onset.distortion.count+totals.coda.distortion.count;
	rowData[idx++] = new java.lang.Integer(pccDistortion);
	var ppcDistortion = totals.onset.distortion.count+totals.nucleus.distortion.count+totals.coda.distortion.count;
	rowData[idx++] = new java.lang.Integer(ppcDistortion);
	table.addRow(rowData);

	idx = 0;
	// epenthesis
	rowData[idx++] = "# Epenthesis";
	rowData[idx++] = new java.lang.Integer(totals.onset.epenthesis.count);
	rowData[idx++] = new java.lang.Integer(totals.nucleus.epenthesis.count);
	rowData[idx++] = new java.lang.Integer(totals.coda.epenthesis.count);
	var pccEpenthesis = totals.onset.epenthesis.count+totals.coda.epenthesis.count;
	rowData[idx++] = new java.lang.Integer(pccEpenthesis);
	var ppcEpenthesis = totals.onset.epenthesis.count+totals.nucleus.epenthesis.count+totals.coda.epenthesis.count;
	rowData[idx++] = new java.lang.Integer(ppcEpenthesis);
	table.addRow(rowData);

	idx = 0;
	// % correct
	rowData[idx++] = "% Correct";
	var pc = (totals.onset.target.count + totals.onset.epenthesis.count > 0
		? (totals.onset.correct.count / (totals.onset.correct.count+totals.onset.substitution.count+totals.onset.deletion.count+totals.onset.distortion.count+totals.onset.epenthesis.count)) * 100.0
		: 0.0);
	rowData[idx++] = new java.lang.Float(pc);

	pc = (totals.nucleus.target.count + totals.nucleus.epenthesis.count > 0
		? (totals.nucleus.correct.count / (totals.nucleus.correct.count+totals.nucleus.substitution.count+totals.nucleus.deletion.count+totals.nucleus.distortion.count+totals.nucleus.epenthesis.count)) * 100.0
		: 0.0);
	rowData[idx++] = new java.lang.Float(pc);

	pc = (totals.coda.target.count + totals.coda.epenthesis.count > 0
		? (totals.coda.correct.count / (totals.coda.correct.count+totals.coda.substitution.count+totals.coda.deletion.count+totals.coda.distortion.count+totals.coda.epenthesis.count)) * 100.0
		: 0.0);
	rowData[idx++] = new java.lang.Float(pc);

	pc = (pccTarget + pccEpenthesis > 0
		? (pccCorrect / (pccCorrect+pccSubstitution+pccDeletion+pccDistortion+pccEpenthesis)) * 100.0
		: 0.0);
	rowData[idx++] = new java.lang.Float(pc);

	pc = (ppcTarget + ppcEpenthesis > 0
		? (ppcCorrect / (ppcCorrect+ppcSubstitution+ppcDeletion+ppcDistortion+ppcEpenthesis)) * 100.0
		: 0.0);
	rowData[idx++] = new java.lang.Float(pc);

	table.addRow(rowData);

	context.put("table", table);
}
]]></oga:property>
                                </oga:settings>
                                <oga:meta x="179" y="196"/>
                            </extensions>
                        </node>
                        <node id="146e30f76f4b4ecf" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                            <input name="data" optional="false">Data to print</input>
                            <extensions>
                                <oga:settings>
                                    <oga:property key="dataTemplate"><![CDATA[$DATA]]></oga:property>
                                    <oga:property key="showText"><![CDATA[false]]></oga:property>
                                    <oga:property key="showTable"><![CDATA[true]]></oga:property>
                                    <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                </oga:settings>
                                <oga:meta x="438" y="196">
                                    <oga:default for="buffer" type="java.lang.String">Segmental Totals_All</oga:default>
                                </oga:meta>
                            </extensions>
                        </node>
                        <node id="6e74c7b2" type="class:ca.phon.app.opgraph.nodes.report.TableSectionNode">
                            <extensions>
                                <oga:settings>
                                    <oga:property key="ca.phon.app.opgraph.nodes.report.TableSectionNode.columns"/>
                                    <oga:property key="ca.phon.app.opgraph.nodes.report.TableSectionNode.includeColumns"><![CDATA[true]]></oga:property>
                                </oga:settings>
                                <oga:meta x="289" y="15">
                                    <oga:default for="sectionName" type="java.lang.String">Segmental Level Breakdown (All Participants)</oga:default>
                                    <oga:default for="addToBeginning" type="java.lang.Boolean">true</oga:default>
                                </oga:meta>
                            </extensions>
                        </node>
                        <link dest="6e74c7b2" destField="tableName" source="146e30f76f4b4ecf" sourceField="buffer"/>
                        <link dest="dda647477e741b6" destField="totals" source="5bc63bfd" sourceField="obj"/>
                        <link dest="146e30f76f4b4ecf" destField="data" source="dda647477e741b6" sourceField="table"/>
                        <link dest="6e74c7b2" destField="parent" source="737af0a8" sourceField="obj"/>
                    </graph>
                    <ogcn:published_input field="obj" name="totals" ref="5bc63bfd"/>
                    <ogcn:published_input field="obj" name="parent" ref="737af0a8"/>
                    <extensions>
                        <oga:meta x="1122" y="502"/>
                    </extensions>
                </ogcn:macro>
                <ogcn:macro id="52b172ed" name="Segmental Inventory" type="ca.gedge.opgraph.nodes.general.MacroNode">
                    <graph id="6b056c95">
                        <node id="7f98a763" name="data" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                            <extensions>
                                <oga:settings>
                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                </oga:settings>
                                <oga:meta x="15" y="15"/>
                            </extensions>
                        </node>
                        <node id="46c29ab1" name="parent" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                            <extensions>
                                <oga:settings>
                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.app.opgraph.report.tree.ReportTreeNode]]></oga:property>
                                </oga:settings>
                                <oga:meta x="15" y="176"/>
                            </extensions>
                        </node>
                        <node id="7dcbda49" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                            <input name="data" optional="false">Data to print</input>
                            <extensions>
                                <oga:settings>
                                    <oga:property key="dataTemplate"><![CDATA[$DATA]]></oga:property>
                                    <oga:property key="showText"><![CDATA[false]]></oga:property>
                                    <oga:property key="showTable"><![CDATA[true]]></oga:property>
                                    <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                </oga:settings>
                                <oga:meta x="242" y="15">
                                    <oga:default for="buffer" type="java.lang.String">Segmental Inventory_All</oga:default>
                                </oga:meta>
                            </extensions>
                        </node>
                        <node id="355bafef" type="class:ca.phon.app.opgraph.nodes.report.TableSectionNode">
                            <extensions>
                                <oga:settings>
                                    <oga:property key="ca.phon.app.opgraph.nodes.report.TableSectionNode.columns"/>
                                    <oga:property key="ca.phon.app.opgraph.nodes.report.TableSectionNode.includeColumns"><![CDATA[true]]></oga:property>
                                </oga:settings>
                                <oga:meta x="487" y="15">
                                    <oga:default for="sectionName" type="java.lang.String">Segmental Level Inventory (All Participants)</oga:default>
                                    <oga:default for="addToBeginning" type="java.lang.Boolean">true</oga:default>
                                </oga:meta>
                            </extensions>
                        </node>
                        <link dest="7dcbda49" destField="data" source="7f98a763" sourceField="obj"/>
                        <link dest="355bafef" destField="tableName" source="7dcbda49" sourceField="buffer"/>
                        <link dest="355bafef" destField="parent" source="46c29ab1" sourceField="obj"/>
                    </graph>
                    <ogcn:published_input field="obj" name="data" ref="7f98a763"/>
                    <ogcn:published_input field="obj" name="parent" ref="46c29ab1"/>
                    <extensions>
                        <oga:meta x="1122" y="623"/>
                    </extensions>
                </ogcn:macro>
                <ogcn:macro id="d42675dc50334369" name="Prosodic Totals" type="ca.gedge.opgraph.nodes.general.MacroNode">
                    <graph id="4e55eed1">
                        <node id="6a2d7e06529d4c5e" name="parent" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                            <extensions>
                                <oga:settings>
                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.app.opgraph.report.tree.ReportTreeNode]]></oga:property>
                                </oga:settings>
                                <oga:meta x="15" y="15"/>
                            </extensions>
                        </node>
                        <node id="2499ec3b53a24e7a" name="totals" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                            <extensions>
                                <oga:settings>
                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.lang.Object]]></oga:property>
                                </oga:settings>
                                <oga:meta x="15" y="196"/>
                            </extensions>
                        </node>
                        <node id="a49d271e05a547c0" name="Setup Prosodic Totals Table" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                            <input name="totals" optional="false"/>
                            <output name="table" type="ca.phon.query.report.datasource.DefaultTableDataSource"/>
                            <extensions>
                                <oga:settings>
                                    <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	inputs.add("totals", "", false, false);

	outputs.add("table", "", false, Packages.ca.phon.query.report.datasource.DefaultTableDataSource);
}

function run(context) {
	var counts = context.get("totals");
	var table = new Packages.ca.phon.query.report.datasource.DefaultTableDataSource();

	var col = 0;
	var rowData = [];

	table.setColumnTitle(col++, "Dimension");
	table.setColumnTitle(col++, "Un'Str Initial");
	table.setColumnTitle(col++, "Un'Str Medial");
	table.setColumnTitle(col++, "Un'Str Final");
	table.setColumnTitle(col++, "Un'Str Total");
	table.setColumnTitle(col++, "Str Initial");
	table.setColumnTitle(col++, "Str Medial");
	table.setColumnTitle(col++, "Str Final");
	table.setColumnTitle(col++, "Str Total");
	table.setColumnTitle(col++, "Total");
	table.setColumnTitle(col++, "%");

	java.lang.System.out.println(counts.syllCount + "");

	addRow(table, "Stress correct", counts.stressCorrect, counts.syllCount);
	addRow(table, "Stress incorrect", counts.stressIncorrect, counts.syllCount);
	addRow(table, "Full syllable addition", counts.fullSyllableAddition, counts.syllCount);
	addRow(table, "Full syllable deletion", counts.fullSyllableDeletion, counts.syllCount);
	addRow(table, "Syllable expansion (O)", counts.syllableExpansion.onset, counts.syllCount);
	addRow(table, "Syllable expansion (C)", counts.syllableExpansion.coda, counts.syllCount);
//	addRow(table, "Syllable expansion (O&C)", counts.syllableExpansion.onsetAndCoda, counts.syllCount);
	addRow(table, "Syllable reduction (O)", counts.syllableReduction.onset, counts.syllCount);
	addRow(table, "Syllable reduction (C)", counts.syllableReduction.coda, counts.syllCount);
//	addRow(table, "Syllable reduction (O&C)", counts.syllableReduction.onsetAndCoda, counts.syllCount);
	addRow(table, "CGV shape correct", counts.cgvCorrect, counts.syllCount);
	addRow(table, "CGV shape incorrect", counts.cgvIncorrect, counts.syllCount);

	context.put("table", table);
}

function addRow(table, title, count, syllCount) {
	var col = 0;
	var rowData = [];

	rowData[col++] = title;
	rowData[col++] = new java.lang.Integer(count.unstressed.initial);
	rowData[col++] = new java.lang.Integer(count.unstressed.medial);
	rowData[col++] = new java.lang.Integer(count.unstressed["final"]);
	rowData[col++] = new java.lang.Integer( rowData[1].intValue() + rowData[2].intValue() + rowData[3].intValue() );

	rowData[col++] = new java.lang.Integer(count.stressed.initial);
	rowData[col++] = new java.lang.Integer(count.stressed.medial);
	rowData[col++] = new java.lang.Integer(count.stressed["final"]);
	rowData[col++] = new java.lang.Integer( rowData[5].intValue() + rowData[6].intValue() + rowData[7].intValue() );

	rowData[col++] = new java.lang.Integer( rowData[4].intValue() + rowData[8].intValue() );
	rowData[col++] = new java.lang.Float( (rowData[9].intValue() / syllCount ) * 100.0 );

	table.addRow(rowData);
}
]]></oga:property>
                                </oga:settings>
                                <oga:meta x="180" y="193"/>
                            </extensions>
                        </node>
                        <node id="84ad290aa117495f" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                            <input name="data" optional="false">Data to print</input>
                            <extensions>
                                <oga:settings>
                                    <oga:property key="dataTemplate"><![CDATA[$DATA]]></oga:property>
                                    <oga:property key="showText"><![CDATA[false]]></oga:property>
                                    <oga:property key="showTable"><![CDATA[true]]></oga:property>
                                    <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                </oga:settings>
                                <oga:meta x="438" y="196">
                                    <oga:default for="buffer" type="java.lang.String">Prosodic Totals_All</oga:default>
                                </oga:meta>
                            </extensions>
                        </node>
                        <node id="8060b0251cbb4a00" type="class:ca.phon.app.opgraph.nodes.report.TableSectionNode">
                            <extensions>
                                <oga:settings>
                                    <oga:property key="ca.phon.app.opgraph.nodes.report.TableSectionNode.columns"/>
                                    <oga:property key="ca.phon.app.opgraph.nodes.report.TableSectionNode.includeColumns"><![CDATA[true]]></oga:property>
                                </oga:settings>
                                <oga:meta x="289" y="15">
                                    <oga:default for="sectionName" type="java.lang.String">Prosodic Level Breakdown (All Participants)</oga:default>
                                    <oga:default for="addToBeginning" type="java.lang.Boolean">true</oga:default>
                                </oga:meta>
                            </extensions>
                        </node>
                        <link dest="8060b0251cbb4a00" destField="tableName" source="84ad290aa117495f" sourceField="buffer"/>
                        <link dest="8060b0251cbb4a00" destField="parent" source="6a2d7e06529d4c5e" sourceField="obj"/>
                        <link dest="a49d271e05a547c0" destField="totals" source="2499ec3b53a24e7a" sourceField="obj"/>
                        <link dest="84ad290aa117495f" destField="data" source="a49d271e05a547c0" sourceField="table"/>
                        <extensions>
                            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                        </extensions>
                    </graph>
                    <ogcn:published_input field="obj" name="totals" ref="2499ec3b53a24e7a"/>
                    <ogcn:published_input field="obj" name="parent" ref="6a2d7e06529d4c5e"/>
                    <extensions>
                        <oga:meta x="1126" y="829"/>
                    </extensions>
                </ogcn:macro>
                <ogcn:macro id="7702061f78f64893" name="Prosodic CGV Inventory" type="ca.gedge.opgraph.nodes.general.MacroNode">
                    <graph id="7dfafab7">
                        <node id="b0691ed35b184032" name="data" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                            <extensions>
                                <oga:settings>
                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                </oga:settings>
                                <oga:meta x="15" y="15"/>
                            </extensions>
                        </node>
                        <node id="872623fe6a774e2d" name="parent" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                            <extensions>
                                <oga:settings>
                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.app.opgraph.report.tree.ReportTreeNode]]></oga:property>
                                </oga:settings>
                                <oga:meta x="15" y="176"/>
                            </extensions>
                        </node>
                        <node id="b2d89dabb4cc4bd9" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                            <input name="data" optional="false">Data to print</input>
                            <extensions>
                                <oga:settings>
                                    <oga:property key="dataTemplate"><![CDATA[$DATA]]></oga:property>
                                    <oga:property key="showText"><![CDATA[false]]></oga:property>
                                    <oga:property key="showTable"><![CDATA[true]]></oga:property>
                                    <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                </oga:settings>
                                <oga:meta x="241" y="15">
                                    <oga:default for="buffer" type="java.lang.String">Prosodic CGV Inventory_All</oga:default>
                                </oga:meta>
                            </extensions>
                        </node>
                        <node id="1c62ce46e7ce499f" type="class:ca.phon.app.opgraph.nodes.report.TableSectionNode">
                            <extensions>
                                <oga:settings>
                                    <oga:property key="ca.phon.app.opgraph.nodes.report.TableSectionNode.columns"/>
                                    <oga:property key="ca.phon.app.opgraph.nodes.report.TableSectionNode.includeColumns"><![CDATA[true]]></oga:property>
                                </oga:settings>
                                <oga:meta x="487" y="15">
                                    <oga:default for="sectionName" type="java.lang.String">Prosodic Level CGV Inventory (All Participants)</oga:default>
                                    <oga:default for="addToBeginning" type="java.lang.Boolean">true</oga:default>
                                </oga:meta>
                            </extensions>
                        </node>
                        <link dest="b2d89dabb4cc4bd9" destField="data" source="b0691ed35b184032" sourceField="obj"/>
                        <link dest="1c62ce46e7ce499f" destField="tableName" source="b2d89dabb4cc4bd9" sourceField="buffer"/>
                        <link dest="1c62ce46e7ce499f" destField="parent" source="872623fe6a774e2d" sourceField="obj"/>
                    </graph>
                    <ogcn:published_input field="obj" name="data" ref="b0691ed35b184032"/>
                    <ogcn:published_input field="obj" name="parent" ref="872623fe6a774e2d"/>
                    <extensions>
                        <oga:meta x="1126" y="950"/>
                    </extensions>
                </ogcn:macro>
                <ogcn:macro id="6eeb2689d62148e1" name="Prosodic Stress Inventory" type="ca.gedge.opgraph.nodes.general.MacroNode">
                    <graph id="775c593d">
                        <node id="3830ad66d23b4e68" name="data" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                            <extensions>
                                <oga:settings>
                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                </oga:settings>
                                <oga:meta x="15" y="15"/>
                            </extensions>
                        </node>
                        <node id="a558bde2e84b4044" name="parent" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                            <extensions>
                                <oga:settings>
                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.app.opgraph.report.tree.ReportTreeNode]]></oga:property>
                                </oga:settings>
                                <oga:meta x="15" y="176"/>
                            </extensions>
                        </node>
                        <node id="10431ac94fa147f6" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                            <input name="data" optional="false">Data to print</input>
                            <extensions>
                                <oga:settings>
                                    <oga:property key="dataTemplate"><![CDATA[$DATA]]></oga:property>
                                    <oga:property key="showText"><![CDATA[false]]></oga:property>
                                    <oga:property key="showTable"><![CDATA[true]]></oga:property>
                                    <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                </oga:settings>
                                <oga:meta x="242" y="15">
                                    <oga:default for="buffer" type="java.lang.String">Prosodic Stress Inventory_All</oga:default>
                                </oga:meta>
                            </extensions>
                        </node>
                        <node id="f1caa9578eeb4802" type="class:ca.phon.app.opgraph.nodes.report.TableSectionNode">
                            <extensions>
                                <oga:settings>
                                    <oga:property key="ca.phon.app.opgraph.nodes.report.TableSectionNode.columns"/>
                                    <oga:property key="ca.phon.app.opgraph.nodes.report.TableSectionNode.includeColumns"><![CDATA[true]]></oga:property>
                                </oga:settings>
                                <oga:meta x="487" y="15">
                                    <oga:default for="sectionName" type="java.lang.String">Prosodic Level Stress Inventory (All Participants)</oga:default>
                                    <oga:default for="addToBeginning" type="java.lang.Boolean">true</oga:default>
                                </oga:meta>
                            </extensions>
                        </node>
                        <link dest="10431ac94fa147f6" destField="data" source="3830ad66d23b4e68" sourceField="obj"/>
                        <link dest="f1caa9578eeb4802" destField="tableName" source="10431ac94fa147f6" sourceField="buffer"/>
                        <link dest="f1caa9578eeb4802" destField="parent" source="a558bde2e84b4044" sourceField="obj"/>
                        <extensions>
                            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                        </extensions>
                    </graph>
                    <ogcn:published_input field="obj" name="data" ref="3830ad66d23b4e68"/>
                    <ogcn:published_input field="obj" name="parent" ref="a558bde2e84b4044"/>
                    <extensions>
                        <oga:meta x="1126" y="1071"/>
                    </extensions>
                </ogcn:macro>
                <ogcn:macro id="7bc6b64" name="Word Totals" type="ca.gedge.opgraph.nodes.general.MacroNode">
                    <graph id="6f8d4869">
                        <node id="8df3d41" name="parent" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                            <extensions>
                                <oga:settings>
                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.app.opgraph.report.tree.ReportTreeNode]]></oga:property>
                                </oga:settings>
                                <oga:meta x="15" y="15"/>
                            </extensions>
                        </node>
                        <node id="67c63cfb" name="totals" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                            <extensions>
                                <oga:settings>
                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.lang.Object]]></oga:property>
                                </oga:settings>
                                <oga:meta x="15" y="196"/>
                            </extensions>
                        </node>
                        <node id="180a59be937d45af" name="Setup Word Totals Table" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                            <input name="totals" optional="false"/>
                            <output name="table" type="ca.phon.query.report.datasource.DefaultTableDataSource"/>
                            <extensions>
                                <oga:settings>
                                    <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	inputs.add("totals", "", false, false);

	outputs.add("table", "", false, Packages.ca.phon.query.report.datasource.DefaultTableDataSource);
}

function run(context) {
	var counts = context.get("totals");
	var table = new Packages.ca.phon.query.report.datasource.DefaultTableDataSource();

	var col = 0;
	table.setColumnTitle(col++, "Category");
	table.setColumnTitle(col++, "Correct");
	table.setColumnTitle(col++, "Incorrect");
	table.setColumnTitle(col++, "% Correct");

	var total = counts.total;

	addRowS(table, "Word", total, counts.correct);
	addRowS(table, "# Syllables", total, counts.syllablesCorrect || 0);
	addRowS(table, "Stress", total, counts.stressCorrect || 0);
	addRowS(table, "CGV Shape", total, counts.cgvShapeCorrect || 0);
	addRow(table, "# Transitions", total, counts.transitionsCorrect || 0, counts.transitionsIncorrect || 0);

	context.put("table", table);
}

function addRowS(table, category, total, correct) {
	addRow(table, category, total, correct, total - correct);
}

function addRow(table, category, total, correct, incorrect) {
	var col = 0;
	var rowData = [];

	var pc = (correct / (correct + incorrect)) * 100.0;

	rowData[col++] = category;
	rowData[col++] = new java.lang.Integer(correct);
	rowData[col++] = new java.lang.Integer(incorrect);
	rowData[col++] = new java.lang.Float(pc);

	table.addRow(rowData);
}
]]></oga:property>
                                </oga:settings>
                                <oga:meta x="349" y="99"/>
                            </extensions>
                        </node>
                        <node id="7fa1ecf71aa647b6" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                            <input name="data" optional="false">Data to print</input>
                            <extensions>
                                <oga:settings>
                                    <oga:property key="dataTemplate"><![CDATA[$DATA]]></oga:property>
                                    <oga:property key="showText"><![CDATA[false]]></oga:property>
                                    <oga:property key="showTable"><![CDATA[true]]></oga:property>
                                    <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                </oga:settings>
                                <oga:meta x="614" y="69">
                                    <oga:default for="buffer" type="java.lang.String">Word Level Accuracy_All</oga:default>
                                </oga:meta>
                            </extensions>
                        </node>
                        <node id="86fdde888cfe47c4" type="class:ca.phon.app.opgraph.nodes.report.TableSectionNode">
                            <extensions>
                                <oga:settings>
                                    <oga:property key="ca.phon.app.opgraph.nodes.report.TableSectionNode.columns"/>
                                    <oga:property key="ca.phon.app.opgraph.nodes.report.TableSectionNode.includeColumns"><![CDATA[true]]></oga:property>
                                </oga:settings>
                                <oga:meta x="665" y="271">
                                    <oga:default for="sectionName" type="java.lang.String">Word Level Accuracy (All Participants)</oga:default>
                                    <oga:default for="addToBeginning" type="java.lang.Boolean">true</oga:default>
                                </oga:meta>
                            </extensions>
                        </node>
                        <link dest="180a59be937d45af" destField="totals" source="67c63cfb" sourceField="obj"/>
                        <link dest="7fa1ecf71aa647b6" destField="data" source="180a59be937d45af" sourceField="table"/>
                        <link dest="86fdde888cfe47c4" destField="parent" source="8df3d41" sourceField="obj"/>
                        <link dest="86fdde888cfe47c4" destField="tableName" source="7fa1ecf71aa647b6" sourceField="buffer"/>
                        <extensions>
                            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                        </extensions>
                    </graph>
                    <ogcn:published_input field="obj" name="totals" ref="67c63cfb"/>
                    <ogcn:published_input field="obj" name="parent" ref="8df3d41"/>
                    <extensions>
                        <oga:meta x="1128" y="1256"/>
                    </extensions>
                </ogcn:macro>
                <ogcn:macro id="85bbb8270e974342" name="Word Stress Inventory" type="ca.gedge.opgraph.nodes.general.MacroNode">
                    <graph id="1e86ad11">
                        <node id="589dda8180b54eca" name="data" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                            <extensions>
                                <oga:settings>
                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                </oga:settings>
                                <oga:meta x="15" y="15"/>
                            </extensions>
                        </node>
                        <node id="930faf09b5934fbe" name="parent" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                            <extensions>
                                <oga:settings>
                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.app.opgraph.report.tree.ReportTreeNode]]></oga:property>
                                </oga:settings>
                                <oga:meta x="15" y="176"/>
                            </extensions>
                        </node>
                        <node id="7e59eff17ba14b0b" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                            <input name="data" optional="false">Data to print</input>
                            <extensions>
                                <oga:settings>
                                    <oga:property key="dataTemplate"><![CDATA[$DATA]]></oga:property>
                                    <oga:property key="showText"><![CDATA[false]]></oga:property>
                                    <oga:property key="showTable"><![CDATA[true]]></oga:property>
                                    <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                </oga:settings>
                                <oga:meta x="242" y="15">
                                    <oga:default for="buffer" type="java.lang.String">Word Stress Inventory_All</oga:default>
                                </oga:meta>
                            </extensions>
                        </node>
                        <node id="c7a5e40e9eeb4d5b" type="class:ca.phon.app.opgraph.nodes.report.TableSectionNode">
                            <extensions>
                                <oga:settings>
                                    <oga:property key="ca.phon.app.opgraph.nodes.report.TableSectionNode.columns"/>
                                    <oga:property key="ca.phon.app.opgraph.nodes.report.TableSectionNode.includeColumns"><![CDATA[true]]></oga:property>
                                </oga:settings>
                                <oga:meta x="487" y="15">
                                    <oga:default for="sectionName" type="java.lang.String">Word Level Stress Inventory (All Participants)</oga:default>
                                    <oga:default for="addToBeginning" type="java.lang.Boolean">true</oga:default>
                                </oga:meta>
                            </extensions>
                        </node>
                        <link dest="7e59eff17ba14b0b" destField="data" source="589dda8180b54eca" sourceField="obj"/>
                        <link dest="c7a5e40e9eeb4d5b" destField="tableName" source="7e59eff17ba14b0b" sourceField="buffer"/>
                        <link dest="c7a5e40e9eeb4d5b" destField="parent" source="930faf09b5934fbe" sourceField="obj"/>
                        <extensions>
                            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                        </extensions>
                    </graph>
                    <ogcn:published_input field="obj" name="data" ref="589dda8180b54eca"/>
                    <ogcn:published_input field="obj" name="parent" ref="930faf09b5934fbe"/>
                    <extensions>
                        <oga:meta x="1128" y="1377"/>
                    </extensions>
                </ogcn:macro>
                <link dest="e7eb0f6277c94cc7" destField="results" source="a23f99c423d64c49" sourceField="obj"/>
                <link dest="4bb42cb62a99463c" destField="tableMap" source="a067a50295fe48ce" sourceField="tableMap"/>
                <link dest="e7eb0f6277c94cc7" destField="project" source="2564dd40d5ce4021" sourceField="obj"/>
                <link dest="4bb42cb62a99463c" destField="selectedSessions" source="a12ca1eed6584c87" sourceField="obj"/>
                <link dest="4bb42cb62a99463c" destField="collection" source="9a6b0aacb31f456e" sourceField="obj"/>
                <link dest="a067a50295fe48ce" destField="table" source="e7eb0f6277c94cc7" sourceField="table"/>
                <link dest="4bb42cb62a99463c" destField="segmental totals" source="76dc324150b34376" sourceField="totals"/>
                <link dest="4bb42cb62a99463c" destField="report node" source="2fef4098" sourceField="obj"/>
                <link dest="4bb42cb62a99463c" destField="segmental inventory" source="962abedafab34827" sourceField="inventory"/>
                <link dest="6d9a4866" destField="totals" source="4bb42cb62a99463c" sourceField="segmental totals"/>
                <link dest="6d9a4866" destField="parent" source="2fef4098" sourceField="obj"/>
                <link dest="52b172ed" destField="data" source="4bb42cb62a99463c" sourceField="segmental inventory"/>
                <link dest="52b172ed" destField="parent" source="2fef4098" sourceField="obj"/>
                <link dest="4bb42cb62a99463c" destField="prosodic cgv inventory" source="d3f36ac6e1334f27" sourceField="inventory"/>
                <link dest="4bb42cb62a99463c" destField="prosodic stress inventory" source="6004c22ee553432c" sourceField="inventory"/>
                <link dest="6eeb2689d62148e1" destField="data" source="4bb42cb62a99463c" sourceField="prosodic stress inventory"/>
                <link dest="7702061f78f64893" destField="data" source="4bb42cb62a99463c" sourceField="prosodic cgv inventory"/>
                <link dest="7702061f78f64893" destField="parent" source="2fef4098" sourceField="obj"/>
                <link dest="6eeb2689d62148e1" destField="parent" source="2fef4098" sourceField="obj"/>
                <link dest="4bb42cb62a99463c" destField="prosodic totals" source="10b0643dd8714757" sourceField="totals"/>
                <link dest="d42675dc50334369" destField="totals" source="4bb42cb62a99463c" sourceField="prosodic totals"/>
                <link dest="d42675dc50334369" destField="parent" source="2fef4098" sourceField="obj"/>
                <link dest="4bb42cb62a99463c" destField="word totals" source="781d5398835c4743" sourceField="totals"/>
                <link dest="7bc6b64" destField="parent" source="2fef4098" sourceField="obj"/>
                <link dest="7bc6b64" destField="totals" source="4bb42cb62a99463c" sourceField="word totals"/>
                <link dest="4bb42cb62a99463c" destField="word stress inventory" source="6a420b3ea1a74806" sourceField="inventory"/>
                <link dest="85bbb8270e974342" destField="data" source="4bb42cb62a99463c" sourceField="word stress inventory"/>
                <link dest="85bbb8270e974342" destField="parent" source="2fef4098" sourceField="obj"/>
                <extensions>
                    <oga:notes>
                        <oga:note color="0xffff96" height="979" title="Published Inputs" width="356" x="9" y="7"/>
                        <oga:note color="0x96ff96" height="306" title="Segmental Level Information" width="663" x="688" y="467"/>
                        <oga:note color="0x9696ff" height="425" title="Prosodic Level Information" width="664" x="688" y="779"/>
                        <oga:note color="0xffc864" height="294" title="Word Level" width="662" x="688" y="1208"/>
                    </oga:notes>
                    <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                </extensions>
            </graph>
            <ogcn:published_input field="obj" name="project" ref="2564dd40d5ce4021"/>
            <ogcn:published_input field="obj" name="results" ref="a23f99c423d64c49"/>
            <ogcn:published_input field="obj" name="selected sessions" ref="a12ca1eed6584c87"/>
            <ogcn:published_input field="obj" name="selected participants" ref="9a6b0aacb31f456e"/>
            <ogcn:published_input field="obj" name="report node" ref="2fef4098"/>
            <ogcn:published_output field="obj" name="report node" ref="2fef4098"/>
            <extensions>
                <oga:meta x="736" y="112"/>
            </extensions>
        </ogcn:macro>
        <node id="362eabf4943b48eb" type="class:ca.phon.app.opgraph.nodes.report.TextSectionNode">
            <extensions>
                <oga:settings>
                    <oga:property key="ca.phon.app.opgraph.nodes.report.TextSectionNode.text"><![CDATA[The WAP (Masso, 2016) was developed in 2016 and originally published as a supplementary appendix to Masso, McLeod, Baker, McCormack (2016).
The published, manual version of the WAP included seven error categories: (1) Substitution of consonants or vowels, (2) Deletion of syllables,
consonants or vowels, (3) Distortion of consonants or vowels, (4) Addition of consonants or vowels, (5) Alteration of phonotactics, (6) Alteration of
timing and (7) Assimilation and/or alteration of sequence. Categories 1, 2, 3 and 4 were based on the SODA analysis (substitution, omission, distortion,
addition) by van Riper (1939) and categories 1, 2, 5, 6 and 7 were informed by James’ (2006) work on polysyllable acquisition. Through the development
of the WAP within Phon, the categories have been re-defined and embedded into the WAP analysis available in Phon.

Citations:

 * Masso, S. (2016). Word-Level Analysis of Polysyllables. Sydney, Australia: Author.

 * Masso, S., McLeod, S., Baker, E., & McCormack, J. (2016). Polysyllable productions in preschool children with speech sound disorders: Error categories and the Framework of Polysyllable Maturity. International Journal of Speech-Language Pathology, 18(3), 272-287. doi:10.3109/17549507.2016.1168483
]]></oga:property>
                </oga:settings>
                <oga:meta x="780" y="348">
                    <oga:default for="sectionName" type="java.lang.String">Information</oga:default>
                    <oga:default for="addToBeginning" type="java.lang.Boolean">true</oga:default>
                </oga:meta>
            </extensions>
        </node>
        <ogcn:macro id="4b787603" name="Print Report Template" type="ca.gedge.opgraph.nodes.general.MacroNode">
            <graph id="6abed8d7">
                <node id="7a896d35" name="obj1" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                    <extensions>
                        <oga:settings>
                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.app.opgraph.report.tree.ReportTreeNode]]></oga:property>
                        </oga:settings>
                        <oga:meta x="15" y="136"/>
                    </extensions>
                </node>
                <node id="3a2ba772" name="obj" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                    <extensions>
                        <oga:settings>
                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.app.opgraph.report.tree.ReportTree]]></oga:property>
                        </oga:settings>
                        <oga:meta x="41" y="419"/>
                    </extensions>
                </node>
                <node id="78bb5280" name="ReportTreeNode" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                    <extensions>
                        <oga:settings>
                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.app.opgraph.report.tree.ReportTreeNode]]></oga:property>
                        </oga:settings>
                        <oga:meta x="289" y="136"/>
                    </extensions>
                </node>
                <node id="32803228" name="ReportTree" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                    <extensions>
                        <oga:settings>
                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.app.opgraph.report.tree.ReportTree]]></oga:property>
                        </oga:settings>
                        <oga:meta x="281" y="419"/>
                    </extensions>
                </node>
                <node id="5e185383" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                    <input name="data" optional="false">Data to print</input>
                    <extensions>
                        <oga:settings>
                            <oga:property key="dataTemplate"><![CDATA[$DATA]]></oga:property>
                            <oga:property key="showText"><![CDATA[true]]></oga:property>
                            <oga:property key="showTable"><![CDATA[false]]></oga:property>
                            <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                        </oga:settings>
                        <oga:meta x="598" y="433">
                            <oga:default for="buffer" type="java.lang.String">Report Template</oga:default>
                            <oga:default for="append" type="java.lang.Boolean">true</oga:default>
                        </oga:meta>
                    </extensions>
                </node>
                <link dest="32803228" destField="obj" source="3a2ba772" sourceField="obj"/>
                <link dest="78bb5280" destField="obj" source="7a896d35" sourceField="obj"/>
                <link dest="5e185383" destField="data" source="32803228" sourceField="reportTemplate"/>
                <extensions>
                    <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                </extensions>
            </graph>
            <ogcn:published_input field="obj" name="obj" ref="3a2ba772"/>
            <ogcn:published_input field="obj" name="obj1" ref="7a896d35"/>
            <extensions>
                <oga:meta x="776" y="529"/>
            </extensions>
        </ogcn:macro>
        <link dest="b7c53c9330914507" destField="parameters" source="43d39e9b67384156" sourceField="parameters"/>
        <link dest="7ca6b2ef" destField="project" source="35a0fbb5" sourceField="obj"/>
        <link dest="7ca6b2ef" destField="sessions" source="6420582b" sourceField="obj"/>
        <link dest="7e7f6d0b48264831" destField="project" source="7ca6b2ef" sourceField="project"/>
        <link dest="7e7f6d0b48264831" destField="results" source="7ca6b2ef" sourceField="results"/>
        <link dest="7e7f6d0b48264831" destField="selected sessions" source="6420582b" sourceField="obj"/>
        <link dest="7e7f6d0b48264831" destField="selected participants" source="338df44a" sourceField="obj"/>
        <link dest="40612d0c" destField="sectionName" source="b7c53c9330914507" sourceField="reportTitle"/>
        <link dest="40612d0c" destField="parent" source="40e266e4" sourceField="root"/>
        <link dest="4b787603" destField="obj1" source="7e7f6d0b48264831" sourceField="report node"/>
        <link dest="4b787603" destField="obj" source="40e266e4" sourceField="reportTree"/>
        <link dest="7e7f6d0b48264831" destField="report node" source="40612d0c" sourceField="section"/>
        <link dest="362eabf4943b48eb" destField="parent" source="7e7f6d0b48264831" sourceField="report node"/>
        <extensions>
            <opqry:nodewizard type="ca.phon.app.opgraph.analysis.AnalysisWizardExtension">
                <opqry:info format="markdown" title="Word-Level Analysis of Polysyllables">
                    <opqry:message><![CDATA[# Analysis: Word-level Analysis of Polysyllables (WAP)

This document outlines the Word-level Analysis of Polysyllables (WAP) report
in Phon.

## Information

The WAP (Masso, 2016) was developed in 2016 and originally published as a supplementary appendix to Masso, McLeod, Baker, McCormack (2016). The published, manual version of the WAP included seven error categories: (1) Substitution of consonants or vowels, (2) Deletion of syllables, consonants or vowels, (3) Distortion of consonants or vowels, (4) Addition of consonants or vowels, (5) Alteration of phonotactics, (6) Alteration of timing and (7) Assimilation and/or alteration of sequence. Categories 1, 2, 3 and 4 were based on the SODA analysis (substitution, omission, distortion, addition) by van Riper (1939) and categories 1, 2, 5, 6 and 7 were informed by James’ (2006) work on polysyllable acquisition. Through the development of the WAP within Phon, the categories have been re-defined and embedded into the WAP analysis available in Phon.

### Citations:

 * Masso, S. (2016). Word-Level Analysis of Polysyllables. Sydney, Australia: Author.
 * Masso, S., McLeod, S., Baker, E., & McCormack, J. (2016). Polysyllable productions in preschool children with speech sound disorders: Error categories and the Framework of Polysyllable Maturity. International Journal of Speech-Language Pathology, 18(3), 272-287. doi:10.3109/17549507.2016.1168483

## Outline

The report will be composed of the following tables types:

 * Word Level Stress Inventory
 * Word Level Accuracy
 * Prosodic Level CGV Inventory
 * Prosodic Level Stress Inventory
 * Prosodic Level Breakdown
 * Segmental Level Inventory
 * Segmental Level Breakdown
 * WAP Tables (Word/Prosodic/Segmental Level breakdown for each word in sample)

An example tables of contents is displayed below. Bold level elements are
section headers, italic items are one of the tables listed above.  Other
headings are standard Phon report elements or text blocks.

 - **Word-level Analysis of Polysyllables**
  - Information
  - *Word Level Stress Inventory* (All Participants)
  - *Word Level Accuracy* (All Participants)
  - *Prosodic Level CGV Inventory* (All Participants)
  - *Prosodic Level Stress Inventory* (All Participants)
  - *Prosodic Level Breakdown* (All Participants)
  - *Segmental Level Inventory* (All Participants)
  - *Segmental Level Breakdown* (All Participants)
  - **Participant**
      - *Word Level Stress Inventory* (Participant)
      - *Word Level Accuracy* (Participant)
      - *Prosodic Level CGV Inventory* (Participant)
      - *Prosodic Level Stress Inventory* (Participant)
      - *Prosodic Level Breakdown* (Participant)
      - *Segmental Level Inventory* (Participant)
      - *Segmental Level Breakdown* (Participant)
      - **Session 1**
          - *Word Level Stress Inventory* (Participant)
          - *Word Level Accuracy* (Participant)
          - *Prosodic Level CGV Inventory* (Participant)
          - *Prosodic Level Stress Inventory* (Participant)
          - *Prosodic Level Breakdown* (Participant)
          - *Segmental Level Inventory* (Participant)
          - *Segmental Level Breakdown* (Participant)
          - **Word 1 /IPA Target/ -> /IPA Actual/**
              - *Word Level*
              - *Prosodic Level*
              - *Segmental Level*
          - ...
      - ...
  - ...

## Data Preparation

Session data is queried by word and a WAP Table is produced for each Orthography, IPA Target, and IPA Actual triad. Proper syllabification and phone alignment is required for accurate results.  All participants should have unique names/identification numbers and a speaker should be assigned to all records.

## Word Level Inventory and Accuracy Tables

The *Word Level Stress Inventory* tables displays counts of the whole word stress productions (Target→Actual) in the sample.

Example:

| IPA Target | IPA Actual | Count |
| --- | --- | --- |
| 1U2 | 1U2 | 4 |
| 1U2U | 12U | 1 |
| 1U2U | 1U2U | 4 |
| 1U2U | U1U | 1 |
| 1UU | 1UU | 5 |
| 2U1 | 2U1 | 1 |
| 2U1U | 2U1U | 1 |
| 2U1UU | 2U1UU | 1 |
| U12 | 12 | 2 |
| U1U | 1U | 3 |
| U1U | U1U | 5 |
| U1UU | U1UU | 1 |
| UUU1U | UU1U | 1 |

The *Word Level Accuracy* table displays counts of whole word analyses in the five dimensions listed below. Caption for the table will be “Word Level Accuracy” followed by either “(Session)” or “(Participant)” or “(All Participants)”.

*Word Level Accuracy* dimensions and definitions:

 * **Word**  (whole word accuracy). The total number of words that were produced correctly, incorrectly, and the percentage of words produced correctly.
 * **# Syllables** (word length correct [correct number of syllables]). The total number of words that were produced with the correct number of syllables; an incorrect number of syllables; and the percentage of words with correct length.
 * **Stress** (lexical stress correct). The total number of words that were produced with the correct lexical stress (all syllables produced with the correct stress); number produced with incorrect lexical stress; and the percentage of words with the correct lexical stress.
 * **CGV Shape** (target and actual CV shape with syllable stress, boundaries, and length included). The total number of words that were produced with the correct CGV shape (regardless of the accuracy of the segments); number produced with incorrect CGV shape; and the percentage of words with correct CGV shape.
 * **# Transitions** (syllable transitions correct): The total number of syllable transitions produced in the sample (total number of syllables – 1 for each word produced); the total number of segregated syllable transitions (number of intra-word pauses in target and actual); and the percentage of correct syllable transitions (correct transitions / segregated transitions + correct transitions*100).

Example:

| Category | Correct | Incorrect | % Correct |
| --- | --- | --- | --- |
| Word | 2 | 28 | 6.67 |
| # Syllables | 22 | 8 | 73.33 |
| Stress | 22 | 8 | 73.33 |
| CGV Shape | 5 | 25 | 16.67 |
| # Transitions | 63 | 9 | 87.5 |

## Prosodic Level Inventories and Breakdown Tables

The prosodic level inventories and breakdown tables display prosodic level information from the sampled words. The *Prosodic Level Stress Inventory* and *Prosodic Level CGV Inventory* count the stress and CGV productions (Target→Actual) for each syllable in the sample. The *Prosodic Level Breakdown* table counts the accuracy and errors within stressed and unstressed syllables in 11 dimensions listed below. Captions for the tables will be "Prosodic Level Breakdown” followed by either “(Session)” or “(Participant)” or “(All Participants)”.

*Prosodic Level Breakdown* dimensions and defintions:

 * **Stress correct** The number of syllables produced with correct stress in each word position.
 * **Stress incorrect** The number of syllables produced with incorrect stress in each word position.
 * **Full syllable addition** The number of syllables that were added.
 * **Full syllable deletion**  The number of syllables that were deleted in entirety (nucleus and all onset and/or coda consonants associated with the nucleus).
 * **Partial syllable deletion (onset)** The number of syllables in which the onset was deleted but the nucleus of the syllable is realised.
 * **Partial syllable deletion (nucleus)** The number of syllables in which the nucleus vowel was deleted (but onset/coda consonants of the syllable were realised)
 * **Partial syllable deletion (coda)** The number of syllables in which the coda was deleted but the nucleus of the syllable is realised.
 * **Syllable expansion (onset)** The number of syllables in which an onset consonant was added to a syllable.
 * **Syllable expansion (coda)** The number of syllables in which a coda consonant was added to a syllable.
 * **CGV Shape correct** The number of syllables produced with correct CGV shape (regardless of accuracy).
 * **CGV Shape incorrect** The number of syllables produced with incorrect CGV shape (regardless of accuracy).

Example, *Prosodic Level Stress Inventory*

| IPA Target | IPA Actual | Count |
| --- | --- | --- |
| 1 | 1 | 29 |
| 1 | ∅ | 1 |
| 2 | 1 | 1 |
| 2 | 2 | 14 |
| U | U | 50 |
| U | ∅ | 7 |

Example, *Prosodic Level CGV Inventory*

| IPA Target | IPA Actual | Count |
| --- | --- | --- |
| CCV | CV | 2 |
| CCVV | CVV | 2 |
| CGV | CV | 4 |
| CV | CC | 1 |
| CV | CVC | 1 |
| CV | ∅ | 7 |
| CVC | CV | 4 |
| CVV | GVV | 2 |
| GV | V | 1 |
| V | V | 4 |
| VC | V | 1 |
| VC | VC | 2 |

Example, *Prosodic Level Breakdown*

| Dimension | Un'Str Initial | Un'Str Medial | Un'Str Final | Un'Str Total | Str Initial | Str Medial | Str Final | Str Total | Total | % |
| --- | --- | --- | --- | --- | --- | --- | --- | --- | --- | --- |
| Stress correct | 6 | 21 | 23 | 50 | 17 | 19 | 7 | 43 | 93 | 91.18 |
| Stress incorrect | 6 | 1 | 0 | 7 | 1 | 1 | 0 | 2 | 9 | 8.82 |
| Full syllable addition | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0.0 |
| Full syllable deletion | 6 | 1 | 0 | 7 | 1 | 0 | 0 | 1 | 8 | 7.84 |
| Syllable expansion (O) | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0 | 0.0 |
| Syllable expansion (C) | 1 | 0 | 1 | 2 | 0 | 0 | 0 | 0 | 2 | 1.96 |
| Syllable reduction (O) | 3 | 3 | 0 | 6 | 0 | 3 | 1 | 4 | 10 | 9.8 |
| Syllable reduction (C) | 0 | 0 | 1 | 1 | 4 | 1 | 1 | 6 | 7 | 6.86 |
| CGV shape correct | 3 | 15 | 17 | 35 | 13 | 13 | 1 | 27 | 62 | 60.78 |
| CGV shape incorrect | 9 | 7 | 6 | 22 | 5 | 7 | 6 | 18 | 40 | 39.22 |

## Segmental Level Inventory and Breakdown Tables

The Segmental Level Inventory and Breakdown table displays segmental level information from the sampled words. The Segmental Level Inventory counts the segmental productions (Target→Actual) in the sample. The Segmental Level Breakdown counts the accuracy and errors within onset, nucleus and coda word positions in six dimensions listed below. Percentage accuracy measures will also be displayed for consonants (onset (PCC-O), coda (PCC-C), and total consonants (PCC)), vowels (PVC) and total phones (PPC). Caption for the table will be “Segmental Level Breakdown” followed by either “(Session)” or “(Participant)” or “(All Participants)”.

*Segmental Level Breakdown* dimensions and definitions:

 * **# Target** The number of target phones in each word position (O/N/C) as well as total target consonants and total target phones (total consonants + total vowels)
 * **# Correct** The number of phones correct in each word position (O/N/C) as well as total correct consonants and total correct phones (total consonants + total vowels)
 * **# Substitutions** The number of phones substituted in each word position (O/N/C) as well as total substituted consonants and total substituted phones (total consonants + total vowels)
 * **# Distortions** The number of distorted phones in each word position (O/N/C) as well as total distorted consonants and total distorted phones (total consonants + total vowels)
 * **# Epenthesis** The number of added phones in each word position (O/N/C) as well as total added consonants and total added phones (total consonants + total vowels)
 * **# Deletions** The number of deleted phones in each word position (O/N/C) as well as total deleted consonants and total deleted phones (total consonants + total vowels)
 * **% Correct** The percentage of correct consonants (onset, coda, and total), vowels, and phones.

Example, *Segmental Level Inventory*

| IPA Target | IPA Actual | Count |
| --- | --- | --- |
| p | p | 5 |
| p | b | 1 |
| p | f | 1 |
| p | ∅ | 2 |
| b | b | 6 |
| b | ∅ | 1 |
| t | p | 1 |
| t | t | 8 |
| t | ∅ | 4 |
| d | d | 2 |
| k | s | 1 |
| ɡ | ɡ | 1 |
| f | f | 3 |
| s | ∅ | 2 |
| h | h | 2 |
| ʤ | ∅ | 1 |
| m | m | 10 |
| m | n | 2 |
| n | n | 10 |
| l | l | 3 |
| l | ∅ | 6 |
| ɹ | ɹ | 1 |
| ɹ | w | 3 |
| ɹ | ∅ | 1 |
| j | h | 1 |
| j | j | 1 |
| j | ∅ | 2 |
| i | i | 3 |
| u | u | 2 |
| ɪ | ɪ | 8 |
| ʊ | ʊ | 3 |
| ʊ | ʊː | 1 |
| ə | i | 1 |
| ə | u | 2 |
| ə | ə | 37 |
| ə | ʌ | 2 |
| ə | æ | 1 |
| ə | ∅ | 9 |
| ɛ | ə | 1 |
| ɛ | ɛ | 8 |
| ʌ | ʌ | 2 |
| ɔ | ɔ | 2 |
| æ | æ | 7 |
| æ | æː | 1 |
| æ | ∅ | 1 |
| a | a | 9 |
| ɒ | ɒ | 4 |
| ∅ | t | 1 |
| ∅ | r | 1 |
| ∅ | i | 1 |

Example, *Segmental Level Breakdown*

|  | Onset | Nucleus | Coda | Total Consonants (O+C) | Total Phones |
| --- | --- | --- | --- | --- | --- |
| # Target | 93 | 105 | 25 | 118 | 223 |
| # Correct | 57 | 92 | 17 | 74 | 166 |
| # Substitutions | 27 | 9 | 1 | 28 | 37 |
| # Deletions | 9 | 4 | 7 | 16 | 20 |
| # Distortions | 0 | 0 | 0 | 0 | 0 |
| # Epenthesis | 0 | 1 | 2 | 2 | 3 |
| % Correct | 61.29 | 86.79 | 62.96 | 61.67 | 73.45 |

## WAP Tables

WAP Tables are produced for each production and contains information supporting the Word, Prosodic and Segmental Level Breakdown tables.  Information is printed horizontally in a table with four columns for each table level: (1) Word Level, (2) Prosodic Level, and (3) Segmental Level. Table headings for each will be: (1) Whole Word Measure, Target, Actual, Match (i.e., are Target and Actual identical according to each word level measure. If so, True; if not, False), (2) Prosodic Alignment, Target, Position, and Description, and (3) Segmental Alignment, Target, Position, and Description. Caption for the table will be “Orthography /IPA Target/ ↔ /IPA Actual/”.

### Word Level

*Word Level Breakdown* categories:

 * **Word** (whole word accuracy). Did the Actual IPA match the Target IPA?
 * **# Syllables** (word length correct [correct number of syllables]). Did the Actual number of syllables match the Target number of syllables?
 * **Stress** (lexical stress correct). Did the Actual stress pattern match the Target stress pattern?
 * **CGV Shape** (target and actual CV shape with syllable stress, boundaries, and length included). Did the Actual CGV shape match the Target CGV shape?
 * **# Transitions** (syllable transitions correct). Did the Actual number of transitions (total number of syllables – 1) match the target number of transitions?
 * **Segregated Transitions** No syllable segregations (intra-word pauses in target and actual) should be present in the Target IPA. Does the Actual number of syllable segregations match the target number of transitions (Target = 0)? If false, syllable segregation is present.

Example:

| Category | Target | Actual | Match |
| --- | --- | --- | --- |
| Word | ˈbʌtəˌflaɪ | ˈbʌɾəˌfaɪ | false |
| # Syllables | 3 | 3 | true |
| Stress | 1U2 | 1U2 | true |
| CGV Shape | ˈCV.CVˌCCVV | ˈCV.CVˌCVV | false |
| # Transitions | 2 | 2 | true |
| Segregated Transitions | 0 | 0 | true |

### Prosodic Level

 * **Category** Stress/CGV Pattern
 * **IPA Target** IPA Target value
 * **IPA Actual** IPA Actual value
 * **Position** Initial/Medial/Final (syllable position within word)
 * **Description**
    - **Correct** The dimension (Target stress or CGV shape) was correct.
    - **Full syllable addition** A full syllable was added.
    - **Full syllable deletion** A full syllable was deleted (including the nucleus and all onset and/or coda consonants associated with the nucleus).
    - **Syllable reduction (onset)** The onset (or at least one consonant of the onset) was deleted but the nucleus of the syllable was realised.
    - **Syllable reduction (nucleus)** The nucleus vowel was deleted (but onset/coda consonants of the syllable were realised).
    - **Syllable reduction (coda)** The coda (or at least one consonant of the coda) was deleted but the nucleus of the syllable was realised.
    - **Syllable expansion (onset)** A consonant was added to the onset of a syllable.
    - **Syllable expansion (coda)** A consonant was added to the coda of a syllable.

Example:

| Category | IPA Target | IPA Actual | Position | Description |
| --- | --- | --- | --- | --- |
| Stress | 1 | 1 | Initial | Correct |
|  | U | U | Medial | Correct |
|  | 2 | 2 | Final | Correct |
| CGV Pattern | CV | CV | Initial | Correct |
|  | CV | CV | Medial | Correct |
|  | CCVV | CVV | Final | Incorrect |

### Segmental Level

 * **IPA Target** IPA Target value
 * **IPA Actual** IPA Actual value
 * **Position** Onset/Nucleus/Coda
 * **Description**
    - **Correct** The phone was correct (IPA Target matched IPA Actual for target phone).
    - **Substitution** The phone was substituted (IPA Target did not match IPA actual; target phone was substituted for a different phone in IPA Actual).
    - **Distortion** The phone was distorted (IPA Target did not match IPA actual; diacritic/ did not match between IPA Target and IPA Actual).
    - **Epenthesis** The phone was added (IPA Target did not match IPA actual; phone in IPA Actual was added to an empty word position [∅] of IPA Target).
    - **Deletion** The phone was deleted (IPA Target did not match IPA actual; phone in IPA Target deleted in IPA Actual creating an empty segment in IPA Actual [∅]).

Example:

| IPA Target | IPA Actual | Position | Description |
| --- | --- | --- | --- |
| b | b | ONSET |  Correct |
| ʌ | ʌ | NUCLEUS |  Correct |
| t | ɾ | ONSET |  Substitution |
| ə | ə | NUCLEUS |  Correct |
| f | f | ONSET |  Correct |
| l | ∅ | ONSET |  Deletion |
| a | a | NUCLEUS |  Correct |
| ɪ | ɪ | NUCLEUS |  Correct |
                    ]]></opqry:message>
                </opqry:info>
                <opqry:node ref="7ca6b2ef">
                    <opqry:info format="html" title="Query : Data Tiers">
                        <opqry:message/>
                    </opqry:info>
                </opqry:node>
                <opqry:report-template name="Report Prefix"/>
                <opqry:report-template name="Report Suffix"/>
            </opqry:nodewizard>
            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
        </extensions>
    </graph>
</opgraph>
