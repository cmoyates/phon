<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<opgraph xmlns="https://www.phon.ca/ns/opgraph" xmlns:nes="https://www.phon.ca/ns/node_editor" xmlns:oga="https://www.phon.ca/ns/opgraph-app" xmlns:ogcn="https://www.phon.ca/ns/opgraph-common-nodes" xmlns:opqry="https://phon.ca/ns/opgraph_query" xmlns:qry="http://phon.ling.mun.ca/ns/query">
    <graph id="root">
        <node id="4676e9d" name="Project" type="class:ca.phon.opgraph.nodes.reflect.ObjectNode">
            <extensions>
                <oga:settings>
                    <oga:property key="contextKey">
                        <![CDATA[_project]]>
                    </oga:property>
                    <oga:property key="ca.phon.opgraph.nodes.reflect.ObjectNode.declaredClass">
                        <![CDATA[ca.phon.project.Project]]>
                    </oga:property>
                </oga:settings>
                <oga:meta x="15" y="15"/>
            </extensions>
        </node>
        <node id="18a7baf2" name="Selected Sessions" type="class:ca.phon.opgraph.nodes.reflect.ObjectNode">
            <extensions>
                <oga:settings>
                    <oga:property key="contextKey">
                        <![CDATA[_selectedSessions]]>
                    </oga:property>
                    <oga:property key="ca.phon.opgraph.nodes.reflect.ObjectNode.declaredClass">
                        <![CDATA[java.util.ArrayList]]>
                    </oga:property>
                </oga:settings>
                <oga:meta x="15" y="296"/>
            </extensions>
        </node>
        <node id="7b37d313" name="Selected Participants" type="class:ca.phon.opgraph.nodes.reflect.ObjectNode">
            <extensions>
                <oga:settings>
                    <oga:property key="contextKey">
                        <![CDATA[_selectedParticipants]]>
                    </oga:property>
                    <oga:property key="ca.phon.opgraph.nodes.reflect.ObjectNode.declaredClass">
                        <![CDATA[java.util.ArrayList]]>
                    </oga:property>
                </oga:settings>
                <oga:meta x="15" y="397"/>
            </extensions>
        </node>
        <node id="68bdcb49" name="Parameters" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
            <extensions>
                <oga:settings>
                    <oga:property key="filters.searchBy.searchBy">
                        <![CDATA[Word]]>
                    </oga:property>
                    <oga:property key="filters.primary.filter">
                        <![CDATA[\c+(\s?\c+)*]]>
                    </oga:property>
                    <oga:property key="reportTitle">
                        <![CDATA[Consonant Clusters]]>
                    </oga:property>
                    <oga:property key="processSelection">
                        <![CDATA[Consonant Clusters]]>
                    </oga:property>
                    <oga:property key="__script">
                        <![CDATA[/*
params =
{enum, searchTier, "IPA Target"|"IPA Actual", 0, "Search Tier"}
;
 */
var GroupFilter = require("lib/GroupFilter").GroupFilter;
var AlignedGroupFilter = require("lib/TierFilter").TierFilter;
var WordFilter = require("lib/WordFilter").WordFilter;
var AlignedWordFilter = require("lib/TierFilter").TierFilter;
var SyllableFilter = require("lib/SyllableFilter").SyllableFilter;
var ParticipantFilter = require("lib/ParticipantFilter").ParticipantFilter;
var PatternFilter = require("lib/PatternFilter").PatternFilter;
var PatternType = require("lib/PatternFilter").PatternType;
var StressPatternOptions = require("lib/StressPattern").StressPatternOptions;
var CvPatternOptions = require("lib/CvPattern").CvPatternOptions;
var ResultType = require("lib/PhonScriptConstants").ResultType;
var TierList = require("lib/TierList").TierList;
var SearchByOptions = require("lib/SearchByOptions").SearchByOptions;

/********************************
 * Setup params
 *******************************/

var processes = [
	{
	   "name": "Consonant Clusters",
        "params": [
            {
                "object": "filters.primary",
                "function": "setPattern",
                "value": "\"\\\\c+(\\\\s?\\\\c+)*\""
            }
        ]
	},
	{
	   "name": "Vowel Clusters",
        "params": [
            {
                "object": "filters.primary",
                "function": "setPattern",
                "value": "\"\\\\v+(\\\\s?\\\\v+)*\""
            }
        ]
	},
	{
        "name": "Consonant Clusters (Monosyllabic)",
        "params": [
            {
                "object": "filters.primary",
                "function": "setPattern",
                "value": "\"(\\\\c:sctype(\\\"Onset|LeftAppendix\\\"))<2,> || (\\\\c:sctype(\\\"Coda|RightAppendix\\\"))<2,>\""
            }
        ]
    },
    {
        "name": "Consonant Clusters (Disyllabic)",
        "params": [
            {
                "object": "filters.primary",
                "function": "setPattern",
                "value": "\"(\\\\c:sctype(\\\"Coda|RightAppendix\\\"))+ \s? (\\\\c:sctype(\\\"Onset|LeftAppendix\\\"))+\""
            }
        ]
    },
    {
        "name": "Singleton Consonants",
        "params": [
            {
                "object": "filters.primary",
                "function": "setPattern",
                "value": "\"^\\\\s?(X=\\\\c)(?>[^\\\\c]) || (?<\\\\w[^\\\\c])\\\\c(?>[^\\\\c]) || (?<[^\\\\c])\\\\c$\""
            }
        ]
    },
    {
        "name": "Singleton Vowels",
        "params": [
            {
                "object": "filters.primary",
                "function": "setPattern",
                "value": "\"^\\\\s?(X=\\\\v)(?>[^\\\\v]) || (?<\\\\w[^\\\\v])\\\\v(?>[^\\\\v]) || (?<[^\\\\v])\\\\v$\""
            }
        ]
    },
    {
    	   "name": "Other (specify below)",
        "params": [
            {
                "object": "filters.primary",
                "function": "setPattern",
                "value": "\"\""
            }
        ]
    }
];
var processSelectionParamInfo = {
    "id": "processSelection",
    "title": "Cluster Type",
    "def": 0,
};
var processSelectionParam;

var filters = {
    "primary": new PatternFilter("filters.primary"),
    "searchBy": new SearchByOptions("filters.searchBy"),
    "targetResultFilter": new PatternFilter("filters.targetResultFilter"),
    "actualResultFilter": new PatternFilter("filters.actualResultFilter"),
    "group": new GroupFilter("filters.group"),
    "groupTiers": new TierList("filters.groupTiers"),
    "groupPattern": new PatternFilter("filters.groupPattern"),
    "alignedGroup": new AlignedGroupFilter("filters.alignedGroup"),
    "word": new WordFilter("filters.word"),
    "wordTiers": new TierList("filters.wordTiers"),
    "wordPattern": new PatternFilter("filters.wordPattern"),
    "alignedWord": new AlignedWordFilter("filters.alignedWord"),
    "syllable": new SyllableFilter("filters.syllable")
};

var includeAlignedParamInfo = {
    "id": "includeAligned",
    "title": "",
    "desc": "Include aligned phones",
    "def": true
};
var includeAlignedParam;
var includeAligned = includeAlignedParamInfo.def;

var reportTitleParamInfo = {
	"id": "reportTitle",
	"title": "Report Title",
	"def": "Custom",
	"prompt": "Enter report title"
};
var reportTitleParam;
var reportTitle = reportTitleParamInfo.def;

function setup_params(params) {
	reportTitleParam = new StringScriptParam(
			reportTitleParamInfo.id,
			reportTitleParamInfo.title,
			reportTitleParamInfo.def);
     reportTitleParam.setPrompt(reportTitleParamInfo.prompt);
	params.add(0, reportTitleParam);
	
    processSelectionParam = createProcessSelection();
    params.add(processSelectionParam);
	
	var insertIdx = params.size();

	

	var optionsParam = new SeparatorScriptParam("Query Options", false);
	params.add(optionsParam);
	filters.primary.setSelectedPatternType(PatternType.PHONEX);
	filters.primary.param_setup(params);
	filters.primary.set_required(true);

	// setup result filter section
	var resultFilterSection = new SeparatorScriptParam("Aligned Phones", true);
	var targetLbl = new LabelScriptParam("", "<html><b>IPA Target Matcher</b></html>");
	var actualLbl = new LabelScriptParam("", "<html><b>IPA Actual Matcher</b></html>");

	includeAlignedParam = new BooleanScriptParam(
	includeAlignedParamInfo.id,
	includeAlignedParamInfo.desc,
	includeAlignedParamInfo.title,
	includeAlignedParamInfo.def);

	params.add(resultFilterSection);
	params.add(includeAlignedParam);
	params.add(targetLbl);
	filters.targetResultFilter.setSelectedPatternType(PatternType.PHONEX);
	filters.targetResultFilter.param_setup(params);
	params.add(actualLbl);
	filters.actualResultFilter.setSelectedPatternType(PatternType.PHONEX);
	filters.actualResultFilter.param_setup(params);

	filters.group.param_setup(params);
	filters.groupPattern.param_setup(params);

	var sep = new LabelScriptParam("", "<html><b>Add Aligned Groups</b></html>");
	params.add(sep);
	filters.groupTiers.param_setup(params);
	var sep2 = new LabelScriptParam("", "<html><b>Aligned Group Filter</b></html>");
	params.add(sep2);
	filters.alignedGroup.param_setup(params);

	filters.word.param_setup(params);
	filters.wordPattern.param_setup(params);
	filters.wordPattern.setEnabled(false);

	var wordsep = new LabelScriptParam("", "<html><b>Add Aligned Words</b></html>");
	params.add(wordsep);
	filters.wordTiers.param_setup(params);

	var wordsep2 = new LabelScriptParam("", "<html><b>Aligned Word Filter</b></html>");
	params.add(wordsep2);
	filters.alignedWord.param_setup(params);
	var searchByWordListener = new java.beans.PropertyChangeListener {
		propertyChange: function (e) {
			var enabled = e.source.getValue(e.source.paramId);
			filters.wordPattern.setEnabled(enabled);
			filters.alignedWord.setEnabled(enabled);
		}
	};
	filters.word.searchByWordOpt.addPropertyChangeListener(filters.word.searchByWordOpt.paramId, searchByWordListener);
	var enabled = filters.word.searchByWordOpt.getValue(filters.word.searchByWordOpt.paramId);
	filters.wordPattern.setEnabled(enabled);
	filters.alignedWord.setEnabled(enabled);

	filters.syllable.param_setup(params);

	filters.searchBy.includeSyllableOption = true;
	filters.searchBy.param_setup(params, filters.word.searchByWordParam, filters.syllable.searchBySyllableParam, insertIdx);
}

function createProcessSelection() {
    // get a list of all process names
    var processNames = [];
    for(i = 0; i < processes.length; i++) {
        name = processes[i]["name"];
        processNames.push(name);
    }

    var retVal = new EnumScriptParam(
        processSelectionParamInfo.id,
        processSelectionParamInfo.title,
        processSelectionParamInfo.def,
        processNames);

     var processSelectionListener = new java.beans.PropertyChangeListener() {
            propertyChange: function(e) {
                var selectedIdx = processSelectionParam.getValue(processSelectionParamInfo.id).index;
                if(selectedIdx >= 0) {
                    var process = processes[selectedIdx];

                    reportTitleParam.setValue(reportTitleParamInfo.id, process["name"]);

                    var params = process["params"];
                    for(i = 0; i < params.length; i++) {
                        var param = params[i];
                        var setParam = param["object"] + "." + param["function"] + "(" + param["value"] + ");";
                        eval(setParam);
                    }

                }
            }
     };
     retVal.addPropertyChangeListener(processSelectionListener);

    return retVal;
}

function run(context) {

}
]]>
                    </oga:property>
                </oga:settings>
                <oga:meta x="15" y="498"/>
            </extensions>
        </node>
        <opqry:queryNode id="3cb83fde" name="Query : Phones" type="ca.phon.app.opgraph.nodes.query.QueryNode">
            <qry:query xmlns="http://phon.ling.mun.ca/ns/query" date="2018-04-19T13:58:18.438-02:30" name="Phones" uuid="4145c870-cb36-4546-a4f7-33b3cd95ff2e">
                <script>
                    <url ref="Phones" rel="stock"/>
                    <param id="filters.actualResultFilter.filterType">Phonex</param>
                    <param id="filters.alignedGroup.patternFilter.filterType">Plain text</param>
                    <param id="filters.alignedWord.patternFilter.filterType">Plain text</param>
                    <param id="filters.groupPattern.filterType">Plain text</param>
                    <param id="filters.primary.filter">\c+(\s?\c+)*</param>
                    <param id="filters.primary.filterType">Phonex</param>
                    <param id="filters.searchBy.searchBy">Word</param>
                    <param id="filters.speaker.age1Comparator">equal to</param>
                    <param id="filters.speaker.age2Comparator">equal to</param>
                    <param id="filters.speaker.ageOperator">(select operator)</param>
                    <param id="filters.speaker.participantRole">(select role)</param>
                    <param id="filters.syllable.otherSyllTypePattern.filterType">Plain text</param>
                    <param id="filters.syllable.syllableType">Any syllable</param>
                    <param id="filters.targetResultFilter.filterType">Phonex</param>
                    <param id="filters.wordPattern.filterType">Plain text</param>
                    <param id="searchTier">IPA Target</param>
                </script>
            </qry:query>
            <extensions>
                <oga:settings/>
                <oga:meta x="367" y="25"/>
            </extensions>
        </opqry:queryNode>
        <ogcn:macro id="91cc301c03a548b4" name="Get Report Name" type="ca.phon.opgraph.nodes.general.MacroNode">
            <graph id="57b31c42">
                <node id="26d63891c2ff4c70" name="String#&lt;init&gt;(String)" type="class:ca.phon.opgraph.nodes.reflect.ConstructorNode">
                    <extensions>
                        <oga:settings>
                            <oga:property key="ca.phon.opgraph.nodes.reflect.ConstructorNode.classMember">
                                <![CDATA[<init>(java.lang.String)]]>
                            </oga:property>
                            <oga:property key="ca.phon.opgraph.nodes.reflect.ConstructorNode.declaredClass">
                                <![CDATA[java.lang.String]]>
                            </oga:property>
                        </oga:settings>
                        <oga:meta x="78" y="88">
                            <oga:default for="arg1" type="java.lang.String">reportTitle</oga:default>
                        </oga:meta>
                    </extensions>
                </node>
                <node id="a461cf69fdd04846" name="Map#get(Object)" type="class:ca.phon.opgraph.nodes.reflect.MethodNode">
                    <extensions>
                        <oga:settings>
                            <oga:property key="ca.phon.opgraph.nodes.reflect.MethodNode.classMember">
                                <![CDATA[get(java.lang.Object)]]>
                            </oga:property>
                            <oga:property key="ca.phon.opgraph.nodes.reflect.MethodNode.declaredClass">
                                <![CDATA[java.util.Map]]>
                            </oga:property>
                        </oga:settings>
                        <oga:meta x="236" y="91"/>
                    </extensions>
                </node>
                <node id="25a6d6d9edc4823" name="Object#toString()" type="class:ca.phon.opgraph.nodes.reflect.MethodNode">
                    <extensions>
                        <oga:settings>
                            <oga:property key="ca.phon.opgraph.nodes.reflect.MethodNode.classMember">
                                <![CDATA[toString()]]>
                            </oga:property>
                            <oga:property key="ca.phon.opgraph.nodes.reflect.MethodNode.declaredClass">
                                <![CDATA[java.lang.Object]]>
                            </oga:property>
                        </oga:settings>
                        <oga:meta x="393" y="100"/>
                    </extensions>
                </node>
                <link dest="a461cf69fdd04846" destField="arg1" source="26d63891c2ff4c70" sourceField="value"/>
                <link dest="25a6d6d9edc4823" destField="obj" source="a461cf69fdd04846" sourceField="value"/>
            </graph>
            <ogcn:published_input field="obj" name="parameters" ref="a461cf69fdd04846"/>
            <ogcn:published_output field="value" name="value" ref="25a6d6d9edc4823"/>
            <extensions>
                <oga:meta x="406" y="397"/>
            </extensions>
        </ogcn:macro>
        <node id="c7840bb8925648c0" type="class:ca.phon.app.opgraph.nodes.log.PrintScriptParameters">
            <extensions>
                <oga:settings>
                    <oga:property key="excludes">
                        <![CDATA[@General]]>
                    </oga:property>
                    <oga:property key="printOnlyChanged">
                        <![CDATA[true]]>
                    </oga:property>
                    <oga:property key="includes">
                        <![CDATA[@Query Options]]>
                    </oga:property>
                </oga:settings>
                <oga:meta x="649" y="541"/>
            </extensions>
        </node>
        <node id="1795f107d404aad" type="class:ca.phon.app.opgraph.nodes.table.ResultsToTableNode">
            <extensions>
                <oga:settings>
                    <oga:property key="includeSessionInfo">
                        <![CDATA[true]]>
                    </oga:property>
                    <oga:property key="includeSpeakerInfo">
                        <![CDATA[true]]>
                    </oga:property>
                    <oga:property key="includeMetadata">
                        <![CDATA[true]]>
                    </oga:property>
                    <oga:property key="includeTierInfo">
                        <![CDATA[true]]>
                    </oga:property>
                </oga:settings>
                <oga:meta x="604" y="25"/>
            </extensions>
        </node>
        <node id="ebf04e3dbfe84a6e" type="class:ca.phon.app.opgraph.nodes.report.NewReportNode">
            <extensions>
                <oga:settings/>
                <oga:meta x="633" y="407"/>
            </extensions>
        </node>
        <node id="a1d432f0ac4e4eb2" name="Split Table by Speaker" type="class:ca.phon.app.opgraph.nodes.table.TableScriptNode">
            <output name="keySet" type="java.util.Set">Unique values from given column name</output>
            <output name="tableMap" type="java.util.Map">Map of key -&gt; table values</output>
            <extensions>
                <oga:settings>
                    <oga:property key="__script">
                        <![CDATA[/*
 * Phon - An open source tool for research in phonology.
 * Copyright (C) 2005 - 2017, Gregory Hedlund <ghedlund@mun.ca> and Yvan Rose <yrose@mun.ca>
 * Dept of Linguistics, Memorial University <https://phon.ca>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

 /**
  * Split Table.js
  *
  * Script for use with ca.phon.app.opgraph.nodes.table.TableScriptNode
  *
  * Split table based on column name.  Two outputs
  * are produced, a set of keys from the column used in the filter  and a
  * map of key -> table values.
  */

var columnParamInfo = {
	"id": "columnName",
	"title": "Column Name",
	"def": "",
	"prompt": "Enter column name"
}

function setup_params(params) {
	var columnParam = new StringScriptParam(
		columnParamInfo.id,
		columnParamInfo.title,
		columnParamInfo.def);
	columnParam.setPrompt(columnParamInfo.prompt);
	params.add(columnParam);
}

// add custom inputs/outputs here
function init(inputs, outputs) {
	outputs.add("keySet", "Unique values from given column name", false, java.util.Set);
	outputs.add("tableMap", "Map of key -> table values", false, java.util.Map);
}

/*
 * Create a new table with the same schema as the inputTable
 */
function setupTable(inputTable) {
    var table = new DefaultTableDataSource();
    for(c = 0; c < inputTable.columnCount; c++) {
	    var colTitle = inputTable.getColumnTitle(c);
	    table.setColumnTitle(c, colTitle);
	}
	return table;
}

// run operation on table
function tableOp(context, table) {
	// find table column index
	col = table.getColumnIndex(columnName);

	if(col < 0)
		return; // column not found

	var tableMap = new java.util.LinkedHashMap();

	for(row = 0; row < table.rowCount; row++) {
	    // use string value as row key
		var rowKey = Packages.ca.phon.formatter.FormatterUtil.format(table.getValueAt(row, col));

		var keyTable = tableMap.get(rowKey);
		if(keyTable == null) {
		    keyTable = setupTable(table);
		    tableMap.put(rowKey, keyTable);
		}
		keyTable.addRow(table.getRow(row));
	}

	context.put("keySet", tableMap.keySet());
	context.put("tableMap", tableMap);
}
]]>
                    </oga:property>
                    <oga:property key="columnName">
                        <![CDATA[Speaker]]>
                    </oga:property>
                </oga:settings>
                <oga:meta x="801" y="25"/>
            </extensions>
        </node>
        <node id="19e7d505dabf4cf4" type="class:ca.phon.app.opgraph.nodes.report.TextSectionNode">
            <extensions>
                <oga:settings>
                    <oga:property key="ca.phon.app.opgraph.nodes.report.TextSectionNode.text"/>
                </oga:settings>
                <oga:meta x="948" y="406">
                    <oga:default for="sectionName" type="java.lang.String">Parameters</oga:default>
                </oga:meta>
            </extensions>
        </node>
        <node id="c0ad0c3a615745ac" name="Summary Section Header" type="class:ca.phon.app.opgraph.nodes.report.ReportSectionHeaderNode">
            <extensions>
                <oga:meta x="940" y="576">
                    <oga:default for="sectionName" type="java.lang.String">Summary</oga:default>
                </oga:meta>
            </extensions>
        </node>
        <node id="911bb264ea0e421a" name="Aggregate Section Header" type="class:ca.phon.app.opgraph.nodes.report.ReportSectionHeaderNode">
            <extensions>
                <oga:meta x="944" y="725">
                    <oga:default for="sectionName" type="java.lang.String">Aggregate</oga:default>
                </oga:meta>
            </extensions>
        </node>
        <node id="323fff184f4f441d" name="Breakdown Section Header" type="class:ca.phon.app.opgraph.nodes.report.ReportSectionHeaderNode">
            <extensions>
                <oga:meta x="948" y="864">
                    <oga:default for="sectionName" type="java.lang.String">Listing by Participant and Session</oga:default>
                </oga:meta>
            </extensions>
        </node>
        <ogcn:macro id="ca3489d5c7bf4c66" name="For Each Participant" type="ca.phon.opgraph.nodes.reflect.IterableClassNode">
            <graph id="146ef54">
                <node id="9a9ef9dcda0c4dc2" name="Current Object" type="class:ca.phon.opgraph.nodes.reflect.ContextualItemClassNode">
                    <extensions>
                        <oga:settings>
                            <oga:property key="ca.phon.opgraph.nodes.reflect.ContextualItemClassNode.key">
                                <![CDATA[currentValue]]>
                            </oga:property>
                            <oga:property key="ca.phon.opgraph.nodes.reflect.ContextualItemClassNode.declaredClass">
                                <![CDATA[java.lang.Object]]>
                            </oga:property>
                        </oga:settings>
                        <oga:meta x="48" y="48"/>
                    </extensions>
                </node>
                <node id="2ebecb1361134530" name="Table Map" type="class:ca.phon.opgraph.nodes.reflect.ObjectNode">
                    <extensions>
                        <oga:settings>
                            <oga:property key="ca.phon.opgraph.nodes.reflect.ObjectNode.declaredClass">
                                <![CDATA[java.util.Map]]>
                            </oga:property>
                        </oga:settings>
                        <oga:meta x="68" y="208"/>
                    </extensions>
                </node>
                <ogcn:macro id="6d063ac0d1504227" name="Create Summary Table" type="ca.phon.opgraph.nodes.general.MacroNode">
                    <graph id="2bb03883">
                        <node id="b357e8b1d80d41fc" name="DefaultTableDataSource#&lt;init&gt;()" type="class:ca.phon.opgraph.nodes.reflect.ConstructorNode">
                            <extensions>
                                <oga:settings>
                                    <oga:property key="ca.phon.opgraph.nodes.reflect.ConstructorNode.classMember">
                                        <![CDATA[<init>()]]>
                                    </oga:property>
                                    <oga:property key="ca.phon.opgraph.nodes.reflect.ConstructorNode.declaredClass">
                                        <![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]>
                                    </oga:property>
                                </oga:settings>
                                <oga:meta x="41" y="187"/>
                            </extensions>
                        </node>
                        <node id="4e0aaaa6b6814808" name="Setup Column Names" type="class:ca.phon.app.opgraph.nodes.table.TableScriptNode">
                            <extensions>
                                <oga:settings>
                                    <oga:property key="__script">
                                        <![CDATA[function tableOp(context, table) {
	// add headers to table
	table.setColumnTitle(0, "Session");
	table.setColumnTitle(1, "Role");
	table.setColumnTitle(2, "Age");
}
]]>
                                    </oga:property>
                                </oga:settings>
                                <oga:meta x="291" y="178"/>
                            </extensions>
                        </node>
                        <link dest="4e0aaaa6b6814808" destField="table" source="b357e8b1d80d41fc" sourceField="value"/>
                        <extensions>
                            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                        </extensions>
                    </graph>
                    <ogcn:published_output field="table" name="table" ref="4e0aaaa6b6814808"/>
                    <extensions>
                        <oga:meta x="547" y="256"/>
                    </extensions>
                </ogcn:macro>
                <node id="93d5f4e025f543ac" name="Selected Sessions" type="class:ca.phon.opgraph.nodes.reflect.ObjectNode">
                    <extensions>
                        <oga:settings>
                            <oga:property key="contextKey">
                                <![CDATA[_selectedSessions]]>
                            </oga:property>
                            <oga:property key="ca.phon.opgraph.nodes.reflect.ObjectNode.declaredClass">
                                <![CDATA[java.util.ArrayList]]>
                            </oga:property>
                        </oga:settings>
                        <oga:meta x="69" y="310"/>
                    </extensions>
                </node>
                <node id="8b42aa849bf5412b" name="Summary Node" type="class:ca.phon.opgraph.nodes.reflect.ObjectNode">
                    <extensions>
                        <oga:settings>
                            <oga:property key="ca.phon.opgraph.nodes.reflect.ObjectNode.declaredClass">
                                <![CDATA[ca.phon.app.opgraph.report.tree.ReportTreeNode]]>
                            </oga:property>
                        </oga:settings>
                        <oga:meta x="68" y="405"/>
                    </extensions>
                </node>
                <node id="e0581e5eaa944b44" name="Breakdown Node" type="class:ca.phon.opgraph.nodes.reflect.ObjectNode">
                    <extensions>
                        <oga:settings>
                            <oga:property key="contextKey"/>
                            <oga:property key="ca.phon.opgraph.nodes.reflect.ObjectNode.declaredClass">
                                <![CDATA[ca.phon.app.opgraph.report.tree.ReportTreeNode]]>
                            </oga:property>
                        </oga:settings>
                        <oga:meta x="59" y="618"/>
                    </extensions>
                </node>
                <node id="e1465be95d264a93" name="Aggregate Node" type="class:ca.phon.opgraph.nodes.reflect.ObjectNode">
                    <extensions>
                        <oga:settings>
                            <oga:property key="contextKey"/>
                            <oga:property key="ca.phon.opgraph.nodes.reflect.ObjectNode.declaredClass">
                                <![CDATA[ca.phon.app.opgraph.report.tree.ReportTreeNode]]>
                            </oga:property>
                        </oga:settings>
                        <oga:meta x="59" y="839"/>
                    </extensions>
                </node>
                <node id="b69e3d7b316b4870" name="To Participant Object" type="class:ca.phon.opgraph.nodes.reflect.ObjectCastNode">
                    <extensions>
                        <oga:settings>
                            <oga:property key="ca.phon.opgraph.nodes.reflect.ObjectCastNode.declaredClass">
                                <![CDATA[ca.phon.session.Participant]]>
                            </oga:property>
                        </oga:settings>
                        <oga:meta x="245" y="49"/>
                    </extensions>
                </node>
                <ogcn:macro id="d2cea4f3206f4c4b" name="Get Table of Results For Speaker" type="ca.phon.opgraph.nodes.general.MacroNode">
                    <graph id="62c7e18c">
                        <node id="1cea2736f1c64ea3" name="Object#toString()" type="class:ca.phon.opgraph.nodes.reflect.MethodNode">
                            <extensions>
                                <oga:settings>
                                    <oga:property key="ca.phon.opgraph.nodes.reflect.MethodNode.classMember">
                                        <![CDATA[toString()]]>
                                    </oga:property>
                                    <oga:property key="ca.phon.opgraph.nodes.reflect.MethodNode.declaredClass">
                                        <![CDATA[java.lang.Object]]>
                                    </oga:property>
                                </oga:settings>
                                <oga:meta x="105" y="70"/>
                            </extensions>
                        </node>
                        <node id="bf7ddd007b2a4c95" name="Map#get(Object)" type="class:ca.phon.opgraph.nodes.reflect.MethodNode">
                            <extensions>
                                <oga:settings>
                                    <oga:property key="ca.phon.opgraph.nodes.reflect.MethodNode.classMember">
                                        <![CDATA[get(java.lang.Object)]]>
                                    </oga:property>
                                    <oga:property key="ca.phon.opgraph.nodes.reflect.MethodNode.declaredClass">
                                        <![CDATA[java.util.Map]]>
                                    </oga:property>
                                </oga:settings>
                                <oga:meta x="296" y="73"/>
                            </extensions>
                        </node>
                        <node id="14d62b17f5584eff" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                            <output name="exists" type="java.lang.Boolean">does table exist</output>
                            <output name="table" type="ca.phon.query.report.datasource.DefaultTableDataSource">table if exists, undefined otherwise</output>
                            <extensions>
                                <oga:settings>
                                    <oga:property key="__script">
                                        <![CDATA[
// setup input/output fields
function init(inputFields, outputFields) {
	inputFields.add("table", "");
	outputFields.add("exists", "does table exist", false, java.lang.Boolean);
	outputFields.add("table", "table if exists, undefined otherwise", false, Packages.ca.phon.query.report.datasource.DefaultTableDataSource);
}

function run(context) {
	var tableExists =
		(context.containsKey("table") && context.get("table") != null);
	context.put("exists", tableExists);
	context.put("table", context.get("table"));
}
]]>
                                    </oga:property>
                                </oga:settings>
                                <oga:meta x="514" y="94"/>
                            </extensions>
                        </node>
                        <link dest="bf7ddd007b2a4c95" destField="arg1" source="1cea2736f1c64ea3" sourceField="value"/>
                        <link dest="14d62b17f5584eff" destField="table" source="bf7ddd007b2a4c95" sourceField="value"/>
                        <extensions>
                            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                        </extensions>
                    </graph>
                    <ogcn:published_input field="obj" name="speaker" ref="1cea2736f1c64ea3"/>
                    <ogcn:published_input field="obj" name="tableMap" ref="bf7ddd007b2a4c95"/>
                    <ogcn:published_output field="exists" name="exists" ref="14d62b17f5584eff"/>
                    <ogcn:published_output field="table" name="table" ref="14d62b17f5584eff"/>
                    <extensions>
                        <oga:meta x="506" y="127"/>
                    </extensions>
                </ogcn:macro>
                <node id="79c402e97655424c" type="class:ca.phon.opgraph.nodes.general.ArrayNode">
                    <input name="object1" optional="false">object in array</input>
                    <extensions>
                        <oga:settings>
                            <oga:property key="ca.phon.opgraph.nodes.general.ArrayNode.numObjects">
                                <![CDATA[1]]>
                            </oga:property>
                        </oga:settings>
                        <oga:meta x="607" y="421"/>
                    </extensions>
                </node>
                <ogcn:macro id="c4d2a4fcd49845f4" name="If Speaker has Results" type="ca.phon.opgraph.nodes.general.MacroNode">
                    <graph id="463e50b5">
                        <node id="8a12d372d81c4037" name="Table" type="class:ca.phon.opgraph.nodes.reflect.ObjectNode">
                            <extensions>
                                <oga:settings>
                                    <oga:property key="ca.phon.opgraph.nodes.reflect.ObjectNode.declaredClass">
                                        <![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]>
                                    </oga:property>
                                </oga:settings>
                                <oga:meta x="100" y="212"/>
                            </extensions>
                        </node>
                        <node id="38592bb9059b4c53" name="Selected Sessions" type="class:ca.phon.opgraph.nodes.reflect.ObjectNode">
                            <extensions>
                                <oga:settings>
                                    <oga:property key="contextKey">
                                        <![CDATA[_selectedSessions]]>
                                    </oga:property>
                                    <oga:property key="ca.phon.opgraph.nodes.reflect.ObjectNode.declaredClass">
                                        <![CDATA[java.util.ArrayList]]>
                                    </oga:property>
                                </oga:settings>
                                <oga:meta x="109" y="373"/>
                            </extensions>
                        </node>
                        <node id="abfaea18a5664f81" name="Participant" type="class:ca.phon.opgraph.nodes.reflect.ObjectNode">
                            <extensions>
                                <oga:settings>
                                    <oga:property key="ca.phon.opgraph.nodes.reflect.ObjectNode.declaredClass">
                                        <![CDATA[ca.phon.session.Participant]]>
                                    </oga:property>
                                </oga:settings>
                                <oga:meta x="102" y="474"/>
                            </extensions>
                        </node>
                        <node id="733b808046ea4778" name="Summary Table" type="class:ca.phon.opgraph.nodes.reflect.ObjectNode">
                            <extensions>
                                <oga:settings>
                                    <oga:property key="ca.phon.opgraph.nodes.reflect.ObjectNode.declaredClass">
                                        <![CDATA[ca.phon.query.report.datasource.TableDataSource]]>
                                    </oga:property>
                                </oga:settings>
                                <oga:meta x="102" y="795"/>
                            </extensions>
                        </node>
                        <node id="6dc5f46142f54ed1" name="Breakdown Node" type="class:ca.phon.opgraph.nodes.reflect.ObjectNode">
                            <extensions>
                                <oga:settings>
                                    <oga:property key="ca.phon.opgraph.nodes.reflect.ObjectNode.declaredClass">
                                        <![CDATA[ca.phon.app.opgraph.report.tree.ReportTreeNode]]>
                                    </oga:property>
                                </oga:settings>
                                <oga:meta x="106" y="937"/>
                            </extensions>
                        </node>
                        <node id="f940f9828e9c41e5" name="Aggregate Node" type="class:ca.phon.opgraph.nodes.reflect.ObjectNode">
                            <extensions>
                                <oga:settings>
                                    <oga:property key="ca.phon.opgraph.nodes.reflect.ObjectNode.declaredClass">
                                        <![CDATA[ca.phon.app.opgraph.report.tree.ReportTreeNode]]>
                                    </oga:property>
                                </oga:settings>
                                <oga:meta x="106" y="1158"/>
                            </extensions>
                        </node>
                        <node id="6d09656b" type="class:ca.phon.app.opgraph.nodes.table.InventoryNode">
                            <extensions>
                                <opqry:inventoryoptions>
                                    <opqry:automaticConfiguration configureAutomatically="true">
                                        <opqry:autoGrouping column="Age" grouping="true"/>
                                        <opqry:autoColumns caseSensitive="true" ignoreDiacritics="false" includeAdditionalGroupData="false" includeAdditionalWordData="false" includeMetadata="true"/>
                                    </opqry:automaticConfiguration>
                                    <opqry:groupBy caseSensitive="true" column="Age" ignoreDiacritics="false"/>
                                    <opqry:column caseSensitive="true" column="IPA Target" ignoreDiacritics="false"/>
                                    <opqry:column caseSensitive="true" column="IPA Actual" ignoreDiacritics="false"/>
                                    <opqry:column caseSensitive="true" column="Alignment" ignoreDiacritics="false"/>
                                </opqry:inventoryoptions>
                                <oga:settings/>
                                <oga:meta x="517" y="193"/>
                            </extensions>
                        </node>
                        <node id="7dd5e3f6" name="Object#toString()" type="class:ca.phon.opgraph.nodes.reflect.MethodNode">
                            <extensions>
                                <oga:settings>
                                    <oga:property key="ca.phon.opgraph.nodes.reflect.MethodNode.classMember">
                                        <![CDATA[toString()]]>
                                    </oga:property>
                                    <oga:property key="ca.phon.opgraph.nodes.reflect.MethodNode.declaredClass">
                                        <![CDATA[java.lang.Object]]>
                                    </oga:property>
                                </oga:settings>
                                <oga:meta x="776" y="305"/>
                            </extensions>
                        </node>
                        <node id="89453e18295c48f6" name="Split Table by Session" type="class:ca.phon.app.opgraph.nodes.table.TableScriptNode">
                            <output name="keySet" type="java.util.Set">Unique values from given column name</output>
                            <output name="tableMap" type="java.util.Map">Map of key -&gt; table values</output>
                            <extensions>
                                <oga:settings>
                                    <oga:property key="__script">
                                        <![CDATA[/*
 * Phon - An open source tool for research in phonology.
 * Copyright (C) 2005 - 2017, Gregory Hedlund <ghedlund@mun.ca> and Yvan Rose <yrose@mun.ca>
 * Dept of Linguistics, Memorial University <https://phon.ca>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

 /**
  * Split Table.js
  *
  * Script for use with ca.phon.app.opgraph.nodes.table.TableScriptNode
  *
  * Split table based on column name.  Two outputs
  * are produced, a set of keys from the column used in the filter  and a
  * map of key -> table values.
  */

var columnParamInfo = {
	"id": "columnName",
	"title": "Column Name",
	"def": "",
	"prompt": "Enter column name"
}

function setup_params(params) {
	var columnParam = new StringScriptParam(
		columnParamInfo.id,
		columnParamInfo.title,
		columnParamInfo.def);
	columnParam.setPrompt(columnParamInfo.prompt);
	params.add(columnParam);
}

// add custom inputs/outputs here
function init(inputs, outputs) {
	outputs.add("keySet", "Unique values from given column name", false, java.util.Set);
	outputs.add("tableMap", "Map of key -> table values", false, java.util.Map);
}

/*
 * Create a new table with the same schema as the inputTable
 */
function setupTable(inputTable) {
    var table = new DefaultTableDataSource();
    for(c = 0; c < inputTable.columnCount; c++) {
	    var colTitle = inputTable.getColumnTitle(c);
	    table.setColumnTitle(c, colTitle);
	}
	return table;
}

// run operation on table
function tableOp(context, table) {
	// find table column index
	col = table.getColumnIndex(columnName);

	if(col < 0)
		return; // column not found

	var tableMap = new java.util.LinkedHashMap();

	for(row = 0; row < table.rowCount; row++) {
	    // use string value as row key
		var rowKey = Packages.ca.phon.formatter.FormatterUtil.format(table.getValueAt(row, col));

		var keyTable = tableMap.get(rowKey);
		if(keyTable == null) {
		    keyTable = setupTable(table);
		    tableMap.put(rowKey, keyTable);
		}
		keyTable.addRow(table.getRow(row));
	}

	context.put("keySet", tableMap.keySet());
	context.put("tableMap", tableMap);
}
]]>
                                    </oga:property>
                                    <oga:property key="columnName">
                                        <![CDATA[Session]]>
                                    </oga:property>
                                </oga:settings>
                                <oga:meta x="512" y="523"/>
                            </extensions>
                        </node>
                        <node id="169771da" type="class:ca.phon.app.opgraph.nodes.table.SortNode">
                            <extensions>
                                <opqry:sortoptions autoSortOrder="ascending" configureAutomatically="true">
                                    <opqry:sortBy column="IPA Target" order="ascending" type="ipa"/>
                                    <opqry:sortBy column="IPA Actual" order="ascending" type="ipa"/>
                                    <opqry:sortBy column="Alignment" order="ascending" type="plain"/>
                                    <opqry:sortBy column="01;11.09" order="ascending" type="plain"/>
                                    <opqry:sortBy column="02;01.03" order="ascending" type="plain"/>
                                    <opqry:sortBy column="02;04.09" order="ascending" type="plain"/>
                                </opqry:sortoptions>
                                <oga:settings/>
                                <oga:meta x="766" y="195"/>
                            </extensions>
                        </node>
                        <node id="5d3c7dbbf65e498e" type="class:ca.phon.app.opgraph.nodes.report.ReportSectionHeaderNode">
                            <extensions>
                                <oga:meta x="516" y="713"/>
                            </extensions>
                        </node>
                        <node id="5e5a58c7" type="class:ca.phon.app.opgraph.nodes.report.TableSectionNode">
                            <extensions>
                                <oga:settings>
                                    <oga:property key="ca.phon.app.opgraph.nodes.report.TableSectionNode.includeColumns">
                                        <![CDATA[true]]>
                                    </oga:property>
                                    <oga:property key="ca.phon.app.opgraph.nodes.report.TableSectionNode.columns"/>
                                </oga:settings>
                                <oga:meta x="1000" y="201"/>
                            </extensions>
                        </node>
                        <ogcn:macro id="ab7a1317d88e4f41" name="For Each Session" type="ca.phon.opgraph.nodes.reflect.IterableClassNode">
                            <graph id="7fb461e2">
                                <node id="97d373bc8c294e5a" name="Current Object" type="class:ca.phon.opgraph.nodes.reflect.ContextualItemClassNode">
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="ca.phon.opgraph.nodes.reflect.ContextualItemClassNode.key">
                                                <![CDATA[currentValue]]>
                                            </oga:property>
                                            <oga:property key="ca.phon.opgraph.nodes.reflect.ContextualItemClassNode.declaredClass">
                                                <![CDATA[java.lang.Object]]>
                                            </oga:property>
                                        </oga:settings>
                                        <oga:meta x="37" y="43"/>
                                    </extensions>
                                </node>
                                <node id="1bb6ef34c9bb456f" name="Table Map" type="class:ca.phon.opgraph.nodes.reflect.ObjectNode">
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="ca.phon.opgraph.nodes.reflect.ObjectNode.declaredClass">
                                                <![CDATA[java.util.Map]]>
                                            </oga:property>
                                        </oga:settings>
                                        <oga:meta x="64" y="267"/>
                                    </extensions>
                                </node>
                                <node id="8ae9ec35ce0047f9" name="Participant" type="class:ca.phon.opgraph.nodes.reflect.ObjectNode">
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="ca.phon.opgraph.nodes.reflect.ObjectNode.declaredClass">
                                                <![CDATA[ca.phon.session.Participant]]>
                                            </oga:property>
                                        </oga:settings>
                                        <oga:meta x="59" y="368"/>
                                    </extensions>
                                </node>
                                <node id="291179ea9dbb427a" name="Summary Table" type="class:ca.phon.opgraph.nodes.reflect.ObjectNode">
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="ca.phon.opgraph.nodes.reflect.ObjectNode.declaredClass">
                                                <![CDATA[ca.phon.query.report.datasource.TableDataSource]]>
                                            </oga:property>
                                        </oga:settings>
                                        <oga:meta x="72" y="689"/>
                                    </extensions>
                                </node>
                                <node id="b8a81dbf1f9b4e5f" name="Breakdown Node" type="class:ca.phon.opgraph.nodes.reflect.ObjectNode">
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="ca.phon.opgraph.nodes.reflect.ObjectNode.declaredClass">
                                                <![CDATA[ca.phon.app.opgraph.report.tree.ReportTreeNode]]>
                                            </oga:property>
                                        </oga:settings>
                                        <oga:meta x="50" y="830"/>
                                    </extensions>
                                </node>
                                <node id="42a77b39964a8d" name="Object#toString()" type="class:ca.phon.opgraph.nodes.reflect.MethodNode">
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="ca.phon.opgraph.nodes.reflect.MethodNode.classMember">
                                                <![CDATA[toString()]]>
                                            </oga:property>
                                            <oga:property key="ca.phon.opgraph.nodes.reflect.MethodNode.declaredClass">
                                                <![CDATA[java.lang.Object]]>
                                            </oga:property>
                                        </oga:settings>
                                        <oga:meta x="220" y="71"/>
                                    </extensions>
                                </node>
                                <ogcn:macro id="e975fbbeda7e43e5" name="Get Table for Session" type="ca.phon.opgraph.nodes.general.MacroNode">
                                    <graph id="1154ee77">
                                        <node id="d234477ad5654d9d" name="Map" type="class:ca.phon.opgraph.nodes.reflect.ObjectNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.phon.opgraph.nodes.reflect.ObjectNode.declaredClass">
                                                        <![CDATA[java.util.Map]]>
                                                    </oga:property>
                                                </oga:settings>
                                                <oga:meta x="244" y="68"/>
                                            </extensions>
                                        </node>
                                        <node id="d14a1f9e960d4c97" name="Map#get(Object)" type="class:ca.phon.opgraph.nodes.reflect.MethodNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.phon.opgraph.nodes.reflect.MethodNode.classMember">
                                                        <![CDATA[get(java.lang.Object)]]>
                                                    </oga:property>
                                                    <oga:property key="ca.phon.opgraph.nodes.reflect.MethodNode.declaredClass">
                                                        <![CDATA[java.util.Map]]>
                                                    </oga:property>
                                                </oga:settings>
                                                <oga:meta x="401" y="69"/>
                                            </extensions>
                                        </node>
                                        <node id="48ac66303f8f417a" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                                            <output name="exists" type="java.lang.Boolean">does table exist</output>
                                            <output name="table" type="ca.phon.query.report.datasource.DefaultTableDataSource">table if exists, undefined otherwise</output>
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="__script">
                                                        <![CDATA[
// setup input/output fields
function init(inputFields, outputFields) {
	inputFields.add("table", "");
	outputFields.add("exists", "does table exist", false, java.lang.Boolean);
	outputFields.add("table", "table if exists, undefined otherwise", false, Packages.ca.phon.query.report.datasource.DefaultTableDataSource);
}

function run(context) {
	var tableExists =
		(context.containsKey("table") && context.get("table") != null);
	context.put("exists", tableExists);
	context.put("table", context.get("table"));
}
]]>
                                                    </oga:property>
                                                </oga:settings>
                                                <oga:meta x="555" y="73"/>
                                            </extensions>
                                        </node>
                                        <link dest="d14a1f9e960d4c97" destField="obj" source="d234477ad5654d9d" sourceField="obj"/>
                                        <link dest="48ac66303f8f417a" destField="table" source="d14a1f9e960d4c97" sourceField="value"/>
                                    </graph>
                                    <ogcn:published_input field="arg1" name="sessionName" ref="d14a1f9e960d4c97"/>
                                    <ogcn:published_input field="obj" name="tableMap" ref="d234477ad5654d9d"/>
                                    <ogcn:published_output field="exists" name="exists" ref="48ac66303f8f417a"/>
                                    <ogcn:published_output field="table" name="table" ref="48ac66303f8f417a"/>
                                    <extensions>
                                        <oga:meta x="413" y="110"/>
                                    </extensions>
                                </ogcn:macro>
                                <ogcn:macro id="b69948d154c541d6" name="If Speaker has Results for Session" type="ca.phon.opgraph.nodes.general.MacroNode">
                                    <graph id="75ae9d16">
                                        <node id="a9c39d06bfed41ac" name="DefaultTableDataSource" type="class:ca.phon.opgraph.nodes.reflect.ObjectNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="contextKey"/>
                                                    <oga:property key="ca.phon.opgraph.nodes.reflect.ObjectNode.declaredClass">
                                                        <![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]>
                                                    </oga:property>
                                                </oga:settings>
                                                <oga:meta x="57" y="208"/>
                                            </extensions>
                                        </node>
                                        <node id="5c64819b8b724640" name="Participant" type="class:ca.phon.opgraph.nodes.reflect.ObjectNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.phon.opgraph.nodes.reflect.ObjectNode.declaredClass">
                                                        <![CDATA[ca.phon.session.Participant]]>
                                                    </oga:property>
                                                </oga:settings>
                                                <oga:meta x="56" y="369"/>
                                            </extensions>
                                        </node>
                                        <node id="99e964bac10348a2" name="Session Name" type="class:ca.phon.opgraph.nodes.reflect.ObjectNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="contextKey"/>
                                                    <oga:property key="ca.phon.opgraph.nodes.reflect.ObjectNode.declaredClass">
                                                        <![CDATA[java.lang.Object]]>
                                                    </oga:property>
                                                </oga:settings>
                                                <oga:meta x="57" y="691"/>
                                            </extensions>
                                        </node>
                                        <node id="95be2ea7ea044709" name="Summary Table" type="class:ca.phon.opgraph.nodes.reflect.ObjectNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.phon.opgraph.nodes.reflect.ObjectNode.declaredClass">
                                                        <![CDATA[ca.phon.query.report.datasource.TableDataSource]]>
                                                    </oga:property>
                                                </oga:settings>
                                                <oga:meta x="60" y="791"/>
                                            </extensions>
                                        </node>
                                        <node id="b125081883c945e6" name="Breakdown Node" type="class:ca.phon.opgraph.nodes.reflect.ObjectNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="contextKey"/>
                                                    <oga:property key="ca.phon.opgraph.nodes.reflect.ObjectNode.declaredClass">
                                                        <![CDATA[ca.phon.app.opgraph.report.tree.ReportTreeNode]]>
                                                    </oga:property>
                                                </oga:settings>
                                                <oga:meta x="52" y="927"/>
                                            </extensions>
                                        </node>
                                        <node id="1c911b50" name="Object#toString()" type="class:ca.phon.opgraph.nodes.reflect.MethodNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.phon.opgraph.nodes.reflect.MethodNode.classMember">
                                                        <![CDATA[toString()]]>
                                                    </oga:property>
                                                    <oga:property key="ca.phon.opgraph.nodes.reflect.MethodNode.declaredClass">
                                                        <![CDATA[java.lang.Object]]>
                                                    </oga:property>
                                                </oga:settings>
                                                <oga:meta x="347" y="327"/>
                                            </extensions>
                                        </node>
                                        <node id="954b15165b454e93" name="Add row to Session Summary" type="class:ca.phon.app.opgraph.nodes.table.TableScriptNode">
                                            <input name="speaker" optional="false">speaker</input>
                                            <input name="sessionPath" optional="false">session</input>
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="__script">
                                                        <![CDATA[function init(inputs, outputs) {
	inputs.add("speaker", "speaker", false, false);
	inputs.add("sessionPath", "session", false, false);
}

function tableOp(context, table) {
	var row = [];

	var speaker = context.get("speaker");
	var sessionPath = context.get("sessionPath");

	var history = speaker.getExtension(Packages.ca.phon.project.ParticipantHistory);

	row[0] = sessionPath;
	row[1] = speaker.role;
	row[2] = history.getAgeForSession(sessionPath);

	table.addRow(row);
}
]]>
                                                    </oga:property>
                                                </oga:settings>
                                                <oga:meta x="517" y="517"/>
                                            </extensions>
                                        </node>
                                        <node id="e9f7e5a61080413a" type="class:ca.phon.app.opgraph.nodes.report.TableSectionNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.phon.app.opgraph.nodes.report.TableSectionNode.includeColumns">
                                                        <![CDATA[false]]>
                                                    </oga:property>
                                                    <oga:property key="ca.phon.app.opgraph.nodes.report.TableSectionNode.columns">
                                                        <![CDATA[Date
Group #
Tier
Range
Result]]>
                                                    </oga:property>
                                                </oga:settings>
                                                <oga:meta x="540" y="275">
                                                    <oga:default for="sectionName" type="java.lang.String">All results</oga:default>
                                                </oga:meta>
                                            </extensions>
                                        </node>
                                        <link dest="954b15165b454e93" destField="sessionPath" source="99e964bac10348a2" sourceField="obj"/>
                                        <link dest="954b15165b454e93" destField="table" source="95be2ea7ea044709" sourceField="obj"/>
                                        <link dest="954b15165b454e93" destField="speaker" source="5c64819b8b724640" sourceField="obj"/>
                                        <link dest="e9f7e5a61080413a" destField="table" source="a9c39d06bfed41ac" sourceField="obj"/>
                                        <link dest="1c911b50" destField="obj" source="99e964bac10348a2" sourceField="obj"/>
                                        <link dest="e9f7e5a61080413a" destField="sectionName" source="1c911b50" sourceField="value"/>
                                        <link dest="e9f7e5a61080413a" destField="parent" source="b125081883c945e6" sourceField="obj"/>
                                        <extensions>
                                            <oga:notes>
                                                <oga:note color="0xffff96" height="989" title="Published Inputs" width="282" x="36" y="150"/>
                                            </oga:notes>
                                            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                        </extensions>
                                    </graph>
                                    <ogcn:published_input field="obj" name="table" ref="a9c39d06bfed41ac"/>
                                    <ogcn:published_input field="obj" name="speaker" ref="5c64819b8b724640"/>
                                    <ogcn:published_input field="obj" name="sessionName" ref="99e964bac10348a2"/>
                                    <ogcn:published_input field="obj" name="summaryTable" ref="95be2ea7ea044709"/>
                                    <ogcn:published_input field="obj" name="reportNode" ref="b125081883c945e6"/>
                                    <extensions>
                                        <oga:meta x="710" y="99"/>
                                    </extensions>
                                </ogcn:macro>
                                <link dest="e975fbbeda7e43e5" destField="tableMap" source="1bb6ef34c9bb456f" sourceField="obj"/>
                                <link dest="b69948d154c541d6" destField="table" source="e975fbbeda7e43e5" sourceField="table"/>
                                <link dest="b69948d154c541d6" destField="speaker" source="8ae9ec35ce0047f9" sourceField="obj"/>
                                <link dest="b69948d154c541d6" destField="sessionName" source="97d373bc8c294e5a" sourceField="obj"/>
                                <link dest="b69948d154c541d6" destField="enabled" source="e975fbbeda7e43e5" sourceField="exists"/>
                                <link dest="42a77b39964a8d" destField="obj" source="97d373bc8c294e5a" sourceField="obj"/>
                                <link dest="e975fbbeda7e43e5" destField="sessionName" source="42a77b39964a8d" sourceField="value"/>
                                <link dest="b69948d154c541d6" destField="summaryTable" source="291179ea9dbb427a" sourceField="obj"/>
                                <link dest="b69948d154c541d6" destField="reportNode" source="b8a81dbf1f9b4e5f" sourceField="obj"/>
                                <extensions>
                                    <oga:notes>
                                        <oga:note color="0xffff96" height="863" title="Published Inputs" width="308" x="33" y="200"/>
                                    </oga:notes>
                                    <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                </extensions>
                            </graph>
                            <ogcn:published_input field="obj" name="tableMap" ref="1bb6ef34c9bb456f"/>
                            <ogcn:published_input field="obj" name="speaker" ref="8ae9ec35ce0047f9"/>
                            <ogcn:published_input field="obj" name="summaryTable" ref="291179ea9dbb427a"/>
                            <ogcn:published_input field="obj" name="reportNode" ref="b8a81dbf1f9b4e5f"/>
                            <extensions>
                                <oga:settings>
                                    <oga:property key="ca.phon.opgraph.nodes.reflect.IterableClassNode.className">
                                        <![CDATA[java.util.ArrayList]]>
                                    </oga:property>
                                </oga:settings>
                                <oga:meta x="763" y="525"/>
                            </extensions>
                        </ogcn:macro>
                        <link dest="89453e18295c48f6" destField="table" source="8a12d372d81c4037" sourceField="obj"/>
                        <link dest="ab7a1317d88e4f41" destField="collection" source="38592bb9059b4c53" sourceField="obj"/>
                        <link dest="ab7a1317d88e4f41" destField="tableMap" source="89453e18295c48f6" sourceField="tableMap"/>
                        <link dest="ab7a1317d88e4f41" destField="speaker" source="abfaea18a5664f81" sourceField="obj"/>
                        <link dest="ab7a1317d88e4f41" destField="summaryTable" source="733b808046ea4778" sourceField="obj"/>
                        <link dest="169771da" destField="table" source="6d09656b" sourceField="table"/>
                        <link dest="6d09656b" destField="table" source="8a12d372d81c4037" sourceField="obj"/>
                        <link dest="5e5a58c7" destField="table" source="169771da" sourceField="table"/>
                        <link dest="5e5a58c7" destField="parent" source="f940f9828e9c41e5" sourceField="obj"/>
                        <link dest="7dd5e3f6" destField="obj" source="abfaea18a5664f81" sourceField="obj"/>
                        <link dest="5e5a58c7" destField="sectionName" source="7dd5e3f6" sourceField="value"/>
                        <link dest="5d3c7dbbf65e498e" destField="sectionName" source="7dd5e3f6" sourceField="value"/>
                        <link dest="5d3c7dbbf65e498e" destField="parent" source="6dc5f46142f54ed1" sourceField="obj"/>
                        <link dest="ab7a1317d88e4f41" destField="reportNode" source="5d3c7dbbf65e498e" sourceField="section"/>
                        <extensions>
                            <oga:notes>
                                <oga:note color="0xffff96" height="1267" title="Published Inputs" width="339" x="54" y="167"/>
                            </oga:notes>
                            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                        </extensions>
                    </graph>
                    <ogcn:published_input field="obj" name="table" ref="8a12d372d81c4037"/>
                    <ogcn:published_input field="obj" name="selectedSessions" ref="38592bb9059b4c53"/>
                    <ogcn:published_input field="obj" name="speaker" ref="abfaea18a5664f81"/>
                    <ogcn:published_input field="obj" name="summaryTable" ref="733b808046ea4778"/>
                    <ogcn:published_input field="obj" name="breakdownNode" ref="6dc5f46142f54ed1"/>
                    <ogcn:published_input field="obj" name="aggregateNode" ref="f940f9828e9c41e5"/>
                    <ogcn:published_output field="collection" name="collection" ref="ab7a1317d88e4f41"/>
                    <extensions>
                        <oga:meta x="784" y="127"/>
                    </extensions>
                </ogcn:macro>
                <node id="9809266c0d624075" type="class:ca.phon.opgraph.nodes.general.TextNode">
                    <extensions>
                        <oga:settings>
                            <oga:property key="ca.phon.opgraph.nodes.general.TextNode.text">
                                <![CDATA[%s]]>
                            </oga:property>
                        </oga:settings>
                        <oga:meta x="807" y="419"/>
                    </extensions>
                </node>
                <node id="c48a6552534a46e1" type="class:ca.phon.app.opgraph.nodes.report.TableSectionNode">
                    <extensions>
                        <oga:settings>
                            <oga:property key="ca.phon.app.opgraph.nodes.report.TableSectionNode.includeColumns">
                                <![CDATA[true]]>
                            </oga:property>
                            <oga:property key="ca.phon.app.opgraph.nodes.report.TableSectionNode.columns"/>
                        </oga:settings>
                        <oga:meta x="1013" y="390"/>
                    </extensions>
                </node>
                <link dest="d2cea4f3206f4c4b" destField="speaker" source="b69e3d7b316b4870" sourceField="obj"/>
                <link dest="b69e3d7b316b4870" destField="obj" source="9a9ef9dcda0c4dc2" sourceField="obj"/>
                <link dest="d2cea4f3206f4c4b" destField="tableMap" source="2ebecb1361134530" sourceField="obj"/>
                <link dest="c4d2a4fcd49845f4" destField="table" source="d2cea4f3206f4c4b" sourceField="table"/>
                <link dest="c4d2a4fcd49845f4" destField="enabled" source="d2cea4f3206f4c4b" sourceField="exists"/>
                <link dest="c4d2a4fcd49845f4" destField="selectedSessions" source="93d5f4e025f543ac" sourceField="obj"/>
                <link dest="c4d2a4fcd49845f4" destField="speaker" source="b69e3d7b316b4870" sourceField="obj"/>
                <link dest="c4d2a4fcd49845f4" destField="summaryTable" source="6d063ac0d1504227" sourceField="table"/>
                <link dest="c48a6552534a46e1" destField="sectionName" source="9809266c0d624075" sourceField="value"/>
                <link dest="9809266c0d624075" destField="objects" source="79c402e97655424c" sourceField="array"/>
                <link dest="79c402e97655424c" destField="object1" source="b69e3d7b316b4870" sourceField="obj"/>
                <link dest="c48a6552534a46e1" destField="enabled" source="c4d2a4fcd49845f4" sourceField="finished"/>
                <link dest="c48a6552534a46e1" destField="table" source="6d063ac0d1504227" sourceField="table"/>
                <link dest="c48a6552534a46e1" destField="parent" source="8b42aa849bf5412b" sourceField="obj"/>
                <link dest="c4d2a4fcd49845f4" destField="breakdownNode" source="e0581e5eaa944b44" sourceField="obj"/>
                <link dest="c4d2a4fcd49845f4" destField="aggregateNode" source="e1465be95d264a93" sourceField="obj"/>
                <extensions>
                    <oga:notes>
                        <oga:note color="0xffff96" height="937" title="Published Inputs" width="317" x="40" y="150"/>
                    </oga:notes>
                    <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                </extensions>
            </graph>
            <ogcn:published_input field="obj" name="tableMap" ref="2ebecb1361134530"/>
            <ogcn:published_input field="obj" name="selectedSessions" ref="93d5f4e025f543ac"/>
            <ogcn:published_input field="obj" name="summaryNode" ref="8b42aa849bf5412b"/>
            <ogcn:published_input field="obj" name="breakdownNode" ref="e0581e5eaa944b44"/>
            <ogcn:published_input field="obj" name="aggregateNode" ref="e1465be95d264a93"/>
            <extensions>
                <oga:settings>
                    <oga:property key="ca.phon.opgraph.nodes.reflect.IterableClassNode.className">
                        <![CDATA[java.util.ArrayList]]>
                    </oga:property>
                </oga:settings>
                <oga:meta x="1038" y="25"/>
            </extensions>
        </ogcn:macro>
        <link dest="3cb83fde" destField="project" source="4676e9d" sourceField="obj"/>
        <link dest="3cb83fde" destField="sessions" source="18a7baf2" sourceField="obj"/>
        <link dest="3cb83fde" destField="parameters" source="68bdcb49" sourceField="parameters"/>
        <link dest="a1d432f0ac4e4eb2" destField="table" source="1795f107d404aad" sourceField="table"/>
        <link dest="ca3489d5c7bf4c66" destField="tableMap" source="a1d432f0ac4e4eb2" sourceField="tableMap"/>
        <link dest="1795f107d404aad" destField="project" source="3cb83fde" sourceField="project"/>
        <link dest="1795f107d404aad" destField="results" source="3cb83fde" sourceField="results"/>
        <link dest="ca3489d5c7bf4c66" destField="selectedSessions" source="18a7baf2" sourceField="obj"/>
        <link dest="ca3489d5c7bf4c66" destField="collection" source="7b37d313" sourceField="obj"/>
        <link dest="ebf04e3dbfe84a6e" destField="reportName" source="91cc301c03a548b4" sourceField="value"/>
        <link dest="19e7d505dabf4cf4" destField="parent" source="ebf04e3dbfe84a6e" sourceField="root"/>
        <link dest="c0ad0c3a615745ac" destField="parent" source="ebf04e3dbfe84a6e" sourceField="root"/>
        <link dest="911bb264ea0e421a" destField="parent" source="ebf04e3dbfe84a6e" sourceField="root"/>
        <link dest="323fff184f4f441d" destField="parent" source="ebf04e3dbfe84a6e" sourceField="root"/>
        <link dest="91cc301c03a548b4" destField="parameters" source="68bdcb49" sourceField="parameters"/>
        <link dest="c7840bb8925648c0" destField="script" source="68bdcb49" sourceField="script"/>
        <link dest="19e7d505dabf4cf4" destField="text" source="c7840bb8925648c0" sourceField="text"/>
        <link dest="ca3489d5c7bf4c66" destField="summaryNode" source="c0ad0c3a615745ac" sourceField="section"/>
        <link dest="ca3489d5c7bf4c66" destField="aggregateNode" source="911bb264ea0e421a" sourceField="section"/>
        <link dest="ca3489d5c7bf4c66" destField="breakdownNode" source="323fff184f4f441d" sourceField="section"/>
        <extensions>
            <opqry:nodewizard type="ca.phon.app.opgraph.analysis.AnalysisWizardExtension">
                <opqry:info format="html" title="Phone Clusters">
                    <opqry:message/>
                </opqry:info>
                <opqry:node ref="68bdcb49" showAsStep="true">
                    <opqry:info format="html" title="Parameters">
                        <opqry:message/>
                    </opqry:info>
                </opqry:node>
                <opqry:report-template name="Report Prefix"/>
                <opqry:report-template name="Report Suffix"/>
            </opqry:nodewizard>
            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
        </extensions>
    </graph>
</opgraph>
