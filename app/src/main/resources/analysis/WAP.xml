<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<opgraph xmlns="http://gedge.ca/ns/opgraph" xmlns:nes="https://www.phon.ca/ns/node_editor" xmlns:oga="http://gedge.ca/ns/opgraph-app" xmlns:ogcn="http://gedge.ca/ns/opgraph-common-nodes" xmlns:opqry="https://phon.ca/ns/opgraph_query" xmlns:qry="http://phon.ling.mun.ca/ns/query">
    <graph id="root">
        <node id="35a0fbb5" name="Project" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
            <extensions>
                <oga:settings>
                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.project.Project]]></oga:property>
                    <oga:property key="contextKey"><![CDATA[_project]]></oga:property>
                </oga:settings>
                <oga:meta x="15" y="14"/>
            </extensions>
        </node>
        <node id="6420582b" name="Selected Sessions" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
            <extensions>
                <oga:settings>
                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.util.ArrayList]]></oga:property>
                    <oga:property key="contextKey"><![CDATA[_selectedSessions]]></oga:property>
                </oga:settings>
                <oga:meta x="15" y="236"/>
            </extensions>
        </node>
        <node id="338df44a" name="Selected Participants" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
            <extensions>
                <oga:settings>
                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.util.ArrayList]]></oga:property>
                    <oga:property key="contextKey"><![CDATA[_selectedParticipants]]></oga:property>
                </oga:settings>
                <oga:meta x="15" y="331"/>
            </extensions>
        </node>
        <node id="43d39e9b67384156" name="Parameters" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
            <extensions>
                <oga:settings>
                    <oga:property key="__script"><![CDATA[var reportTitleParamInfo = {
	"id": "reportTitle",
	"title": "Report Title",
	"def": "Report",
	"prompt": "Enter report title"
};
var reportTitleParam;
var reportTitle = reportTitleParamInfo.def;

function setup_params(params) {
	reportTitleParam = new StringScriptParam(
			reportTitleParamInfo.id,
			reportTitleParamInfo.title,
			reportTitleParamInfo.def);
     reportTitleParam.setPrompt(reportTitleParamInfo.prompt);
	params.add(reportTitleParam);
}
]]></oga:property>
                    <oga:property key="reportTitle"><![CDATA[Word-level Analysis of Polysyllables]]></oga:property>
                </oga:settings>
                <oga:meta x="19" y="437"/>
            </extensions>
        </node>
        <node id="40e266e4" type="class:ca.phon.app.opgraph.nodes.report.NewReportNode">
            <extensions>
                <oga:settings>
                    <oga:property key="ca.phon.app.opgraph.nodes.report.NewReportNode.setGlobalReport"><![CDATA[false]]></oga:property>
                </oga:settings>
                <oga:meta x="33" y="549"/>
            </extensions>
        </node>
        <opqry:queryNode id="7ca6b2ef" name="Query : Data Tiers" type="ca.phon.app.opgraph.nodes.query.QueryNode">
            <qry:query xmlns="http://phon.ling.mun.ca/ns/query" date="2017-12-20T11:24:50.723-03:30" name="Data Tiers" uuid="76442552-835c-4fa1-bdf8-f5e74468e26c">
                <script>
                    <url ref="Data Tiers" rel="stock"/>
                    <param id="filters.alignedWord.patternFilter.filter">AA+</param>
                    <param id="filters.alignedWord.patternFilter.filterType">Stress pattern</param>
                    <param id="filters.alignedWord.tier">IPA Target</param>
                    <param id="filters.primary.patternFilter.filter">.+</param>
                    <param id="filters.primary.patternFilter.filterType">Regular expression</param>
                    <param id="filters.primary.tier">Orthography</param>
                    <param id="filters.searchBy.searchBy">Word</param>
                    <param id="filters.word.searchByWord">true</param>
                    <param id="filters.wordTiers.tiers">Target Syllabification, Actual Syllabification, Phone Alignment</param>
                </script>
            </qry:query>
            <extensions>
                <oga:settings/>
                <oga:meta x="399" y="105"/>
            </extensions>
        </opqry:queryNode>
        <ogcn:macro id="b7c53c9330914507" name="Get Report Title" type="ca.gedge.opgraph.nodes.general.MacroNode">
            <graph id="4f2d906c">
                <node id="40d46ee05cb1462c" name="String#&lt;init&gt;(String)" type="class:ca.gedge.opgraph.nodes.reflect.ConstructorNode">
                    <extensions>
                        <oga:settings>
                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.classMember"><![CDATA[<init>(java.lang.String)]]></oga:property>
                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.declaredClass"><![CDATA[java.lang.String]]></oga:property>
                        </oga:settings>
                        <oga:meta x="15" y="15">
                            <oga:default for="arg1" type="java.lang.String">reportTitle</oga:default>
                        </oga:meta>
                    </extensions>
                </node>
                <node id="a8de832c83754f93" name="Map#get(Object)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                    <extensions>
                        <oga:settings>
                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[get(java.lang.Object)]]></oga:property>
                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.util.Map]]></oga:property>
                        </oga:settings>
                        <oga:meta x="215" y="15"/>
                    </extensions>
                </node>
                <node id="5fba0bae341f4e52" name="Object#toString()" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                    <extensions>
                        <oga:settings>
                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[toString()]]></oga:property>
                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.Object]]></oga:property>
                        </oga:settings>
                        <oga:meta x="392" y="15"/>
                    </extensions>
                </node>
                <link dest="a8de832c83754f93" destField="arg1" source="40d46ee05cb1462c" sourceField="value"/>
                <link dest="5fba0bae341f4e52" destField="obj" source="a8de832c83754f93" sourceField="value"/>
            </graph>
            <ogcn:published_input field="obj" name="parameters" ref="a8de832c83754f93"/>
            <ogcn:published_output field="value" name="reportTitle" ref="5fba0bae341f4e52"/>
            <extensions>
                <oga:meta x="246" y="436"/>
            </extensions>
        </ogcn:macro>
        <node id="40612d0c" type="class:ca.phon.app.opgraph.nodes.report.ReportSectionHeaderNode">
            <extensions>
                <oga:meta x="478" y="437"/>
            </extensions>
        </node>
        <ogcn:macro id="7e7f6d0b48264831" name="Report" type="ca.gedge.opgraph.nodes.general.MacroNode">
            <graph id="94ac1ee">
                <node id="2564dd40d5ce4021" name="project" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                    <extensions>
                        <oga:settings>
                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.project.Project]]></oga:property>
                        </oga:settings>
                        <oga:meta x="42" y="152"/>
                    </extensions>
                </node>
                <node id="a23f99c423d64c49" name="results" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                    <extensions>
                        <oga:settings>
                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[[Lca.phon.query.db.ResultSet;]]></oga:property>
                        </oga:settings>
                        <oga:meta x="42" y="373"/>
                    </extensions>
                </node>
                <node id="a12ca1eed6584c87" name="selectedSessions" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                    <extensions>
                        <oga:settings>
                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.util.ArrayList]]></oga:property>
                        </oga:settings>
                        <oga:meta x="42" y="468"/>
                    </extensions>
                </node>
                <node id="9a6b0aacb31f456e" name="selected participants" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                    <extensions>
                        <oga:settings>
                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.util.ArrayList]]></oga:property>
                        </oga:settings>
                        <oga:meta x="42" y="563"/>
                    </extensions>
                </node>
                <node id="76dc324150b34376" name="Setup Segmental Totals" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                    <output name="totals" type="java.lang.Object"/>
                    <extensions>
                        <oga:settings>
                            <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	outputs.add("totals", "", false, java.lang.Object);
}

function run(context) {
	var totals = {
		"onset": {
			"target": { "count": 0, "positions": [] },
			"correct": { "count": 0, "positions": [] },
			"substitution": { "count": 0, "positions": [] },
			"deletion": { "count": 0, "positions": [] },
			"distortion": { "count": 0, "positions": [] },
			"epenthesis": { "count": 0, "positions": [] }
		},
		"nucleus": {
			"target": { "count": 0, "positions": [] },
			"correct": { "count": 0, "positions": [] },
			"substitution": { "count": 0, "positions": [] },
			"deletion": { "count": 0, "positions": [] },
			"distortion": { "count": 0, "positions": [] },
			"epenthesis": { "count": 0, "positions": [] }
		},
		"coda": {
			"target": { "count": 0, "positions": [] },
			"correct": { "count": 0, "positions": [] },
			"substitution": { "count": 0, "positions": [] },
			"deletion": { "count": 0, "positions": [] },
			"distortion": { "count": 0, "positions": [] },
			"epenthesis": { "count": 0, "positions": [] }
		},
		"unknown": {
			"target": { "count": 0, "positions": [] },
			"correct": { "count": 0, "positions": [] },
			"substitution": { "count": 0, "positions": [] },
			"deletion": { "count": 0, "positions": [] },
			"distortion": { "count": 0, "positions": [] },
			"epenthesis": { "count": 0, "positions": [] }
		}
	};

	context.put("totals", totals);
}
]]></oga:property>
                        </oga:settings>
                        <oga:meta x="747" y="617"/>
                    </extensions>
                </node>
                <node id="2fef4098" name="ReportTreeNode" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                    <extensions>
                        <oga:settings>
                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.app.opgraph.report.tree.ReportTreeNode]]></oga:property>
                        </oga:settings>
                        <oga:meta x="38" y="677"/>
                    </extensions>
                </node>
                <node id="e7eb0f6277c94cc7" type="class:ca.phon.app.opgraph.nodes.table.ResultsToTableNode">
                    <extensions>
                        <oga:settings>
                            <oga:property key="includeMetadata"><![CDATA[true]]></oga:property>
                            <oga:property key="includeTierInfo"><![CDATA[true]]></oga:property>
                            <oga:property key="includeSpeakerInfo"><![CDATA[true]]></oga:property>
                            <oga:property key="includeSessionInfo"><![CDATA[true]]></oga:property>
                        </oga:settings>
                        <oga:meta x="378" y="184"/>
                    </extensions>
                </node>
                <node id="a067a50295fe48ce" name="Split Table by Speaker" type="class:ca.phon.app.opgraph.nodes.table.TableScriptNode">
                    <output name="keySet" type="java.util.Set">Unique values from given column name</output>
                    <output name="tableMap" type="java.util.Map">Map of key -&gt; table values</output>
                    <extensions>
                        <oga:settings>
                            <oga:property key="columnName"><![CDATA[Speaker]]></oga:property>
                            <oga:property key="__script"><![CDATA[/*
 * Phon - An open source tool for research in phonology.
 * Copyright (C) 2005 - 2017, Gregory Hedlund <ghedlund@mun.ca> and Yvan Rose <yrose@mun.ca>
 * Dept of Linguistics, Memorial University <https://phon.ca>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

 /**
  * Split Table.js
  *
  * Script for use with ca.phon.app.opgraph.nodes.table.TableScriptNode
  *
  * Split table based on column name.  Two outputs
  * are produced, a set of keys from the column used in the filter  and a
  * map of key -> table values.
  */

var columnParamInfo = {
	"id": "columnName",
	"title": "Column Name",
	"def": "",
	"prompt": "Enter column name"
}

function setup_params(params) {
	var columnParam = new StringScriptParam(
		columnParamInfo.id,
		columnParamInfo.title,
		columnParamInfo.def);
	columnParam.setPrompt(columnParamInfo.prompt);
	params.add(columnParam);
}

// add custom inputs/outputs here
function init(inputs, outputs) {
	outputs.add("keySet", "Unique values from given column name", false, java.util.Set);
	outputs.add("tableMap", "Map of key -> table values", false, java.util.Map);
}

/*
 * Create a new table with the same schema as the inputTable
 */
function setupTable(inputTable) {
    var table = new DefaultTableDataSource();
    for(c = 0; c < inputTable.columnCount; c++) {
	    var colTitle = inputTable.getColumnTitle(c);
	    table.setColumnTitle(c, colTitle);
	}
	return table;
}

// run operation on table
function tableOp(context, table) {
	// find table column index
	col = table.getColumnIndex(columnName);

	if(col < 0)
		return; // column not found

	var tableMap = new java.util.LinkedHashMap();

	for(row = 0; row < table.rowCount; row++) {
	    // use string value as row key
		var rowKey = Packages.ca.phon.formatter.FormatterUtil.format(table.getValueAt(row, col));

		var keyTable = tableMap.get(rowKey);
		if(keyTable == null) {
		    keyTable = setupTable(table);
		    tableMap.put(rowKey, keyTable);
		}
		keyTable.addRow(table.getRow(row));
	}

	context.put("keySet", tableMap.keySet());
	context.put("tableMap", tableMap);
}
]]></oga:property>
                        </oga:settings>
                        <oga:meta x="581" y="184"/>
                    </extensions>
                </node>
                <ogcn:macro id="4bb42cb62a99463c" name="For Each Participant" type="ca.gedge.opgraph.nodes.reflect.IterableClassNode">
                    <graph id="61512eef">
                        <node id="4579a77279ca4a66" name="Current Object" type="class:ca.gedge.opgraph.nodes.reflect.ContextualItemClassNode">
                            <extensions>
                                <oga:settings>
                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ContextualItemClassNode.key"><![CDATA[currentValue]]></oga:property>
                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ContextualItemClassNode.declaredClass"><![CDATA[java.lang.Object]]></oga:property>
                                </oga:settings>
                                <oga:meta x="48" y="48"/>
                            </extensions>
                        </node>
                        <node id="16d59d355bab4424" name="Table Map" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                            <extensions>
                                <oga:settings>
                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.util.Map]]></oga:property>
                                </oga:settings>
                                <oga:meta x="68" y="208"/>
                            </extensions>
                        </node>
                        <node id="3c9691c6bb004e13" name="Selected Sessions" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                            <extensions>
                                <oga:settings>
                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.util.ArrayList]]></oga:property>
                                    <oga:property key="contextKey"><![CDATA[_selectedSessions]]></oga:property>
                                </oga:settings>
                                <oga:meta x="69" y="310"/>
                            </extensions>
                        </node>
                        <node id="6e8d3cbf56644e64" name="Segmental Totals" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                            <extensions>
                                <oga:settings>
                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.lang.Object]]></oga:property>
                                </oga:settings>
                                <oga:meta x="69" y="424"/>
                            </extensions>
                        </node>
                        <node id="109c1849" name="ReportTreeNode" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                            <extensions>
                                <oga:settings>
                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.app.opgraph.report.tree.ReportTreeNode]]></oga:property>
                                </oga:settings>
                                <oga:meta x="70" y="548"/>
                            </extensions>
                        </node>
                        <node id="7d1055dcc76e435a" name="To Participant Object" type="class:ca.gedge.opgraph.nodes.reflect.ObjectCastNode">
                            <extensions>
                                <oga:settings>
                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectCastNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                </oga:settings>
                                <oga:meta x="224" y="49"/>
                            </extensions>
                        </node>
                        <ogcn:macro id="e8ae4a39fdd74375" name="Get Table of Results For Speaker" type="ca.gedge.opgraph.nodes.general.MacroNode">
                            <graph id="1d6d9a6e">
                                <node id="7a99452f69514e84" name="Object#toString()" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[toString()]]></oga:property>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.Object]]></oga:property>
                                        </oga:settings>
                                        <oga:meta x="105" y="70"/>
                                    </extensions>
                                </node>
                                <node id="2aa78b824a3b47b5" name="Map#get(Object)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[get(java.lang.Object)]]></oga:property>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.util.Map]]></oga:property>
                                        </oga:settings>
                                        <oga:meta x="296" y="73"/>
                                    </extensions>
                                </node>
                                <node id="6d807e2151704bab" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                                    <output name="exists" type="java.lang.Boolean">does table exist</output>
                                    <output name="table" type="ca.phon.query.report.datasource.DefaultTableDataSource">table if exists, undefined otherwise</output>
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="__script"><![CDATA[
// setup input/output fields
function init(inputFields, outputFields) {
	inputFields.add("table", "");
	outputFields.add("exists", "does table exist", false, java.lang.Boolean);
	outputFields.add("table", "table if exists, undefined otherwise", false, Packages.ca.phon.query.report.datasource.DefaultTableDataSource);
}

function run(context) {
	var tableExists =
		(context.containsKey("table") && context.get("table") != null);
	context.put("exists", tableExists);
	context.put("table", context.get("table"));
}
]]></oga:property>
                                        </oga:settings>
                                        <oga:meta x="514" y="94"/>
                                    </extensions>
                                </node>
                                <link dest="2aa78b824a3b47b5" destField="arg1" source="7a99452f69514e84" sourceField="value"/>
                                <link dest="6d807e2151704bab" destField="table" source="2aa78b824a3b47b5" sourceField="value"/>
                                <extensions>
                                    <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                </extensions>
                            </graph>
                            <ogcn:published_input field="obj" name="speaker" ref="7a99452f69514e84"/>
                            <ogcn:published_input field="obj" name="tableMap" ref="2aa78b824a3b47b5"/>
                            <ogcn:published_output field="exists" name="exists" ref="6d807e2151704bab"/>
                            <ogcn:published_output field="table" name="table" ref="6d807e2151704bab"/>
                            <extensions>
                                <oga:meta x="506" y="126"/>
                            </extensions>
                        </ogcn:macro>
                        <ogcn:macro id="e9d3beb84fbe42d4" name="If Speaker has Results" type="ca.gedge.opgraph.nodes.general.MacroNode">
                            <graph id="2b2af7d2">
                                <node id="fda3b374aa2e4b57" name="Table" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                        </oga:settings>
                                        <oga:meta x="100" y="177"/>
                                    </extensions>
                                </node>
                                <node id="a1995dcea18b4ba9" name="Selected Sessions" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.util.ArrayList]]></oga:property>
                                            <oga:property key="contextKey"><![CDATA[_selectedSessions]]></oga:property>
                                        </oga:settings>
                                        <oga:meta x="109" y="327"/>
                                    </extensions>
                                </node>
                                <node id="32b10bbefcb14fb6" name="Participant" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                        </oga:settings>
                                        <oga:meta x="101" y="443"/>
                                    </extensions>
                                </node>
                                <node id="57b2fd38a4c54ca8" name="Setup Segmental Totals" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                                    <output name="totals" type="java.lang.Object"/>
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	outputs.add("totals", "", false, java.lang.Object);
}

function run(context) {
	var totals = {
		"onset": {
			"target": { "count": 0, "positions": [] },
			"correct": { "count": 0, "positions": [] },
			"substitution": { "count": 0, "positions": [] },
			"deletion": { "count": 0, "positions": [] },
			"distortion": { "count": 0, "positions": [] },
			"epenthesis": { "count": 0, "positions": [] }
		},
		"nucleus": {
			"target": { "count": 0, "positions": [] },
			"correct": { "count": 0, "positions": [] },
			"substitution": { "count": 0, "positions": [] },
			"deletion": { "count": 0, "positions": [] },
			"distortion": { "count": 0, "positions": [] },
			"epenthesis": { "count": 0, "positions": [] }
		},
		"coda": {
			"target": { "count": 0, "positions": [] },
			"correct": { "count": 0, "positions": [] },
			"substitution": { "count": 0, "positions": [] },
			"deletion": { "count": 0, "positions": [] },
			"distortion": { "count": 0, "positions": [] },
			"epenthesis": { "count": 0, "positions": [] }
		},
		"unknown": {
			"target": { "count": 0, "positions": [] },
			"correct": { "count": 0, "positions": [] },
			"substitution": { "count": 0, "positions": [] },
			"deletion": { "count": 0, "positions": [] },
			"distortion": { "count": 0, "positions": [] },
			"epenthesis": { "count": 0, "positions": [] }
		}
	};

	context.put("totals", totals);
}
]]></oga:property>
                                        </oga:settings>
                                        <oga:meta x="819" y="667"/>
                                    </extensions>
                                </node>
                                <node id="5db72372" name="ReportTreeNode" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.app.opgraph.report.tree.ReportTreeNode]]></oga:property>
                                        </oga:settings>
                                        <oga:meta x="81" y="767"/>
                                    </extensions>
                                </node>
                                <node id="923b1235cde247a8" name="Split Table by Session" type="class:ca.phon.app.opgraph.nodes.table.TableScriptNode">
                                    <output name="keySet" type="java.util.Set">Unique values from given column name</output>
                                    <output name="tableMap" type="java.util.Map">Map of key -&gt; table values</output>
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="columnName"><![CDATA[Session]]></oga:property>
                                            <oga:property key="__script"><![CDATA[/*
 * Phon - An open source tool for research in phonology.
 * Copyright (C) 2005 - 2017, Gregory Hedlund <ghedlund@mun.ca> and Yvan Rose <yrose@mun.ca>
 * Dept of Linguistics, Memorial University <https://phon.ca>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

 /**
  * Split Table.js
  *
  * Script for use with ca.phon.app.opgraph.nodes.table.TableScriptNode
  *
  * Split table based on column name.  Two outputs
  * are produced, a set of keys from the column used in the filter  and a
  * map of key -> table values.
  */

var columnParamInfo = {
	"id": "columnName",
	"title": "Column Name",
	"def": "",
	"prompt": "Enter column name"
}

function setup_params(params) {
	var columnParam = new StringScriptParam(
		columnParamInfo.id,
		columnParamInfo.title,
		columnParamInfo.def);
	columnParam.setPrompt(columnParamInfo.prompt);
	params.add(columnParam);
}

// add custom inputs/outputs here
function init(inputs, outputs) {
	outputs.add("keySet", "Unique values from given column name", false, java.util.Set);
	outputs.add("tableMap", "Map of key -> table values", false, java.util.Map);
}

/*
 * Create a new table with the same schema as the inputTable
 */
function setupTable(inputTable) {
    var table = new DefaultTableDataSource();
    for(c = 0; c < inputTable.columnCount; c++) {
	    var colTitle = inputTable.getColumnTitle(c);
	    table.setColumnTitle(c, colTitle);
	}
	return table;
}

// run operation on table
function tableOp(context, table) {
	// find table column index
	col = table.getColumnIndex(columnName);

	if(col < 0)
		return; // column not found

	var tableMap = new java.util.LinkedHashMap();

	for(row = 0; row < table.rowCount; row++) {
	    // use string value as row key
		var rowKey = Packages.ca.phon.formatter.FormatterUtil.format(table.getValueAt(row, col));

		var keyTable = tableMap.get(rowKey);
		if(keyTable == null) {
		    keyTable = setupTable(table);
		    tableMap.put(rowKey, keyTable);
		}
		keyTable.addRow(table.getRow(row));
	}

	context.put("keySet", tableMap.keySet());
	context.put("tableMap", tableMap);
}
]]></oga:property>
                                        </oga:settings>
                                        <oga:meta x="427" y="287"/>
                                    </extensions>
                                </node>
                                <node id="66eabc39" name="Object#toString()" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[toString()]]></oga:property>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.Object]]></oga:property>
                                        </oga:settings>
                                        <oga:meta x="455" y="459"/>
                                    </extensions>
                                </node>
                                <node id="15e52ca6" name="Setup Buffer Name" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                                    <input name="speaker" optional="false"/>
                                    <output name="bufferName" type="java.lang.String"/>
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	inputs.add("speaker", "", false, false);

	outputs.add("bufferName", "", false, java.lang.String);
}

function run(context) {
	var speaker = context.get("speaker");

	var bufferName = "Segmental Totals_" + speaker;
	context.put("bufferName", bufferName);
}
]]></oga:property>
                                        </oga:settings>
                                        <oga:meta x="889" y="799"/>
                                    </extensions>
                                </node>
                                <node id="6ced59c7" type="class:ca.phon.app.opgraph.nodes.report.ReportSectionHeaderNode">
                                    <extensions>
                                        <oga:meta x="646" y="437"/>
                                    </extensions>
                                </node>
                                <ogcn:macro id="cd529cc9bedf4ecc" name="For Each Session" type="ca.gedge.opgraph.nodes.reflect.IterableClassNode">
                                    <graph id="7da36637">
                                        <node id="9cd592ba93e14241" name="Session Name" type="class:ca.gedge.opgraph.nodes.reflect.ContextualItemClassNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ContextualItemClassNode.key"><![CDATA[currentValue]]></oga:property>
                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ContextualItemClassNode.declaredClass"><![CDATA[java.lang.Object]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="46" y="66"/>
                                            </extensions>
                                        </node>
                                        <node id="22103902a02f452c" name="Table Map" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.util.Map]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="68" y="213"/>
                                            </extensions>
                                        </node>
                                        <node id="2cde07591d49421f" name="Participant" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="65" y="316"/>
                                            </extensions>
                                        </node>
                                        <node id="9d4e5d5c75304010" name="Segmental Totals" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.lang.Object]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="74" y="639"/>
                                            </extensions>
                                        </node>
                                        <node id="64fcff23" name="ReportTreeNode" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.app.opgraph.report.tree.ReportTreeNode]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="54" y="729"/>
                                            </extensions>
                                        </node>
                                        <ogcn:macro id="d0e50cd137aa45c3" name="Get Table for Session" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                            <graph id="29327e43">
                                                <node id="6991d3ca2b8e4413" name="Map" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.util.Map]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="244" y="68"/>
                                                    </extensions>
                                                </node>
                                                <node id="797e76c817014d15" name="Map#get(Object)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[get(java.lang.Object)]]></oga:property>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.util.Map]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="401" y="69"/>
                                                    </extensions>
                                                </node>
                                                <node id="5f8dcecf77fe46f5" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                                                    <output name="exists" type="java.lang.Boolean">does table exist</output>
                                                    <output name="table" type="ca.phon.query.report.datasource.DefaultTableDataSource">table if exists, undefined otherwise</output>
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="__script"><![CDATA[
// setup input/output fields
function init(inputFields, outputFields) {
	inputFields.add("table", "");
	outputFields.add("exists", "does table exist", false, java.lang.Boolean);
	outputFields.add("table", "table if exists, undefined otherwise", false, Packages.ca.phon.query.report.datasource.DefaultTableDataSource);
}

function run(context) {
	var tableExists =
		(context.containsKey("table") && context.get("table") != null);
	context.put("exists", tableExists);
	context.put("table", context.get("table"));
}
]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="555" y="73"/>
                                                    </extensions>
                                                </node>
                                                <link dest="797e76c817014d15" destField="obj" source="6991d3ca2b8e4413" sourceField="obj"/>
                                                <link dest="5f8dcecf77fe46f5" destField="table" source="797e76c817014d15" sourceField="value"/>
                                            </graph>
                                            <ogcn:published_input field="arg1" name="sessionName" ref="797e76c817014d15"/>
                                            <ogcn:published_input field="obj" name="tableMap" ref="6991d3ca2b8e4413"/>
                                            <ogcn:published_output field="exists" name="exists" ref="5f8dcecf77fe46f5"/>
                                            <ogcn:published_output field="table" name="table" ref="5f8dcecf77fe46f5"/>
                                            <extensions>
                                                <oga:meta x="399" y="89"/>
                                            </extensions>
                                        </ogcn:macro>
                                        <ogcn:macro id="c243d0cc85994d01" name="If Speaker has Results for Session" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                            <graph id="290dc7f2">
                                                <node id="7481fcacc2964d6d" name="Integer#&lt;init&gt;(String)" type="class:ca.gedge.opgraph.nodes.reflect.ConstructorNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.classMember"><![CDATA[<init>(java.lang.String)]]></oga:property>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.declaredClass"><![CDATA[java.lang.Integer]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="516" y="128">
                                                            <oga:default for="arg1" type="java.lang.String">0</oga:default>
                                                        </oga:meta>
                                                    </extensions>
                                                </node>
                                                <node id="6b3143df3116411b" name="Session Name" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.lang.Object]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="68" y="130"/>
                                                    </extensions>
                                                </node>
                                                <node id="b25c5b3d1d7440da" name="Session Table" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="71" y="222"/>
                                                    </extensions>
                                                </node>
                                                <node id="c221b0481e9c496b" name="Participant" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="75" y="360"/>
                                                    </extensions>
                                                </node>
                                                <node id="418d68da3a2d4006" name="Setup Segmental Inventory" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                                                    <output name="inventory" type="ca.phon.query.report.datasource.DefaultTableDataSource"/>
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	outputs.add("inventory", "", false, Packages.ca.phon.query.report.datasource.DefaultTableDataSource);
}

function run(context) {
	var inventory = new Packages.ca.phon.query.report.datasource.DefaultTableDataSource();

	inventory.setColumnTitle(0, "IPA Target");
	inventory.setColumnTitle(1, "IPA Actual");
	inventory.setColumnTitle(2, "Count");

	context.put("inventory", inventory);
}
]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="913" y="424"/>
                                                    </extensions>
                                                </node>
                                                <node id="3b4467e2" name="Setup Segmental Totals" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                                                    <output name="totals" type="java.lang.Object"/>
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	outputs.add("totals", "", false, java.lang.Object);
}

function run(context) {
	var totals = {
		"onset": {
			"target": { "count": 0, "positions": [] },
			"correct": { "count": 0, "positions": [] },
			"substitution": { "count": 0, "positions": [] },
			"deletion": { "count": 0, "positions": [] },
			"distortion": { "count": 0, "positions": [] },
			"epenthesis": { "count": 0, "positions": [] }
		},
		"nucleus": {
			"target": { "count": 0, "positions": [] },
			"correct": { "count": 0, "positions": [] },
			"substitution": { "count": 0, "positions": [] },
			"deletion": { "count": 0, "positions": [] },
			"distortion": { "count": 0, "positions": [] },
			"epenthesis": { "count": 0, "positions": [] }
		},
		"coda": {
			"target": { "count": 0, "positions": [] },
			"correct": { "count": 0, "positions": [] },
			"substitution": { "count": 0, "positions": [] },
			"deletion": { "count": 0, "positions": [] },
			"distortion": { "count": 0, "positions": [] },
			"epenthesis": { "count": 0, "positions": [] }
		},
		"unknown": {
			"target": { "count": 0, "positions": [] },
			"correct": { "count": 0, "positions": [] },
			"substitution": { "count": 0, "positions": [] },
			"deletion": { "count": 0, "positions": [] },
			"distortion": { "count": 0, "positions": [] },
			"epenthesis": { "count": 0, "positions": [] }
		}
	};

	context.put("totals", totals);
}
]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="938" y="619"/>
                                                    </extensions>
                                                </node>
                                                <node id="4e5e792d" name="ReportTreeNode" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.app.opgraph.report.tree.ReportTreeNode]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="45" y="696"/>
                                                    </extensions>
                                                </node>
                                                <node id="5c792a0560b4beb" type="class:ca.gedge.opgraph.nodes.math.MathExpressionNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="significantDigits"><![CDATA[-1]]></oga:property>
                                                            <oga:property key="expression"><![CDATA[rowCount+(-1)]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="525" y="231"/>
                                                    </extensions>
                                                </node>
                                                <node id="d440941" name="Object#toString()" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[toString()]]></oga:property>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.Object]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="420" y="397"/>
                                                    </extensions>
                                                </node>
                                                <node id="70c57ade" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                                                    <input name="speaker" optional="false"/>
                                                    <input name="session" optional="false"/>
                                                    <output name="bufferName" type="java.lang.String"/>
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	inputs.add("speaker", "", false, false);
	inputs.add("session", "", false, false);

	outputs.add("bufferName", "", false, java.lang.String);
}

function run(context) {
	var speaker = context.get("speaker");
	var session = context.get("session");

	var bufferName = "Segmental Totals_"
		+ speaker + "_" + session;
	context.put("bufferName", bufferName);
}
]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="938" y="740"/>
                                                    </extensions>
                                                </node>
                                                <node id="a8f4c8d442b84425" type="class:ca.gedge.opgraph.nodes.general.RangeNode">
                                                    <extensions>
                                                        <oga:meta x="742" y="157"/>
                                                    </extensions>
                                                </node>
                                                <node id="2d30e84c" type="class:ca.phon.app.opgraph.nodes.report.ReportSectionHeaderNode">
                                                    <extensions>
                                                        <oga:meta x="631" y="377"/>
                                                    </extensions>
                                                </node>
                                                <ogcn:macro id="6cca2ae5" name="For Each Row" type="ca.gedge.opgraph.nodes.reflect.IterableClassNode">
                                                    <graph id="627f3412">
                                                        <node id="36e48cb9" name="Current Object" type="class:ca.gedge.opgraph.nodes.reflect.ContextualItemClassNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ContextualItemClassNode.key"><![CDATA[currentValue]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ContextualItemClassNode.declaredClass"><![CDATA[java.lang.Object]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="60" y="33"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="f150b722d7ce4792" name="DefaultTableDataSource" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="117" y="215"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="37e5d87a8ee2429a" name="Participant" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="111" y="356"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="7d75bcad2044891" name="Segmental Totals" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.lang.Object]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="116" y="682"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="198af750" name="Report Node" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.app.opgraph.report.tree.ReportTreeNode]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="95" y="784"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="1fba7ca21ccf40cb" name="Segmental Inventory" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="109" y="957"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="64f8407c" name="Row Index" type="class:ca.gedge.opgraph.nodes.reflect.ObjectCastNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectCastNode.declaredClass"><![CDATA[java.lang.Integer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="249" y="42"/>
                                                            </extensions>
                                                        </node>
                                                        <ogcn:macro id="4541ca3a0e544ebd" name="Get Row Data" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                                            <graph id="44ff3d88">
                                                                <node id="3bd8dba5cdbd4ce8" name="row" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.lang.Integer]]></oga:property>
                                                                        </oga:settings>
                                                                        <oga:meta x="51" y="70"/>
                                                                    </extensions>
                                                                </node>
                                                                <node id="58ad176b869d422d" name="table" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                                                        </oga:settings>
                                                                        <oga:meta x="37" y="243"/>
                                                                    </extensions>
                                                                </node>
                                                                <node id="90cacaca259b4900" name="DefaultTableDataSource#getRow(int)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[getRow(int)]]></oga:property>
                                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                                                        </oga:settings>
                                                                        <oga:meta x="422" y="104"/>
                                                                    </extensions>
                                                                </node>
                                                                <node id="240a13fb1df0407b" name="DefaultTableDataSource#getColumnIndex(String)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[getColumnIndex(java.lang.String)]]></oga:property>
                                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                                                        </oga:settings>
                                                                        <oga:meta x="467" y="269">
                                                                            <oga:default for="arg1" type="java.lang.String">Orthography</oga:default>
                                                                        </oga:meta>
                                                                    </extensions>
                                                                </node>
                                                                <node id="e034c3d7341b44b0" name="DefaultTableDataSource#getColumnIndex(String)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[getColumnIndex(java.lang.String)]]></oga:property>
                                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                                                        </oga:settings>
                                                                        <oga:meta x="467" y="391">
                                                                            <oga:default for="arg1" type="java.lang.String">Target Syllabification (Word)</oga:default>
                                                                        </oga:meta>
                                                                    </extensions>
                                                                </node>
                                                                <node id="25a90be31b12463e" name="DefaultTableDataSource#getColumnIndex(String)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[getColumnIndex(java.lang.String)]]></oga:property>
                                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                                                        </oga:settings>
                                                                        <oga:meta x="467" y="522">
                                                                            <oga:default for="arg1" type="java.lang.String">Actual Syllabification (Word)</oga:default>
                                                                        </oga:meta>
                                                                    </extensions>
                                                                </node>
                                                                <node id="12baff16e33c49b4" name="DefaultTableDataSource#getColumnIndex(String)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[getColumnIndex(java.lang.String)]]></oga:property>
                                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                                                        </oga:settings>
                                                                        <oga:meta x="467" y="635">
                                                                            <oga:default for="arg1" type="java.lang.String">Phone Alignment (Word)</oga:default>
                                                                        </oga:meta>
                                                                    </extensions>
                                                                </node>
                                                                <node id="85e177d8c46f4d84" name="Get Row Data" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                                                                    <input name="row" optional="false"/>
                                                                    <input name="orthoCol" optional="false"/>
                                                                    <input name="targetCol" optional="false"/>
                                                                    <input name="actualCol" optional="false"/>
                                                                    <input name="alignmentCol" optional="false"/>
                                                                    <output name="orthography" type="java.lang.String"/>
                                                                    <output name="target" type="ca.phon.ipa.IPATranscript"/>
                                                                    <output name="actual" type="ca.phon.ipa.IPATranscript"/>
                                                                    <output name="alignment" type="ca.phon.ipa.alignment.PhoneMap"/>
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	inputs.add("row", "", false, false);
	inputs.add("orthoCol", "", false, false);
	inputs.add("targetCol", "", false, false);
	inputs.add("actualCol", "", false, false);
	inputs.add("alignmentCol", "", false, false);

	outputs.add("orthography", "", false, java.lang.String);
	outputs.add("target", "", false, Packages.ca.phon.ipa.IPATranscript);
	outputs.add("actual", "", false, Packages.ca.phon.ipa.IPATranscript);
	outputs.add("alignment", "", false, Packages.ca.phon.ipa.alignment.PhoneMap);
}

function run(context) {
	var rowData = context.get("row");
	var orthoCol = context.get("orthoCol");
	var targetCol = context.get("targetCol");
	var actualCol = context.get("actualCol");
	var alignmentCol = context.get("alignmentCol");

	var orthoData = rowData[orthoCol];
	var targetData = rowData[targetCol];
	var actualData = rowData[actualCol];
	var alignData = rowData[alignmentCol];

	var target = 
		(targetData != null ? Packages.ca.phon.ipa.IPATranscript.parseIPATranscript(rowData[targetCol]) : new Packages.ca.phon.ipa.IPATranscript());
	var actual = 
		(actualData != null ? Packages.ca.phon.ipa.IPATranscript.parseIPATranscript(rowData[actualCol]) : new Packages.ca.phon.ipa.IPATranscript());
	var alignment = 
		(alignData != null && alignData.length() > 0 ? Packages.ca.phon.ipa.alignment.PhoneMap.fromString(target, actual, rowData[alignmentCol]) : new Packages.ca.phon.ipa.alignment.PhoneMap(target, actual));

	context.put("orthography", orthoData.toString());
	context.put("target", target);
	context.put("actual", actual);
	context.put("alignment", alignment);
}
]]></oga:property>
                                                                        </oga:settings>
                                                                        <oga:meta x="918" y="307"/>
                                                                    </extensions>
                                                                </node>
                                                                <link dest="12baff16e33c49b4" destField="obj" source="58ad176b869d422d" sourceField="obj"/>
                                                                <link dest="25a90be31b12463e" destField="obj" source="58ad176b869d422d" sourceField="obj"/>
                                                                <link dest="e034c3d7341b44b0" destField="obj" source="58ad176b869d422d" sourceField="obj"/>
                                                                <link dest="90cacaca259b4900" destField="arg1" source="3bd8dba5cdbd4ce8" sourceField="obj"/>
                                                                <link dest="90cacaca259b4900" destField="obj" source="58ad176b869d422d" sourceField="obj"/>
                                                                <link dest="85e177d8c46f4d84" destField="targetCol" source="e034c3d7341b44b0" sourceField="value"/>
                                                                <link dest="85e177d8c46f4d84" destField="actualCol" source="25a90be31b12463e" sourceField="value"/>
                                                                <link dest="85e177d8c46f4d84" destField="alignmentCol" source="12baff16e33c49b4" sourceField="value"/>
                                                                <link dest="85e177d8c46f4d84" destField="row" source="90cacaca259b4900" sourceField="value"/>
                                                                <link dest="240a13fb1df0407b" destField="obj" source="58ad176b869d422d" sourceField="obj"/>
                                                                <link dest="85e177d8c46f4d84" destField="orthoCol" source="240a13fb1df0407b" sourceField="value"/>
                                                                <extensions>
                                                                    <oga:notes>
                                                                        <oga:note color="0xffff96" height="624" title="Inputs" width="274" x="28" y="30"/>
                                                                    </oga:notes>
                                                                    <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                                                </extensions>
                                                            </graph>
                                                            <ogcn:published_input field="obj" name="table" ref="58ad176b869d422d"/>
                                                            <ogcn:published_input field="obj" name="row" ref="3bd8dba5cdbd4ce8"/>
                                                            <ogcn:published_output field="target" name="target" ref="85e177d8c46f4d84"/>
                                                            <ogcn:published_output field="actual" name="actual" ref="85e177d8c46f4d84"/>
                                                            <ogcn:published_output field="alignment" name="alignment" ref="85e177d8c46f4d84"/>
                                                            <ogcn:published_output field="orthography" name="orthography" ref="85e177d8c46f4d84"/>
                                                            <extensions>
                                                                <oga:meta x="472" y="214"/>
                                                            </extensions>
                                                        </ogcn:macro>
                                                        <ogcn:macro id="93e56a1c9e0d4fa8" name="WAP" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                                            <graph id="4ece38e3">
                                                                <node id="429f5069103f4b19" name="Word" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.lang.String]]></oga:property>
                                                                        </oga:settings>
                                                                        <oga:meta x="55" y="82"/>
                                                                    </extensions>
                                                                </node>
                                                                <node id="ac130279f6464980" name="IPA Target" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.ipa.IPATranscript]]></oga:property>
                                                                        </oga:settings>
                                                                        <oga:meta x="54" y="183"/>
                                                                    </extensions>
                                                                </node>
                                                                <node id="828342a8827348f6" name="IPA Actual" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.ipa.IPATranscript]]></oga:property>
                                                                        </oga:settings>
                                                                        <oga:meta x="53" y="322"/>
                                                                    </extensions>
                                                                </node>
                                                                <node id="126f6847b0734271" name="PhoneMap" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.ipa.alignment.PhoneMap]]></oga:property>
                                                                        </oga:settings>
                                                                        <oga:meta x="54" y="465"/>
                                                                    </extensions>
                                                                </node>
                                                                <node id="7ff0063dcd5f4c55" name="Word Level" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                                                                    <input name="target" optional="false"/>
                                                                    <input name="actual" optional="false"/>
                                                                    <input name="alignment" optional="false"/>
                                                                    <output name="table" type="ca.phon.query.report.datasource.DefaultTableDataSource"/>
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="__script"><![CDATA[importPackage(Packages.ca.phon.syllable)
importPackage(Packages.ca.phon.ipa.alignment)
importPackage(Packages.ca.phon.query.report.datasource)

var coverStr = "C=\\c; V=\\v; implicitBoundaries=true; insertSyllableBoundaries=true;";

function init(inputs, outputs) {
	inputs.add("target", "", false, false);
	inputs.add("actual", "", false, false);
	inputs.add("alignment", "", false, false);

	outputs.add("table", "", false, DefaultTableDataSource);
}

function run(context) {
	var target = context.get("target");
	var actual = context.get("actual");
	var alignment = context.get("alignment");

	var syllableAligner = new SyllableAligner();
	var syllAlignment = syllableAligner.calculateSyllableAlignment(target, actual, alignment);

	var outputTable = new DefaultTableDataSource();
	var col = 0;
	outputTable.setColumnTitle(col++, "Category");
	outputTable.setColumnTitle(col++, "Target");
	outputTable.setColumnTitle(col++, "Actual");
	outputTable.setColumnTitle(col++, "Match");

	col = 0;
	var rowData = [];

	var wordMatches = target.toString().equals(actual.toString());
	rowData[col++] = "Word";
	rowData[col++] = target;
	rowData[col++] = actual;
	rowData[col++] = wordMatches;
	outputTable.addRow(rowData);

	col = 0;
	rowData[col++] = "# Syllables";
	rowData[col++] = new java.lang.Integer(target.syllables().size());
	rowData[col++] = new java.lang.Integer(actual.syllables().size());
	rowData[col++] = (target.syllables().size() == actual.syllables().size());
	outputTable.addRow(rowData);

	col = 0;
	rowData[col++] = "Stress";
	rowData[col++] = target.stressPattern;
	rowData[col++] = actual.stressPattern;
	rowData[col++] = (target.stressPattern.equals(actual.stressPattern));
	outputTable.addRow(rowData);

	col = 0;
	rowData[col++] = "CGV Shape";
	rowData[col++] = target.cover(coverStr);
	rowData[col++] = actual.cover(coverStr);
	rowData[col++] = (rowData[1].toString().equals(rowData[2].toString()));
	outputTable.addRow(rowData);

	col = 0;
	rowData[col++] = "# Transitions";
	rowData[col++] = new java.lang.Integer(target.syllables().size()-1);
	rowData[col++] = new java.lang.Integer(actual.syllables().size()-1);
	rowData[col++] = (rowData[1] == rowData[2]);
	outputTable.addRow(rowData);
	
	context.put("table", outputTable);
}
]]></oga:property>
                                                                        </oga:settings>
                                                                        <oga:meta x="688" y="109"/>
                                                                    </extensions>
                                                                </node>
                                                                <node id="d6964130060d4eac" name="Prosodic Level" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                                                                    <input name="target" optional="false"/>
                                                                    <input name="actual" optional="false"/>
                                                                    <input name="alignment" optional="false"/>
                                                                    <output name="table" type="ca.phon.query.report.datasource.DefaultTableDataSource"/>
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="__script"><![CDATA[importPackage(Packages.ca.phon.syllable)
importPackage(Packages.ca.phon.ipa.alignment)

var coverStr = "C=\\c; V=\\v; implicitBoundaries=true; insertSyllableBoundaries=true;";

function init(inputs, outputs) {
	inputs.add("target", "", false, false);
	inputs.add("actual", "", false, false);
	inputs.add("alignment", "", false, false);

	outputs.add("table", "", false, Packages.ca.phon.query.report.datasource.DefaultTableDataSource);
}

function run(context) {
	var table = new DefaultTableDataSource();
	var target = context.get("target");
	var actual = context.get("actual");
	var alignment = context.get("alignment");

	var syllableAligner = new SyllableAligner();
	var syllAlignment = syllableAligner.calculateSyllableAlignment(target, actual, alignment);

	var col = 0;
	table.setColumnTitle(col++, "Category");
	table.setColumnTitle(col++, "Target");
	table.setColumnTitle(col++, "Actual");
	table.setColumnTitle(col++, "Position");
	table.setColumnTitle(col++, "Description");

	context.put("table", table);
}
]]></oga:property>
                                                                        </oga:settings>
                                                                        <oga:meta x="688" y="290"/>
                                                                    </extensions>
                                                                </node>
                                                                <node id="feaa6135ab9f4863" name="Segmental Level" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                                                                    <input name="target" optional="false"/>
                                                                    <input name="actual" optional="false"/>
                                                                    <input name="alignment" optional="false"/>
                                                                    <output name="table" type="ca.phon.query.report.datasource.DefaultTableDataSource"/>
                                                                    <output name="counts" type="java.lang.Object"/>
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="__script"><![CDATA[importPackage(Packages.ca.phon.syllable)
importPackage(Packages.ca.phon.ipa.alignment)
importPackage(Packages.ca.phon.ipa.relations)

var ignoreDiacriticsParamInfo = {
	"id": "options.ignoreDiacritics",
	"title": "Ignore diacritics",
	"def": false,
	"desc": ""
};
var ignoreDiacriticsParam;
var options = {
	"ignoreDiacritics": ignoreDiacriticsParamInfo.def
};

function init(inputs, outputs) {
	inputs.add("target", "", false, false);
	inputs.add("actual", "", false, false);
	inputs.add("alignment", "", false, false);

	outputs.add("table", "", false, Packages.ca.phon.query.report.datasource.DefaultTableDataSource);
	outputs.add("counts", "", false, java.lang.Object);
}

function setup_params(params) {
	ignoreDiacriticsParam = new BooleanScriptParam(
		ignoreDiacriticsParamInfo.id,
		ignoreDiacriticsParamInfo.title,
		ignoreDiacriticsParamInfo.desc,
		ignoreDiacriticsParamInfo.def);
	params.add(ignoreDiacriticsParam);
}

function run(context) {
	var target = context.get("target");
	var actual = context.get("actual");
	var alignment = context.get("alignment");

	var syllAligner = new SyllableAligner();
	var syllableAlignment = syllAligner.calculateSyllableAlignment(target, actual, alignment);

	// find any segmental relations
	var detector = new SegmentalRelations(true, true);
	var relations = detector.detect(alignment);

	var table = new DefaultTableDataSource();

	var col = 0;
	table.setColumnTitle(col++, "IPA Target");
	table.setColumnTitle(col++, "IPA Actual");
	table.setColumnTitle(col++, "Position");
	table.setColumnTitle(col++, "Description");

	// collect data
	var counts = {
		"target": target,
		"actual": actual,
		"alignment": alignment,
		"relations": relations,
		"onset": {
			"target": { "count": 0, "positions": [] },
			"correct": { "count": 0, "positions": [] },
			"substitution": { "count": 0, "positions": [] },
			"deletion": { "count": 0, "positions": [] },
			"distortion": { "count": 0, "positions": [] },
			"epenthesis": { "count": 0, "positions": [] }
		},
		"nucleus": {
			"target": { "count": 0, "positions": [] },
			"correct": { "count": 0, "positions": [] },
			"substitution": { "count": 0, "positions": [] },
			"deletion": { "count": 0, "positions": [] },
			"distortion": { "count": 0, "positions": [] },
			"epenthesis": { "count": 0, "positions": [] }
		},
		"coda": {
			"target": { "count": 0, "positions": [] },
			"correct": { "count": 0, "positions": [] },
			"substitution": { "count": 0, "positions": [] },
			"deletion": { "count": 0, "positions": [] },
			"distortion": { "count": 0, "positions": [] },
			"epenthesis": { "count": 0, "positions": [] }
		},
		"unknown": {
			"target": { "count": 0, "positions": [] },
			"correct": { "count": 0, "positions": [] },
			"substitution": { "count": 0, "positions": [] },
			"deletion": { "count": 0, "positions": [] },
			"distortion": { "count": 0, "positions": [] },
			"epenthesis": { "count": 0, "positions": [] }
		}
	};
	
	for(var i = 0; i < alignment.alignmentLength; i++) {
		var alignedEles = alignment.getAlignedElements(i);

		var targetEle = alignedEles.get(0);
		var actualEle = alignedEles.get(1);

		var alignTxt = (targetEle != null ? targetEle.toString() : "\u2205");
		alignTxt += " \u2194 ";
		alignTxt += (actualEle != null ? actualEle.toString() : "\u2205");

		var objCount = counts.unknown;
		var testEle = (targetEle != null ? targetEle : actualEle);

		var testSyll = getSyllable(syllableAlignment, testEle);
		var alignedSyll = syllableAlignment.getAlignedElement(testSyll);

		var syllDeleted = false;
		if(!alignedSyll.isPresent()) {
			syllDeleted = true;
		}

		var scType = SyllableConstituentType.UNKNOWN;
		if(testEle.scType == SyllableConstituentType.LEFTAPPENDIX
			|| testEle.scType == SyllableConstituentType.ONSET) {
			objCount = counts.onset;
			scType = SyllableConstituentType.ONSET;
		} else if(testEle.scType == SyllableConstituentType.NUCLEUS
			|| testEle.scType == SyllableConstituentType.OEHS) {
			objCount = counts.nucleus;
			scType = SyllableConstituentType.NUCLEUS;	
		} else if(testEle.scType == SyllableConstituentType.CODA
			|| testEle.scType == SyllableConstituentType.RIGHTAPPENDIX) {
			objCount = counts.coda;
			scType = SyllableConstituentType.CODA;
		}

		var typeTxt = (syllDeleted ? "\u03c3 " : " ");
		if(targetEle != null && actualEle != null) {
			objCount.target.count++;
			objCount.target.positions.push(i);

			var matches = 
				(options.ignoreDiacritics == true ? targetEle.basePhone == actualEle.basePhone : 
					targetEle.toString().equals(actualEle.toString()));
			if(matches) {
				objCount.correct.count++;
				objCount.correct.positions.push(i);

				typeTxt += "Correct";
			} else {
				objCount.substitution.count++;
				objCount.substitution.positions.push(i);

				typeTxt += "Substitution";
			}
		} else if(targetEle != null && actualEle == null) {
			if(!syllDeleted) {
				objCount.target.count++;
				objCount.target.positions.push(i);
				
				objCount.deletion.count++;
				objCount.deletion.positions.push(i);
			}
			
			typeTxt += "Deletion";
		} else if(targetEle == null && actualEle != null) {
			if(!syllDeleted) {
				objCount.epenthesis.count++;
				objCount.epenthesis.positions.push(i);
			}
			typeTxt += "Epenthesis";
		}

		var idx = 0;
		var rowData = [];

		rowData[idx++] = (targetEle != null ? targetEle : "\u2205");
		rowData[idx++] = (actualEle != null ? actualEle : "\u2205");
		rowData[idx++] = scType;
		rowData[idx++] = typeTxt;
		
		table.addRow(rowData);
	}

	context.put("table", table);
	context.put("counts", counts);
}

function getSyllable(syllableAlignment, ele) {
	for(var i = 0; i < syllableAlignment.topElements.length; i++) {
		var syll = syllableAlignment.topElements[i];
		if(syll.indexOf(ele) >= 0) {
			return syll;
		}
	}
	for(var i = 0; i < syllableAlignment.bottomElements.length; i++) {
		var syll = syllableAlignment.bottomElements[i];
		if(syll.indexOf(ele) >= 0) {
			return syll;
		}
	}
	return null;
}
]]></oga:property>
                                                                        </oga:settings>
                                                                        <oga:meta x="688" y="471"/>
                                                                    </extensions>
                                                                </node>
                                                                <node id="56e6371e" name="Word Table" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                                                        </oga:settings>
                                                                        <oga:meta x="1192" y="149"/>
                                                                    </extensions>
                                                                </node>
                                                                <node id="723d0f44" name="Prosodic Table" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                                                        </oga:settings>
                                                                        <oga:meta x="1197" y="304"/>
                                                                    </extensions>
                                                                </node>
                                                                <node id="b7e1c97" name="Segmental Table" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                                                        </oga:settings>
                                                                        <oga:meta x="1203" y="469"/>
                                                                    </extensions>
                                                                </node>
                                                                <node id="37b9418a" type="class:ca.phon.app.opgraph.nodes.table.InventoryNode">
                                                                    <extensions>
                                                                        <opqry:inventoryoptions>
                                                                            <opqry:column caseSensitive="false" column="IPA Target" ignoreDiacritics="false"/>
                                                                            <opqry:column caseSensitive="false" column="IPA Actual" ignoreDiacritics="false"/>
                                                                        </opqry:inventoryoptions>
                                                                        <oga:settings/>
                                                                        <oga:meta x="917" y="703"/>
                                                                    </extensions>
                                                                </node>
                                                                <node id="257a7e47" name="Segmental Subtotal" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.lang.Object]]></oga:property>
                                                                        </oga:settings>
                                                                        <oga:meta x="1207" y="725"/>
                                                                    </extensions>
                                                                </node>
                                                                <node id="1e17e35e" name="Segmental Inventory" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.TableDataSource]]></oga:property>
                                                                        </oga:settings>
                                                                        <oga:meta x="1205" y="607"/>
                                                                    </extensions>
                                                                </node>
                                                                <link dest="d6964130060d4eac" destField="target" source="ac130279f6464980" sourceField="obj"/>
                                                                <link dest="d6964130060d4eac" destField="actual" source="828342a8827348f6" sourceField="obj"/>
                                                                <link dest="d6964130060d4eac" destField="alignment" source="126f6847b0734271" sourceField="obj"/>
                                                                <link dest="feaa6135ab9f4863" destField="target" source="ac130279f6464980" sourceField="obj"/>
                                                                <link dest="feaa6135ab9f4863" destField="actual" source="828342a8827348f6" sourceField="obj"/>
                                                                <link dest="feaa6135ab9f4863" destField="alignment" source="126f6847b0734271" sourceField="obj"/>
                                                                <link dest="7ff0063dcd5f4c55" destField="target" source="ac130279f6464980" sourceField="obj"/>
                                                                <link dest="7ff0063dcd5f4c55" destField="actual" source="828342a8827348f6" sourceField="obj"/>
                                                                <link dest="7ff0063dcd5f4c55" destField="alignment" source="126f6847b0734271" sourceField="obj"/>
                                                                <link dest="56e6371e" destField="obj" source="7ff0063dcd5f4c55" sourceField="table"/>
                                                                <link dest="723d0f44" destField="obj" source="d6964130060d4eac" sourceField="table"/>
                                                                <link dest="b7e1c97" destField="obj" source="feaa6135ab9f4863" sourceField="table"/>
                                                                <link dest="257a7e47" destField="obj" source="feaa6135ab9f4863" sourceField="counts"/>
                                                                <link dest="37b9418a" destField="table" source="feaa6135ab9f4863" sourceField="table"/>
                                                                <link dest="1e17e35e" destField="obj" source="37b9418a" sourceField="table"/>
                                                                <extensions>
                                                                    <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                                                    <oga:notes>
                                                                        <oga:note color="0xffff96" height="750" title="Inputs" width="431" x="23" y="31"/>
                                                                        <oga:note color="0x9696ff" height="647" title="Analysis" width="477" x="556" y="50"/>
                                                                        <oga:note color="0x96ff96" height="824" title="Outputs" width="351" x="1119" y="100"/>
                                                                    </oga:notes>
                                                                </extensions>
                                                            </graph>
                                                            <ogcn:published_input field="obj" name="word" ref="429f5069103f4b19"/>
                                                            <ogcn:published_input field="obj" name="target" ref="ac130279f6464980"/>
                                                            <ogcn:published_input field="obj" name="actual" ref="828342a8827348f6"/>
                                                            <ogcn:published_input field="obj" name="alignment" ref="126f6847b0734271"/>
                                                            <ogcn:published_output field="obj" name="wordTable" ref="56e6371e"/>
                                                            <ogcn:published_output field="obj" name="prosodicTable" ref="723d0f44"/>
                                                            <ogcn:published_output field="obj" name="segmentalTable" ref="b7e1c97"/>
                                                            <ogcn:published_output field="obj" name="segmental inventory" ref="1e17e35e"/>
                                                            <ogcn:published_output field="obj" name="segmental totals" ref="257a7e47"/>
                                                            <extensions>
                                                                <oga:meta x="778" y="164"/>
                                                            </extensions>
                                                        </ogcn:macro>
                                                        <node id="16647069" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                                                            <input name="speaker" optional="false"/>
                                                            <input name="orthography" optional="false"/>
                                                            <output name="wordBufferName" type="java.lang.String"/>
                                                            <output name="prosodicBufferName" type="java.lang.String"/>
                                                            <output name="segmentalBufferName" type="java.lang.String"/>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	inputs.add("speaker", "", false, false);
	inputs.add("orthography", "", false, false);

	outputs.add("wordBufferName", "", false, java.lang.String);
	outputs.add("prosodicBufferName", "", false, java.lang.String);
	outputs.add("segmentalBufferName", "", false, java.lang.String);
}

function run(context) {
	var speaker = context.get("speaker");
	var ortho = context.get("orthography");

	var bufferBase = speaker + "_" + ortho;

	context.put("wordBufferName", new java.lang.String(bufferBase + "_word"));
	context.put("prosodicBufferName", new java.lang.String(bufferBase + "_prosodic"));
	context.put("segmentalBufferName", new java.lang.String(bufferBase + "_segmental"));
}
]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="753" y="379"/>
                                                            </extensions>
                                                        </node>
                                                        <ogcn:macro id="394b481a" name="Setup Section Name" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                                            <graph id="39605f73">
                                                                <node id="584303a5" name="object1" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.lang.String]]></oga:property>
                                                                        </oga:settings>
                                                                    </extensions>
                                                                </node>
                                                                <node id="4da9275f" name="object2" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.ipa.IPATranscript]]></oga:property>
                                                                        </oga:settings>
                                                                    </extensions>
                                                                </node>
                                                                <node id="10ece68d" name="object3" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.ipa.IPATranscript]]></oga:property>
                                                                        </oga:settings>
                                                                    </extensions>
                                                                </node>
                                                                <node id="28f886aa" type="class:ca.gedge.opgraph.nodes.general.ArrayNode">
                                                                    <input name="object1" optional="false">object in array</input>
                                                                    <input name="object2" optional="false">object in array</input>
                                                                    <input name="object3" optional="false">object in array</input>
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="ca.gedge.opgraph.nodes.general.ArrayNode.numObjects"><![CDATA[3]]></oga:property>
                                                                        </oga:settings>
                                                                        <oga:meta x="1460" y="167"/>
                                                                    </extensions>
                                                                </node>
                                                                <node id="37285b91" type="class:ca.gedge.opgraph.nodes.general.TextNode">
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="ca.gedge.opgraph.nodes.general.TextNode.text"><![CDATA[%s /%s/ \u2194 /%s/]]></oga:property>
                                                                        </oga:settings>
                                                                        <oga:meta x="1638" y="161"/>
                                                                    </extensions>
                                                                </node>
                                                                <link dest="28f886aa" destField="object3" source="10ece68d" sourceField="obj"/>
                                                                <link dest="28f886aa" destField="object2" source="4da9275f" sourceField="obj"/>
                                                                <link dest="37285b91" destField="objects" source="28f886aa" sourceField="array"/>
                                                                <link dest="28f886aa" destField="object1" source="584303a5" sourceField="obj"/>
                                                            </graph>
                                                            <ogcn:published_input field="obj" name="orthography" ref="10ece68d"/>
                                                            <ogcn:published_input field="obj" name="target" ref="4da9275f"/>
                                                            <ogcn:published_input field="obj" name="actual" ref="584303a5"/>
                                                            <ogcn:published_output field="value" name="value" ref="37285b91"/>
                                                            <extensions>
                                                                <oga:meta x="764" y="815"/>
                                                            </extensions>
                                                        </ogcn:macro>
                                                        <node id="aa083d0b196e4847" name="Print Word WAP Table" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                            <input name="data" optional="false">Data to print</input>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="dataTemplate"><![CDATA[$DATA]]></oga:property>
                                                                    <oga:property key="showText"><![CDATA[false]]></oga:property>
                                                                    <oga:property key="showTable"><![CDATA[true]]></oga:property>
                                                                    <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="1196" y="128"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="31b394bd" name="Add to Segmental Inventory" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                                                            <input name="inventory" optional="false"/>
                                                            <input name="sub-inventory" optional="false"/>
                                                            <output name="inventory" type="ca.phon.query.report.datasource.DefaultTableDataSource"/>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	inputs.add("inventory", "", false, false);
	inputs.add("sub-inventory", "", false, false);

	outputs.add("inventory", "", false, Packages.ca.phon.query.report.datasource.DefaultTableDataSource);
}

function run(context) {
	var keyCols = [ 0, 1 ];

	var inventory = context.get("inventory");
	var subInventory = context.get("sub-inventory");

	for(var row = 0; row < subInventory.rowCount; row++) {
		var rowData = subInventory.getRow(row);

		var rowKey = [ rowData[0], rowData[1] ];
		var count = inventory.getValueAt(keyCols, rowKey, "Count");

		if(count != null) {
			var newCount = count.intValue() + rowData[2].intValue();
			inventory.setValueAt(keyCols, rowKey, "Count", new java.lang.Integer(newCount));
		} else {
			inventory.addRow(rowData);
		}
	}
}
]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="1671" y="248"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="c7525e49168a49f2" name="Print Prosodic WAP Table" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                            <input name="data" optional="false">Data to print</input>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="dataTemplate"><![CDATA[$DATA]]></oga:property>
                                                                    <oga:property key="showText"><![CDATA[false]]></oga:property>
                                                                    <oga:property key="showTable"><![CDATA[true]]></oga:property>
                                                                    <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="1201" y="307"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="d295335" name="Segmental Totals" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                                                            <input name="totals" optional="false"/>
                                                            <input name="subtotal" optional="false"/>
                                                            <output name="totals" type="java.lang.Object"/>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	inputs.add("totals", "", false, false);
	inputs.add("subtotal", "", false, false);

	outputs.add("totals", "", false, java.lang.Object);
}
	
function run(context) {
	var totals = context.get("totals");
	var subtotal = context.get("subtotal");

	sumcounts(totals.onset, subtotal.onset);
	sumcounts(totals.nucleus, subtotal.nucleus);
	sumcounts(totals.coda, subtotal.coda);
	sumcounts(totals.unknown, subtotal.unknown);

	context.put("totals", totals);
}

function sumcounts(total, subtotal) {
	total.target.count += subtotal.target.count;
	total.correct.count += subtotal.correct.count;
	total.substitution.count += subtotal.substitution.count;
	total.deletion.count += subtotal.deletion.count;
	total.epenthesis.count += subtotal.epenthesis.count;
}
]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="1668" y="392"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="5d81a99f" name="Print Segmental WAP Table" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                            <input name="data" optional="false">Data to print</input>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="dataTemplate"><![CDATA[$DATA]]></oga:property>
                                                                    <oga:property key="showText"><![CDATA[false]]></oga:property>
                                                                    <oga:property key="showTable"><![CDATA[true]]></oga:property>
                                                                    <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="1202" y="463"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="684ca6f5" type="class:ca.phon.app.opgraph.nodes.report.ReportSectionHeaderNode">
                                                            <extensions>
                                                                <oga:meta x="967" y="809"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="6ba46b7e" type="class:ca.phon.app.opgraph.nodes.report.TableSectionNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.phon.app.opgraph.nodes.report.TableSectionNode.columns"/>
                                                                    <oga:property key="ca.phon.app.opgraph.nodes.report.TableSectionNode.includeColumns"><![CDATA[true]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="1208" y="809">
                                                                    <oga:default for="sectionName" type="java.lang.String">Word Level</oga:default>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <node id="d416fbb" type="class:ca.phon.app.opgraph.nodes.report.TableSectionNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.phon.app.opgraph.nodes.report.TableSectionNode.columns"/>
                                                                    <oga:property key="ca.phon.app.opgraph.nodes.report.TableSectionNode.includeColumns"><![CDATA[true]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="1208" y="981">
                                                                    <oga:default for="sectionName" type="java.lang.String">Prosodic Level</oga:default>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <node id="77f39e4e" type="class:ca.phon.app.opgraph.nodes.report.TableSectionNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.phon.app.opgraph.nodes.report.TableSectionNode.columns"/>
                                                                    <oga:property key="ca.phon.app.opgraph.nodes.report.TableSectionNode.includeColumns"><![CDATA[true]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="1208" y="1141">
                                                                    <oga:default for="sectionName" type="java.lang.String">Segmental Level</oga:default>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <link dest="64f8407c" destField="obj" source="36e48cb9" sourceField="obj"/>
                                                        <link dest="4541ca3a0e544ebd" destField="table" source="f150b722d7ce4792" sourceField="obj"/>
                                                        <link dest="4541ca3a0e544ebd" destField="row" source="64f8407c" sourceField="obj"/>
                                                        <link dest="93e56a1c9e0d4fa8" destField="target" source="4541ca3a0e544ebd" sourceField="target"/>
                                                        <link dest="93e56a1c9e0d4fa8" destField="actual" source="4541ca3a0e544ebd" sourceField="actual"/>
                                                        <link dest="93e56a1c9e0d4fa8" destField="alignment" source="4541ca3a0e544ebd" sourceField="alignment"/>
                                                        <link dest="93e56a1c9e0d4fa8" destField="word" source="4541ca3a0e544ebd" sourceField="orthography"/>
                                                        <link dest="d295335" destField="totals" source="7d75bcad2044891" sourceField="obj"/>
                                                        <link dest="5d81a99f" destField="data" source="93e56a1c9e0d4fa8" sourceField="segmentalTable"/>
                                                        <link dest="16647069" destField="orthography" source="4541ca3a0e544ebd" sourceField="orthography"/>
                                                        <link dest="16647069" destField="speaker" source="37e5d87a8ee2429a" sourceField="obj"/>
                                                        <link dest="5d81a99f" destField="buffer" source="16647069" sourceField="segmentalBufferName"/>
                                                        <link dest="c7525e49168a49f2" destField="data" source="93e56a1c9e0d4fa8" sourceField="prosodicTable"/>
                                                        <link dest="c7525e49168a49f2" destField="buffer" source="16647069" sourceField="prosodicBufferName"/>
                                                        <link dest="aa083d0b196e4847" destField="data" source="93e56a1c9e0d4fa8" sourceField="wordTable"/>
                                                        <link dest="aa083d0b196e4847" destField="buffer" source="16647069" sourceField="wordBufferName"/>
                                                        <link dest="6ba46b7e" destField="tableName" source="aa083d0b196e4847" sourceField="buffer"/>
                                                        <link dest="d416fbb" destField="tableName" source="c7525e49168a49f2" sourceField="buffer"/>
                                                        <link dest="77f39e4e" destField="tableName" source="5d81a99f" sourceField="buffer"/>
                                                        <link dest="394b481a" destField="orthography" source="4541ca3a0e544ebd" sourceField="actual"/>
                                                        <link dest="684ca6f5" destField="sectionName" source="394b481a" sourceField="value"/>
                                                        <link dest="394b481a" destField="target" source="4541ca3a0e544ebd" sourceField="target"/>
                                                        <link dest="394b481a" destField="actual" source="4541ca3a0e544ebd" sourceField="orthography"/>
                                                        <link dest="684ca6f5" destField="parent" source="198af750" sourceField="obj"/>
                                                        <link dest="6ba46b7e" destField="parent" source="684ca6f5" sourceField="section"/>
                                                        <link dest="d416fbb" destField="parent" source="684ca6f5" sourceField="section"/>
                                                        <link dest="77f39e4e" destField="parent" source="684ca6f5" sourceField="section"/>
                                                        <link dest="d295335" destField="subtotal" source="93e56a1c9e0d4fa8" sourceField="segmental totals"/>
                                                        <link dest="31b394bd" destField="sub-inventory" source="93e56a1c9e0d4fa8" sourceField="segmental inventory"/>
                                                        <link dest="31b394bd" destField="inventory" source="1fba7ca21ccf40cb" sourceField="obj"/>
                                                        <extensions>
                                                            <oga:notes>
                                                                <oga:note color="0xffff96" height="978" title="Inputs" width="340" x="50" y="164"/>
                                                                <oga:note color="0xffc864" height="564" title="Report" width="802" x="700" y="757"/>
                                                                <oga:note color="0x96ff96" height="803" title="Outputs" width="540" x="1589" y="111"/>
                                                            </oga:notes>
                                                            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                                        </extensions>
                                                    </graph>
                                                    <ogcn:published_input field="obj" name="table" ref="f150b722d7ce4792"/>
                                                    <ogcn:published_input field="obj" name="speaker" ref="37e5d87a8ee2429a"/>
                                                    <ogcn:published_input field="obj" name="segmental totals" ref="7d75bcad2044891"/>
                                                    <ogcn:published_input field="obj" name="report node" ref="198af750"/>
                                                    <ogcn:published_input field="obj" name="segmental inventory" ref="1fba7ca21ccf40cb"/>
                                                    <ogcn:published_output field="totals" name="segmental totals" ref="d295335"/>
                                                    <ogcn:published_output field="inventory" name="segmental inventory" ref="31b394bd"/>
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.IterableClassNode.className"><![CDATA[java.util.List]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="918" y="162"/>
                                                    </extensions>
                                                </ogcn:macro>
                                                <node id="5cd1f00d" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                    <input name="data" optional="false">Data to print</input>
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="dataTemplate"><![CDATA[$DATA]]></oga:property>
                                                            <oga:property key="showText"><![CDATA[false]]></oga:property>
                                                            <oga:property key="showTable"><![CDATA[true]]></oga:property>
                                                            <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="1389" y="385">
                                                            <oga:default for="buffer" type="java.lang.String">Test Me</oga:default>
                                                        </oga:meta>
                                                    </extensions>
                                                </node>
                                                <node id="2043e708" name="Setup Segmental Totals Table" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                                                    <input name="totals" optional="false"/>
                                                    <output name="table" type="ca.phon.query.report.datasource.DefaultTableDataSource"/>
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="__script"><![CDATA[importClass(Packages.ca.phon.query.report.datasource.DefaultTableDataSource)

function init(inputs, outputs) {
	inputs.add("totals", "", false, false);

	outputs.add("table", "", false, DefaultTableDataSource);
}

function run(context) {
	var totals = context.get("totals");
	var table = new DefaultTableDataSource();

	var colIdx = 0;
	table.setColumnTitle(colIdx++, "");
	table.setColumnTitle(colIdx++, "Onset");
	table.setColumnTitle(colIdx++, "Nucleus");
	table.setColumnTitle(colIdx++, "Coda");
	table.setColumnTitle(colIdx++, "Unknown");

	var idx = 0;
	var rowData = []
	// target
	rowData[idx++] = "# Target";
	rowData[idx++] = new java.lang.Integer(totals.onset.target.count);
	rowData[idx++] = new java.lang.Integer(totals.nucleus.target.count);
	rowData[idx++] = new java.lang.Integer(totals.coda.target.count);
	rowData[idx++] = new java.lang.Integer(totals.unknown.target.count);
	table.addRow(rowData);

	idx = 0;
	// correct
	rowData[idx++] = "# Correct";
	rowData[idx++] = new java.lang.Integer(totals.onset.correct.count);
	rowData[idx++] = new java.lang.Integer(totals.nucleus.correct.count);
	rowData[idx++] = new java.lang.Integer(totals.coda.correct.count);
	rowData[idx++] = new java.lang.Integer(totals.unknown.correct.count);
	table.addRow(rowData);

	idx = 0;
	// substitutions
	rowData[idx++] = "# Substitutions";
	rowData[idx++] = new java.lang.Integer(totals.onset.substitution.count);
	rowData[idx++] = new java.lang.Integer(totals.nucleus.substitution.count);
	rowData[idx++] = new java.lang.Integer(totals.coda.substitution.count);
	rowData[idx++] = new java.lang.Integer(totals.unknown.substitution.count);
	table.addRow(rowData);

	idx = 0;
	// deletions
	rowData[idx++] = "# Deletions";
	rowData[idx++] = new java.lang.Integer(totals.onset.deletion.count);
	rowData[idx++] = new java.lang.Integer(totals.nucleus.deletion.count);
	rowData[idx++] = new java.lang.Integer(totals.coda.deletion.count);
	rowData[idx++] = new java.lang.Integer(totals.unknown.deletion.count);
	table.addRow(rowData);

	idx = 0;
	// distortions
	rowData[idx++] = "# Distortions";
	rowData[idx++] = new java.lang.Integer(totals.onset.distortion.count);
	rowData[idx++] = new java.lang.Integer(totals.nucleus.distortion.count);
	rowData[idx++] = new java.lang.Integer(totals.coda.distortion.count);
	rowData[idx++] = new java.lang.Integer(totals.unknown.distortion.count);
	table.addRow(rowData);

	idx = 0;
	// epenthesis
	rowData[idx++] = "# Epenthesis";
	rowData[idx++] = new java.lang.Integer(totals.onset.epenthesis.count);
	rowData[idx++] = new java.lang.Integer(totals.nucleus.epenthesis.count);
	rowData[idx++] = new java.lang.Integer(totals.coda.epenthesis.count);
	rowData[idx++] = new java.lang.Integer(totals.unknown.epenthesis.count);
	table.addRow(rowData);

	idx = 0;
	// % correct
	rowData[idx++] = "% Correct";
	var pc = (totals.onset.target.count + totals.onset.epenthesis.count > 0 
		? (totals.onset.correct.count / (totals.onset.correct.count+totals.onset.substitution.count+totals.onset.deletion.count+totals.onset.distortion.count+totals.onset.epenthesis.count)) * 100.0 
		: 0.0);
	rowData[idx++] = new java.lang.Float(pc);

	pc = (totals.nucleus.target.count + totals.nucleus.epenthesis.count > 0
		? (totals.nucleus.correct.count / (totals.nucleus.correct.count+totals.nucleus.substitution.count+totals.nucleus.deletion.count+totals.nucleus.distortion.count+totals.nucleus.epenthesis.count)) * 100.0
		: 0.0);
	rowData[idx++] = new java.lang.Float(pc);

	pc = (totals.coda.target.count + totals.coda.epenthesis.count > 0 
		? (totals.coda.correct.count / (totals.coda.correct.count+totals.coda.substitution.count+totals.coda.deletion.count+totals.coda.distortion.count+totals.coda.epenthesis.count)) * 100.0
		: 0.0);
	rowData[idx++] = new java.lang.Float(pc);

	pc = (totals.unknown.target.count + totals.unknown.epenthesis.count > 0 
		? (totals.unknown.correct.count / (totals.unknown.correct.count+totals.unknown.substitution.count+totals.unknown.deletion.count+totals.unknown.distortion.count+totals.unknown.epenthesis.count)) * 100.0
		: 0.0);
	rowData[idx++] = new java.lang.Float(pc);
	table.addRow(rowData);
	
	context.put("table", table);
}
]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="1347" y="608"/>
                                                    </extensions>
                                                </node>
                                                <node id="29a99473" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                    <input name="data" optional="false">Data to print</input>
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="dataTemplate"><![CDATA[$DATA]]></oga:property>
                                                            <oga:property key="showText"><![CDATA[false]]></oga:property>
                                                            <oga:property key="showTable"><![CDATA[true]]></oga:property>
                                                            <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="1347" y="729">
                                                            <oga:default for="buffer" type="java.lang.String">Segmental Totals</oga:default>
                                                        </oga:meta>
                                                    </extensions>
                                                </node>
                                                <link dest="a8f4c8d442b84425" destField="end" source="5c792a0560b4beb" sourceField="result"/>
                                                <link dest="a8f4c8d442b84425" destField="start" source="7481fcacc2964d6d" sourceField="value"/>
                                                <link dest="5c792a0560b4beb" destField="rowCount" source="b25c5b3d1d7440da" sourceField="rowCount"/>
                                                <link dest="6cca2ae5" destField="collection" source="a8f4c8d442b84425" sourceField="range"/>
                                                <link dest="6cca2ae5" destField="table" source="b25c5b3d1d7440da" sourceField="obj"/>
                                                <link dest="6cca2ae5" destField="speaker" source="c221b0481e9c496b" sourceField="obj"/>
                                                <link dest="6cca2ae5" destField="segmental totals" source="3b4467e2" sourceField="totals"/>
                                                <link dest="2043e708" destField="totals" source="6cca2ae5" sourceField="segmental totals"/>
                                                <link dest="29a99473" destField="data" source="2043e708" sourceField="table"/>
                                                <link dest="29a99473" destField="buffer" source="70c57ade" sourceField="bufferName"/>
                                                <link dest="70c57ade" destField="speaker" source="c221b0481e9c496b" sourceField="obj"/>
                                                <link dest="70c57ade" destField="session" source="6b3143df3116411b" sourceField="obj"/>
                                                <link dest="2d30e84c" destField="sectionName" source="d440941" sourceField="value"/>
                                                <link dest="d440941" destField="obj" source="6b3143df3116411b" sourceField="obj"/>
                                                <link dest="6cca2ae5" destField="report node" source="2d30e84c" sourceField="section"/>
                                                <link dest="2d30e84c" destField="parent" source="4e5e792d" sourceField="obj"/>
                                                <link dest="6cca2ae5" destField="segmental inventory" source="418d68da3a2d4006" sourceField="inventory"/>
                                                <link dest="5cd1f00d" destField="data" source="6cca2ae5" sourceField="segmental inventory"/>
                                                <extensions>
                                                    <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                                    <oga:notes>
                                                        <oga:note color="0xffff96" height="791" title="Published Inputs" width="310" x="25" y="100"/>
                                                        <oga:note color="0x96ff96" height="348" title="Segmental Totals" width="791" x="888" y="558">Segmental totals for session</oga:note>
                                                    </oga:notes>
                                                </extensions>
                                            </graph>
                                            <ogcn:published_input field="obj" name="table" ref="b25c5b3d1d7440da"/>
                                            <ogcn:published_input field="obj" name="speaker" ref="c221b0481e9c496b"/>
                                            <ogcn:published_input field="obj" name="session name" ref="6b3143df3116411b"/>
                                            <ogcn:published_input field="obj" name="report node" ref="4e5e792d"/>
                                            <ogcn:published_output field="segmental totals" name="segmental totals" ref="6cca2ae5"/>
                                            <ogcn:published_output field="segmental inventory" name="segmental inventory" ref="6cca2ae5"/>
                                            <extensions>
                                                <oga:meta x="788" y="153"/>
                                            </extensions>
                                        </ogcn:macro>
                                        <node id="eb28c5583c0f4ffb" name="Segmental Totals" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                                            <input name="totals" optional="false"/>
                                            <input name="subtotal" optional="false"/>
                                            <output name="totals" type="java.lang.Object"/>
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	inputs.add("totals", "", false, false);
	inputs.add("subtotal", "", false, false);

	outputs.add("totals", "", false, java.lang.Object);
}
	
function run(context) {
	var totals = context.get("totals");
	var subtotal = context.get("subtotal");

	sumcounts(totals.onset, subtotal.onset);
	sumcounts(totals.nucleus, subtotal.nucleus);
	sumcounts(totals.coda, subtotal.coda);
	sumcounts(totals.unknown, subtotal.unknown);

	context.put("totals", totals);
}

function sumcounts(total, subtotal) {
	total.target.count += subtotal.target.count;
	total.correct.count += subtotal.correct.count;
	total.substitution.count += subtotal.substitution.count;
	total.deletion.count += subtotal.deletion.count;
	total.epenthesis.count += subtotal.epenthesis.count;
}
]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="1162" y="135"/>
                                            </extensions>
                                        </node>
                                        <link dest="d0e50cd137aa45c3" destField="sessionName" source="9cd592ba93e14241" sourceField="obj"/>
                                        <link dest="d0e50cd137aa45c3" destField="tableMap" source="22103902a02f452c" sourceField="obj"/>
                                        <link dest="c243d0cc85994d01" destField="enabled" source="d0e50cd137aa45c3" sourceField="exists"/>
                                        <link dest="c243d0cc85994d01" destField="table" source="d0e50cd137aa45c3" sourceField="table"/>
                                        <link dest="c243d0cc85994d01" destField="speaker" source="2cde07591d49421f" sourceField="obj"/>
                                        <link dest="c243d0cc85994d01" destField="session name" source="9cd592ba93e14241" sourceField="obj"/>
                                        <link dest="eb28c5583c0f4ffb" destField="totals" source="9d4e5d5c75304010" sourceField="obj"/>
                                        <link dest="eb28c5583c0f4ffb" destField="subtotal" source="c243d0cc85994d01" sourceField="segmental totals"/>
                                        <link dest="eb28c5583c0f4ffb" destField="enabled" source="d0e50cd137aa45c3" sourceField="exists"/>
                                        <link dest="c243d0cc85994d01" destField="report node" source="64fcff23" sourceField="obj"/>
                                        <extensions>
                                            <oga:notes>
                                                <oga:note color="0xffff96" height="763" title="Published Inputs" width="312" x="26" y="187"/>
                                                <oga:note color="0x96ff96" height="266" title="Condition" width="400" x="709" y="69">This node is only executed if there are results in the current session for the current participant.</oga:note>
                                            </oga:notes>
                                            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                        </extensions>
                                    </graph>
                                    <ogcn:published_input field="obj" name="tableMap" ref="22103902a02f452c"/>
                                    <ogcn:published_input field="obj" name="speaker" ref="2cde07591d49421f"/>
                                    <ogcn:published_input field="obj" name="segmental totals" ref="9d4e5d5c75304010"/>
                                    <ogcn:published_input field="obj" name="report node" ref="64fcff23"/>
                                    <ogcn:published_output field="totals" name="totals" ref="eb28c5583c0f4ffb"/>
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.IterableClassNode.className"><![CDATA[java.util.Set]]></oga:property>
                                        </oga:settings>
                                        <oga:meta x="999" y="287"/>
                                    </extensions>
                                </ogcn:macro>
                                <node id="2a33337e87ae43a9" name="Setup Segmental Totals Table" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                                    <input name="totals" optional="false"/>
                                    <output name="table" type="ca.phon.query.report.datasource.DefaultTableDataSource"/>
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="__script"><![CDATA[importClass(Packages.ca.phon.query.report.datasource.DefaultTableDataSource)

function init(inputs, outputs) {
	inputs.add("totals", "", false, false);

	outputs.add("table", "", false, DefaultTableDataSource);
}

function run(context) {
	var totals = context.get("totals");
	var table = new DefaultTableDataSource();

	var colIdx = 0;
	table.setColumnTitle(colIdx++, "");
	table.setColumnTitle(colIdx++, "Onset");
	table.setColumnTitle(colIdx++, "Nucleus");
	table.setColumnTitle(colIdx++, "Coda");
	table.setColumnTitle(colIdx++, "Unknown");

	var idx = 0;
	var rowData = []
	// target
	rowData[idx++] = "# Target";
	rowData[idx++] = new java.lang.Integer(totals.onset.target.count);
	rowData[idx++] = new java.lang.Integer(totals.nucleus.target.count);
	rowData[idx++] = new java.lang.Integer(totals.coda.target.count);
	rowData[idx++] = new java.lang.Integer(totals.unknown.target.count);
	table.addRow(rowData);

	idx = 0;
	// correct
	rowData[idx++] = "# Correct";
	rowData[idx++] = new java.lang.Integer(totals.onset.correct.count);
	rowData[idx++] = new java.lang.Integer(totals.nucleus.correct.count);
	rowData[idx++] = new java.lang.Integer(totals.coda.correct.count);
	rowData[idx++] = new java.lang.Integer(totals.unknown.correct.count);
	table.addRow(rowData);

	idx = 0;
	// substitutions
	rowData[idx++] = "# Substitutions";
	rowData[idx++] = new java.lang.Integer(totals.onset.substitution.count);
	rowData[idx++] = new java.lang.Integer(totals.nucleus.substitution.count);
	rowData[idx++] = new java.lang.Integer(totals.coda.substitution.count);
	rowData[idx++] = new java.lang.Integer(totals.unknown.substitution.count);
	table.addRow(rowData);

	idx = 0;
	// deletions
	rowData[idx++] = "# Deletions";
	rowData[idx++] = new java.lang.Integer(totals.onset.deletion.count);
	rowData[idx++] = new java.lang.Integer(totals.nucleus.deletion.count);
	rowData[idx++] = new java.lang.Integer(totals.coda.deletion.count);
	rowData[idx++] = new java.lang.Integer(totals.unknown.deletion.count);
	table.addRow(rowData);

	idx = 0;
	// distortions
	rowData[idx++] = "# Distortions";
	rowData[idx++] = new java.lang.Integer(totals.onset.distortion.count);
	rowData[idx++] = new java.lang.Integer(totals.nucleus.distortion.count);
	rowData[idx++] = new java.lang.Integer(totals.coda.distortion.count);
	rowData[idx++] = new java.lang.Integer(totals.unknown.distortion.count);
	table.addRow(rowData);

	idx = 0;
	// epenthesis
	rowData[idx++] = "# Epenthesis";
	rowData[idx++] = new java.lang.Integer(totals.onset.epenthesis.count);
	rowData[idx++] = new java.lang.Integer(totals.nucleus.epenthesis.count);
	rowData[idx++] = new java.lang.Integer(totals.coda.epenthesis.count);
	rowData[idx++] = new java.lang.Integer(totals.unknown.epenthesis.count);
	table.addRow(rowData);

	idx = 0;
	// % correct
	rowData[idx++] = "% Correct";
	var pc = (totals.onset.target.count + totals.onset.epenthesis.count > 0 
		? (totals.onset.correct.count / (totals.onset.correct.count+totals.onset.substitution.count+totals.onset.deletion.count+totals.onset.distortion.count+totals.onset.epenthesis.count)) * 100.0 
		: 0.0);
	rowData[idx++] = new java.lang.Float(pc);

	pc = (totals.nucleus.target.count + totals.nucleus.epenthesis.count > 0
		? (totals.nucleus.correct.count / (totals.nucleus.correct.count+totals.nucleus.substitution.count+totals.nucleus.deletion.count+totals.nucleus.distortion.count+totals.nucleus.epenthesis.count)) * 100.0
		: 0.0);
	rowData[idx++] = new java.lang.Float(pc);

	pc = (totals.coda.target.count + totals.coda.epenthesis.count > 0 
		? (totals.coda.correct.count / (totals.coda.correct.count+totals.coda.substitution.count+totals.coda.deletion.count+totals.coda.distortion.count+totals.coda.epenthesis.count)) * 100.0
		: 0.0);
	rowData[idx++] = new java.lang.Float(pc);

	pc = (totals.unknown.target.count + totals.unknown.epenthesis.count > 0 
		? (totals.unknown.correct.count / (totals.unknown.correct.count+totals.unknown.substitution.count+totals.unknown.deletion.count+totals.unknown.distortion.count+totals.unknown.epenthesis.count)) * 100.0
		: 0.0);
	rowData[idx++] = new java.lang.Float(pc);
	table.addRow(rowData);
	
	context.put("table", table);
}
]]></oga:property>
                                        </oga:settings>
                                        <oga:meta x="1084" y="668"/>
                                    </extensions>
                                </node>
                                <node id="3042292c7cbe4d0b" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                    <input name="data" optional="false">Data to print</input>
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="dataTemplate"><![CDATA[$DATA]]></oga:property>
                                            <oga:property key="showText"><![CDATA[false]]></oga:property>
                                            <oga:property key="showTable"><![CDATA[true]]></oga:property>
                                            <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                        </oga:settings>
                                        <oga:meta x="1159" y="782">
                                            <oga:default for="buffer" type="java.lang.String">Segmental Totals_Speaker</oga:default>
                                        </oga:meta>
                                    </extensions>
                                </node>
                                <link dest="923b1235cde247a8" destField="table" source="fda3b374aa2e4b57" sourceField="obj"/>
                                <link dest="cd529cc9bedf4ecc" destField="collection" source="923b1235cde247a8" sourceField="keySet"/>
                                <link dest="cd529cc9bedf4ecc" destField="tableMap" source="923b1235cde247a8" sourceField="tableMap"/>
                                <link dest="cd529cc9bedf4ecc" destField="speaker" source="32b10bbefcb14fb6" sourceField="obj"/>
                                <link dest="3042292c7cbe4d0b" destField="data" source="2a33337e87ae43a9" sourceField="table"/>
                                <link dest="cd529cc9bedf4ecc" destField="segmental totals" source="57b2fd38a4c54ca8" sourceField="totals"/>
                                <link dest="2a33337e87ae43a9" destField="totals" source="cd529cc9bedf4ecc" sourceField="totals"/>
                                <link dest="3042292c7cbe4d0b" destField="buffer" source="15e52ca6" sourceField="bufferName"/>
                                <link dest="15e52ca6" destField="speaker" source="32b10bbefcb14fb6" sourceField="obj"/>
                                <link dest="6ced59c7" destField="sectionName" source="66eabc39" sourceField="value"/>
                                <link dest="66eabc39" destField="obj" source="32b10bbefcb14fb6" sourceField="obj"/>
                                <link dest="cd529cc9bedf4ecc" destField="report node" source="6ced59c7" sourceField="section"/>
                                <link dest="6ced59c7" destField="parent" source="5db72372" sourceField="obj"/>
                                <extensions>
                                    <oga:notes>
                                        <oga:note color="0xffff96" height="868" title="Published Inputs" width="302" x="68" y="117"/>
                                        <oga:note color="0x96ff96" height="353" title="Segmental Totals" width="629" x="772" y="614">Segmental totals for participant</oga:note>
                                    </oga:notes>
                                    <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                </extensions>
                            </graph>
                            <ogcn:published_input field="obj" name="table" ref="fda3b374aa2e4b57"/>
                            <ogcn:published_input field="obj" name="selectedSessions" ref="a1995dcea18b4ba9"/>
                            <ogcn:published_input field="obj" name="speaker" ref="32b10bbefcb14fb6"/>
                            <ogcn:published_input field="obj" name="report node" ref="5db72372"/>
                            <ogcn:published_output field="totals" name="totals" ref="cd529cc9bedf4ecc"/>
                            <extensions>
                                <oga:meta x="788" y="134"/>
                            </extensions>
                        </ogcn:macro>
                        <node id="1ccd59e9ffe049af" name="Segmental Totals" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                            <input name="totals" optional="false"/>
                            <input name="subtotal" optional="false"/>
                            <output name="totals" type="java.lang.Object"/>
                            <extensions>
                                <oga:settings>
                                    <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	inputs.add("totals", "", false, false);
	inputs.add("subtotal", "", false, false);

	outputs.add("totals", "", false, java.lang.Object);
}
	
function run(context) {
	var totals = context.get("totals");
	var subtotal = context.get("subtotal");

	sumcounts(totals.onset, subtotal.onset);
	sumcounts(totals.nucleus, subtotal.nucleus);
	sumcounts(totals.coda, subtotal.coda);
	sumcounts(totals.unknown, subtotal.unknown);

	context.put("totals", totals);
}

function sumcounts(total, subtotal) {
	total.target.count += subtotal.target.count;
	total.correct.count += subtotal.correct.count;
	total.substitution.count += subtotal.substitution.count;
	total.deletion.count += subtotal.deletion.count;
	total.epenthesis.count += subtotal.epenthesis.count;
}
]]></oga:property>
                                </oga:settings>
                                <oga:meta x="1049" y="140"/>
                            </extensions>
                        </node>
                        <link dest="e8ae4a39fdd74375" destField="speaker" source="7d1055dcc76e435a" sourceField="obj"/>
                        <link dest="7d1055dcc76e435a" destField="obj" source="4579a77279ca4a66" sourceField="obj"/>
                        <link dest="e8ae4a39fdd74375" destField="tableMap" source="16d59d355bab4424" sourceField="obj"/>
                        <link dest="e9d3beb84fbe42d4" destField="table" source="e8ae4a39fdd74375" sourceField="table"/>
                        <link dest="e9d3beb84fbe42d4" destField="enabled" source="e8ae4a39fdd74375" sourceField="exists"/>
                        <link dest="e9d3beb84fbe42d4" destField="selectedSessions" source="3c9691c6bb004e13" sourceField="obj"/>
                        <link dest="e9d3beb84fbe42d4" destField="speaker" source="7d1055dcc76e435a" sourceField="obj"/>
                        <link dest="1ccd59e9ffe049af" destField="totals" source="6e8d3cbf56644e64" sourceField="obj"/>
                        <link dest="1ccd59e9ffe049af" destField="subtotal" source="e9d3beb84fbe42d4" sourceField="totals"/>
                        <link dest="1ccd59e9ffe049af" destField="enabled" source="e8ae4a39fdd74375" sourceField="exists"/>
                        <link dest="e9d3beb84fbe42d4" destField="report node" source="109c1849" sourceField="obj"/>
                        <extensions>
                            <oga:notes>
                                <oga:note color="0xffff96" height="653" title="Published Inputs" width="371" x="33" y="160"/>
                            </oga:notes>
                            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                        </extensions>
                    </graph>
                    <ogcn:published_input field="obj" name="tableMap" ref="16d59d355bab4424"/>
                    <ogcn:published_input field="obj" name="selectedSessions" ref="3c9691c6bb004e13"/>
                    <ogcn:published_input field="obj" name="segmental totals" ref="6e8d3cbf56644e64"/>
                    <ogcn:published_input field="obj" name="report node" ref="109c1849"/>
                    <ogcn:published_output field="totals" name="totals" ref="1ccd59e9ffe049af"/>
                    <extensions>
                        <oga:settings>
                            <oga:property key="ca.gedge.opgraph.nodes.reflect.IterableClassNode.className"><![CDATA[java.util.ArrayList]]></oga:property>
                        </oga:settings>
                        <oga:meta x="825" y="187"/>
                    </extensions>
                </ogcn:macro>
                <node id="c7f69d3dc69a41e6" name="Setup Segmental Totals Table" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                    <input name="totals" optional="false"/>
                    <output name="table" type="ca.phon.query.report.datasource.DefaultTableDataSource"/>
                    <extensions>
                        <oga:settings>
                            <oga:property key="__script"><![CDATA[importClass(Packages.ca.phon.query.report.datasource.DefaultTableDataSource)

function init(inputs, outputs) {
	inputs.add("totals", "", false, false);

	outputs.add("table", "", false, DefaultTableDataSource);
}

function run(context) {
	var totals = context.get("totals");
	var table = new DefaultTableDataSource();

	var colIdx = 0;
	table.setColumnTitle(colIdx++, "");
	table.setColumnTitle(colIdx++, "Onset");
	table.setColumnTitle(colIdx++, "Nucleus");
	table.setColumnTitle(colIdx++, "Coda");
	table.setColumnTitle(colIdx++, "Unknown");

	var idx = 0;
	var rowData = []
	// target
	rowData[idx++] = "# Target";
	rowData[idx++] = new java.lang.Integer(totals.onset.target.count);
	rowData[idx++] = new java.lang.Integer(totals.nucleus.target.count);
	rowData[idx++] = new java.lang.Integer(totals.coda.target.count);
	rowData[idx++] = new java.lang.Integer(totals.unknown.target.count);
	table.addRow(rowData);

	idx = 0;
	// correct
	rowData[idx++] = "# Correct";
	rowData[idx++] = new java.lang.Integer(totals.onset.correct.count);
	rowData[idx++] = new java.lang.Integer(totals.nucleus.correct.count);
	rowData[idx++] = new java.lang.Integer(totals.coda.correct.count);
	rowData[idx++] = new java.lang.Integer(totals.unknown.correct.count);
	table.addRow(rowData);

	idx = 0;
	// substitutions
	rowData[idx++] = "# Substitutions";
	rowData[idx++] = new java.lang.Integer(totals.onset.substitution.count);
	rowData[idx++] = new java.lang.Integer(totals.nucleus.substitution.count);
	rowData[idx++] = new java.lang.Integer(totals.coda.substitution.count);
	rowData[idx++] = new java.lang.Integer(totals.unknown.substitution.count);
	table.addRow(rowData);

	idx = 0;
	// deletions
	rowData[idx++] = "# Deletions";
	rowData[idx++] = new java.lang.Integer(totals.onset.deletion.count);
	rowData[idx++] = new java.lang.Integer(totals.nucleus.deletion.count);
	rowData[idx++] = new java.lang.Integer(totals.coda.deletion.count);
	rowData[idx++] = new java.lang.Integer(totals.unknown.deletion.count);
	table.addRow(rowData);

	idx = 0;
	// distortions
	rowData[idx++] = "# Distortions";
	rowData[idx++] = new java.lang.Integer(totals.onset.distortion.count);
	rowData[idx++] = new java.lang.Integer(totals.nucleus.distortion.count);
	rowData[idx++] = new java.lang.Integer(totals.coda.distortion.count);
	rowData[idx++] = new java.lang.Integer(totals.unknown.distortion.count);
	table.addRow(rowData);

	idx = 0;
	// epenthesis
	rowData[idx++] = "# Epenthesis";
	rowData[idx++] = new java.lang.Integer(totals.onset.epenthesis.count);
	rowData[idx++] = new java.lang.Integer(totals.nucleus.epenthesis.count);
	rowData[idx++] = new java.lang.Integer(totals.coda.epenthesis.count);
	rowData[idx++] = new java.lang.Integer(totals.unknown.epenthesis.count);
	table.addRow(rowData);

	idx = 0;
	// % correct
	rowData[idx++] = "% Correct";
	var pc = (totals.onset.target.count + totals.onset.epenthesis.count > 0 
		? (totals.onset.correct.count / (totals.onset.correct.count+totals.onset.substitution.count+totals.onset.deletion.count+totals.onset.distortion.count+totals.onset.epenthesis.count)) * 100.0 
		: 0.0);
	rowData[idx++] = new java.lang.Float(pc);

	pc = (totals.nucleus.target.count + totals.nucleus.epenthesis.count > 0
		? (totals.nucleus.correct.count / (totals.nucleus.correct.count+totals.nucleus.substitution.count+totals.nucleus.deletion.count+totals.nucleus.distortion.count+totals.nucleus.epenthesis.count)) * 100.0
		: 0.0);
	rowData[idx++] = new java.lang.Float(pc);

	pc = (totals.coda.target.count + totals.coda.epenthesis.count > 0 
		? (totals.coda.correct.count / (totals.coda.correct.count+totals.coda.substitution.count+totals.coda.deletion.count+totals.coda.distortion.count+totals.coda.epenthesis.count)) * 100.0
		: 0.0);
	rowData[idx++] = new java.lang.Float(pc);

	pc = (totals.unknown.target.count + totals.unknown.epenthesis.count > 0 
		? (totals.unknown.correct.count / (totals.unknown.correct.count+totals.unknown.substitution.count+totals.unknown.deletion.count+totals.unknown.distortion.count+totals.unknown.epenthesis.count)) * 100.0
		: 0.0);
	rowData[idx++] = new java.lang.Float(pc);
	table.addRow(rowData);
	
	context.put("table", table);
}
]]></oga:property>
                        </oga:settings>
                        <oga:meta x="1040" y="618"/>
                    </extensions>
                </node>
                <node id="146e30f76f4b4ecf" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                    <input name="data" optional="false">Data to print</input>
                    <extensions>
                        <oga:settings>
                            <oga:property key="dataTemplate"><![CDATA[$DATA]]></oga:property>
                            <oga:property key="showText"><![CDATA[false]]></oga:property>
                            <oga:property key="showTable"><![CDATA[true]]></oga:property>
                            <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                        </oga:settings>
                        <oga:meta x="1322" y="629">
                            <oga:default for="buffer" type="java.lang.String">Segmental Totals_All</oga:default>
                        </oga:meta>
                    </extensions>
                </node>
                <link dest="e7eb0f6277c94cc7" destField="results" source="a23f99c423d64c49" sourceField="obj"/>
                <link dest="4bb42cb62a99463c" destField="tableMap" source="a067a50295fe48ce" sourceField="tableMap"/>
                <link dest="e7eb0f6277c94cc7" destField="project" source="2564dd40d5ce4021" sourceField="obj"/>
                <link dest="4bb42cb62a99463c" destField="selectedSessions" source="a12ca1eed6584c87" sourceField="obj"/>
                <link dest="4bb42cb62a99463c" destField="collection" source="9a6b0aacb31f456e" sourceField="obj"/>
                <link dest="a067a50295fe48ce" destField="table" source="e7eb0f6277c94cc7" sourceField="table"/>
                <link dest="146e30f76f4b4ecf" destField="data" source="c7f69d3dc69a41e6" sourceField="table"/>
                <link dest="4bb42cb62a99463c" destField="segmental totals" source="76dc324150b34376" sourceField="totals"/>
                <link dest="c7f69d3dc69a41e6" destField="totals" source="4bb42cb62a99463c" sourceField="totals"/>
                <link dest="4bb42cb62a99463c" destField="report node" source="2fef4098" sourceField="obj"/>
                <extensions>
                    <oga:notes>
                        <oga:note color="0xffff96" height="979" title="Published Inputs" width="356" x="9" y="7"/>
                    </oga:notes>
                    <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                </extensions>
            </graph>
            <ogcn:published_input field="obj" name="project" ref="2564dd40d5ce4021"/>
            <ogcn:published_input field="obj" name="results" ref="a23f99c423d64c49"/>
            <ogcn:published_input field="obj" name="selected sessions" ref="a12ca1eed6584c87"/>
            <ogcn:published_input field="obj" name="selected participants" ref="9a6b0aacb31f456e"/>
            <ogcn:published_input field="obj" name="report node" ref="2fef4098"/>
            <ogcn:published_output field="obj" name="obj" ref="2fef4098"/>
            <extensions>
                <oga:meta x="737" y="112"/>
            </extensions>
        </ogcn:macro>
        <ogcn:macro id="4b787603" name="Print Report Template" type="ca.gedge.opgraph.nodes.general.MacroNode">
            <graph id="1a4972dc">
                <node id="3a2ba772" name="obj" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                    <extensions>
                        <oga:settings>
                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.app.opgraph.report.tree.ReportTree]]></oga:property>
                        </oga:settings>
                        <oga:meta x="15" y="15"/>
                    </extensions>
                </node>
                <node id="7a896d35" name="obj1" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                    <extensions>
                        <oga:settings>
                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.app.opgraph.report.tree.ReportTreeNode]]></oga:property>
                        </oga:settings>
                        <oga:meta x="15" y="136"/>
                    </extensions>
                </node>
                <node id="32803228" name="ReportTree" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                    <extensions>
                        <oga:settings>
                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.app.opgraph.report.tree.ReportTree]]></oga:property>
                        </oga:settings>
                        <oga:meta x="255" y="15"/>
                    </extensions>
                </node>
                <node id="78bb5280" name="ReportTreeNode" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                    <extensions>
                        <oga:settings>
                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.app.opgraph.report.tree.ReportTreeNode]]></oga:property>
                        </oga:settings>
                        <oga:meta x="289" y="136"/>
                    </extensions>
                </node>
                <node id="5e185383" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                    <input name="data" optional="false">Data to print</input>
                    <extensions>
                        <oga:settings>
                            <oga:property key="dataTemplate"><![CDATA[$DATA]]></oga:property>
                            <oga:property key="showText"><![CDATA[true]]></oga:property>
                            <oga:property key="showTable"><![CDATA[false]]></oga:property>
                            <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                        </oga:settings>
                        <oga:meta x="572" y="29">
                            <oga:default for="buffer" type="java.lang.String">Report Template</oga:default>
                            <oga:default for="append" type="java.lang.Boolean">true</oga:default>
                        </oga:meta>
                    </extensions>
                </node>
                <link dest="32803228" destField="obj" source="3a2ba772" sourceField="obj"/>
                <link dest="78bb5280" destField="obj" source="7a896d35" sourceField="obj"/>
                <link dest="5e185383" destField="data" source="32803228" sourceField="reportTemplate"/>
                <extensions>
                    <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                </extensions>
            </graph>
            <ogcn:published_input field="obj" name="obj" ref="3a2ba772"/>
            <ogcn:published_input field="obj" name="obj1" ref="7a896d35"/>
            <extensions>
                <oga:meta x="802" y="455"/>
            </extensions>
        </ogcn:macro>
        <link dest="b7c53c9330914507" destField="parameters" source="43d39e9b67384156" sourceField="parameters"/>
        <link dest="7ca6b2ef" destField="project" source="35a0fbb5" sourceField="obj"/>
        <link dest="7ca6b2ef" destField="sessions" source="6420582b" sourceField="obj"/>
        <link dest="7e7f6d0b48264831" destField="project" source="7ca6b2ef" sourceField="project"/>
        <link dest="7e7f6d0b48264831" destField="results" source="7ca6b2ef" sourceField="results"/>
        <link dest="7e7f6d0b48264831" destField="selected sessions" source="6420582b" sourceField="obj"/>
        <link dest="7e7f6d0b48264831" destField="selected participants" source="338df44a" sourceField="obj"/>
        <link dest="40612d0c" destField="sectionName" source="b7c53c9330914507" sourceField="reportTitle"/>
        <link dest="40612d0c" destField="parent" source="40e266e4" sourceField="root"/>
        <link dest="7e7f6d0b48264831" destField="report node" source="40612d0c" sourceField="section"/>
        <link dest="4b787603" destField="obj1" source="7e7f6d0b48264831" sourceField="obj"/>
        <link dest="4b787603" destField="obj" source="40e266e4" sourceField="reportTree"/>
        <extensions>
            <opqry:nodewizard type="ca.phon.app.opgraph.analysis.AnalysisWizardExtension">
                <opqry:info format="html" title="WAP">
                    <opqry:message/>
                </opqry:info>
                <opqry:node ref="7ca6b2ef">
                    <opqry:info format="html" title="Query : Data Tiers">
                        <opqry:message/>
                    </opqry:info>
                </opqry:node>
                <opqry:report-template name="Report Prefix"/>
                <opqry:report-template name="Report Suffix"/>
            </opqry:nodewizard>
            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
        </extensions>
    </graph>
</opgraph>
