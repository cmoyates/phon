<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<opgraph xmlns="http://gedge.ca/ns/opgraph" xmlns:nes="https://www.phon.ca/ns/node_editor" xmlns:oga="http://gedge.ca/ns/opgraph-app" xmlns:ogcn="http://gedge.ca/ns/opgraph-common-nodes" xmlns:opqry="https://phon.ca/ns/opgraph_query" xmlns:qry="http://phon.ling.mun.ca/ns/query">
    <graph id="root">
        <node id="35a0fbb5" name="Project" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
            <extensions>
                <oga:settings>
                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.project.Project]]></oga:property>
                    <oga:property key="contextKey"><![CDATA[_project]]></oga:property>
                </oga:settings>
                <oga:meta x="15" y="15"/>
            </extensions>
        </node>
        <node id="6420582b" name="Selected Sessions" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
            <extensions>
                <oga:settings>
                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.util.ArrayList]]></oga:property>
                    <oga:property key="contextKey"><![CDATA[_selectedSessions]]></oga:property>
                </oga:settings>
                <oga:meta x="15" y="236"/>
            </extensions>
        </node>
        <node id="338df44a" name="Selected Participants" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
            <extensions>
                <oga:settings>
                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.util.ArrayList]]></oga:property>
                    <oga:property key="contextKey"><![CDATA[_selectedParticipants]]></oga:property>
                </oga:settings>
                <oga:meta x="15" y="331"/>
            </extensions>
        </node>
        <node id="43d39e9b67384156" name="Parameters" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
            <extensions>
                <oga:settings>
                    <oga:property key="__script"><![CDATA[var reportTitleParamInfo = {
	"id": "reportTitle",
	"title": "Report Title",
	"def": "Report",
	"prompt": "Enter report title"
};
var reportTitleParam;
var reportTitle = reportTitleParamInfo.def;

function setup_params(params) {
	reportTitleParam = new StringScriptParam(
			reportTitleParamInfo.id,
			reportTitleParamInfo.title,
			reportTitleParamInfo.def);
     reportTitleParam.setPrompt(reportTitleParamInfo.prompt);
	params.add(reportTitleParam);
}
]]></oga:property>
                    <oga:property key="reportTitle"><![CDATA[Word-level Analysis of Polysyllables]]></oga:property>
                </oga:settings>
                <oga:meta x="18" y="434"/>
            </extensions>
        </node>
        <opqry:queryNode id="7ca6b2ef" name="Query : Data Tiers" type="ca.phon.app.opgraph.nodes.query.QueryNode">
            <qry:query xmlns="http://phon.ling.mun.ca/ns/query" date="2017-11-22T15:24:22.506-03:30" name="Data Tiers" uuid="b1ebdf37-f49b-43dd-8c08-8addaf9b50be">
                <script>
                    <url ref="Data Tiers" rel="stock"/>
                    <param id="filters.alignedWord.patternFilter.filter">AA+</param>
                    <param id="filters.alignedWord.patternFilter.filterType">Stress pattern</param>
                    <param id="filters.alignedWord.tier">IPA Target</param>
                    <param id="filters.primary.patternFilter.filter">.+</param>
                    <param id="filters.primary.patternFilter.filterType">Regular expression</param>
                    <param id="filters.primary.tier">Orthography</param>
                    <param id="filters.searchBy.searchBy">Word</param>
                    <param id="filters.word.searchByWord">true</param>
                    <param id="filters.wordTiers.tiers">Target Syllabification, Actual Syllabification, Phone Alignment</param>
                </script>
            </qry:query>
            <extensions>
                <oga:settings/>
                <oga:meta x="399" y="105"/>
            </extensions>
        </opqry:queryNode>
        <ogcn:macro id="b7c53c9330914507" name="Get Report Title" type="ca.gedge.opgraph.nodes.general.MacroNode">
            <graph id="1d8408db">
                <node id="40d46ee05cb1462c" name="String#&lt;init&gt;(String)" type="class:ca.gedge.opgraph.nodes.reflect.ConstructorNode">
                    <extensions>
                        <oga:settings>
                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.classMember"><![CDATA[<init>(java.lang.String)]]></oga:property>
                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.declaredClass"><![CDATA[java.lang.String]]></oga:property>
                        </oga:settings>
                        <oga:meta x="15" y="15">
                            <oga:default for="arg1" type="java.lang.String">reportTitle</oga:default>
                        </oga:meta>
                    </extensions>
                </node>
                <node id="a8de832c83754f93" name="Map#get(Object)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                    <extensions>
                        <oga:settings>
                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[get(java.lang.Object)]]></oga:property>
                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.util.Map]]></oga:property>
                        </oga:settings>
                        <oga:meta x="215" y="15"/>
                    </extensions>
                </node>
                <node id="5fba0bae341f4e52" name="Object#toString()" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                    <extensions>
                        <oga:settings>
                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[toString()]]></oga:property>
                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.Object]]></oga:property>
                        </oga:settings>
                        <oga:meta x="392" y="15"/>
                    </extensions>
                </node>
                <link dest="a8de832c83754f93" destField="arg1" source="40d46ee05cb1462c" sourceField="value"/>
                <link dest="5fba0bae341f4e52" destField="obj" source="a8de832c83754f93" sourceField="value"/>
            </graph>
            <ogcn:published_input field="obj" name="parameters" ref="a8de832c83754f93"/>
            <ogcn:published_output field="value" name="reportTitle" ref="5fba0bae341f4e52"/>
            <extensions>
                <oga:meta x="246" y="436"/>
            </extensions>
        </ogcn:macro>
        <ogcn:macro id="7e7f6d0b48264831" name="Report" type="ca.gedge.opgraph.nodes.general.MacroNode">
            <graph id="5643bf27">
                <node id="a76bba62a1b840ab" name="reportTitle" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                    <extensions>
                        <oga:settings>
                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.lang.String]]></oga:property>
                        </oga:settings>
                        <oga:meta x="42" y="57"/>
                    </extensions>
                </node>
                <node id="2564dd40d5ce4021" name="project" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                    <extensions>
                        <oga:settings>
                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.project.Project]]></oga:property>
                        </oga:settings>
                        <oga:meta x="42" y="152"/>
                    </extensions>
                </node>
                <node id="a23f99c423d64c49" name="results" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                    <extensions>
                        <oga:settings>
                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[[Lca.phon.query.db.ResultSet;]]></oga:property>
                        </oga:settings>
                        <oga:meta x="42" y="373"/>
                    </extensions>
                </node>
                <node id="a12ca1eed6584c87" name="selectedSessions" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                    <extensions>
                        <oga:settings>
                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.util.ArrayList]]></oga:property>
                        </oga:settings>
                        <oga:meta x="42" y="468"/>
                    </extensions>
                </node>
                <node id="9a6b0aacb31f456e" name="selected participants" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                    <extensions>
                        <oga:settings>
                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.util.ArrayList]]></oga:property>
                        </oga:settings>
                        <oga:meta x="42" y="563"/>
                    </extensions>
                </node>
                <node id="76dc324150b34376" name="Setup Segmental Totals" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                    <output name="totals" type="java.lang.Object"/>
                    <extensions>
                        <oga:settings>
                            <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	outputs.add("totals", "", false, java.lang.Object);
}

function run(context) {
	var totals = {
		"onset": {
			"target": { "count": 0, "positions": [] },
			"correct": { "count": 0, "positions": [] },
			"substitution": { "count": 0, "positions": [] },
			"deletion": { "count": 0, "positions": [] },
			"distortion": { "count": 0, "positions": [] },
			"epenthesis": { "count": 0, "positions": [] }
		},
		"nucleus": {
			"target": { "count": 0, "positions": [] },
			"correct": { "count": 0, "positions": [] },
			"substitution": { "count": 0, "positions": [] },
			"deletion": { "count": 0, "positions": [] },
			"distortion": { "count": 0, "positions": [] },
			"epenthesis": { "count": 0, "positions": [] }
		},
		"coda": {
			"target": { "count": 0, "positions": [] },
			"correct": { "count": 0, "positions": [] },
			"substitution": { "count": 0, "positions": [] },
			"deletion": { "count": 0, "positions": [] },
			"distortion": { "count": 0, "positions": [] },
			"epenthesis": { "count": 0, "positions": [] }
		},
		"unknown": {
			"target": { "count": 0, "positions": [] },
			"correct": { "count": 0, "positions": [] },
			"substitution": { "count": 0, "positions": [] },
			"deletion": { "count": 0, "positions": [] },
			"distortion": { "count": 0, "positions": [] },
			"epenthesis": { "count": 0, "positions": [] }
		}
	};

	context.put("totals", totals);
}
]]></oga:property>
                        </oga:settings>
                        <oga:meta x="663" y="575"/>
                    </extensions>
                </node>
                <node id="315c425357194883" name="script" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                    <extensions>
                        <oga:settings>
                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.script.QueryScript]]></oga:property>
                        </oga:settings>
                        <oga:meta x="42" y="658"/>
                    </extensions>
                </node>
                <node id="12b64feb22f6497b" name="parameters" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                    <extensions>
                        <oga:settings>
                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.util.Map]]></oga:property>
                        </oga:settings>
                        <oga:meta x="42" y="879"/>
                    </extensions>
                </node>
                <node id="e7eb0f6277c94cc7" type="class:ca.phon.app.opgraph.nodes.table.ResultsToTableNode">
                    <extensions>
                        <oga:settings>
                            <oga:property key="includeMetadata"><![CDATA[true]]></oga:property>
                            <oga:property key="includeTierInfo"><![CDATA[true]]></oga:property>
                            <oga:property key="includeSpeakerInfo"><![CDATA[true]]></oga:property>
                            <oga:property key="includeSessionInfo"><![CDATA[true]]></oga:property>
                        </oga:settings>
                        <oga:meta x="378" y="184"/>
                    </extensions>
                </node>
                <ogcn:macro id="ab51fa1368b04671" name="Add Report Title" type="ca.gedge.opgraph.nodes.general.MacroNode">
                    <graph id="745ed7d9">
                        <node id="c75cb50b27164de6" name="arg2" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                            <extensions>
                                <oga:settings>
                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.lang.String]]></oga:property>
                                </oga:settings>
                                <oga:meta x="15" y="15"/>
                            </extensions>
                        </node>
                        <node id="a3766aefc94143" name="obj" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                            <extensions>
                                <oga:settings>
                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.util.Map]]></oga:property>
                                </oga:settings>
                                <oga:meta x="15" y="146"/>
                            </extensions>
                        </node>
                        <node id="7587093cf77944ea" name="reportTitle (key)" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                            <extensions>
                                <oga:settings>
                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.lang.String]]></oga:property>
                                </oga:settings>
                                <oga:meta x="15" y="241">
                                    <oga:default for="obj" type="java.lang.String">reportTitle</oga:default>
                                </oga:meta>
                            </extensions>
                        </node>
                        <node id="fb34d1a03c22470a" name="Map" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                            <extensions>
                                <oga:settings>
                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.util.Map]]></oga:property>
                                </oga:settings>
                                <oga:meta x="266" y="195"/>
                            </extensions>
                        </node>
                        <node id="50f71ca0c8d4169" name="Map#put(Object,Object)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                            <extensions>
                                <oga:settings>
                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[put(java.lang.Object,java.lang.Object)]]></oga:property>
                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.util.Map]]></oga:property>
                                </oga:settings>
                                <oga:meta x="278" y="64"/>
                            </extensions>
                        </node>
                        <link dest="50f71ca0c8d4169" destField="obj" source="fb34d1a03c22470a" sourceField="obj"/>
                        <link dest="50f71ca0c8d4169" destField="arg1" source="7587093cf77944ea" sourceField="obj"/>
                        <link dest="fb34d1a03c22470a" destField="obj" source="a3766aefc94143" sourceField="obj"/>
                        <link dest="50f71ca0c8d4169" destField="arg2" source="c75cb50b27164de6" sourceField="obj"/>
                    </graph>
                    <ogcn:published_input field="obj" name="parameters" ref="a3766aefc94143"/>
                    <ogcn:published_input field="obj" name="reportTitle" ref="c75cb50b27164de6"/>
                    <ogcn:published_output field="obj" name="obj" ref="fb34d1a03c22470a"/>
                    <extensions>
                        <oga:meta x="388" y="407"/>
                    </extensions>
                </ogcn:macro>
                <node id="a067a50295fe48ce" name="Split Table by Speaker" type="class:ca.phon.app.opgraph.nodes.table.TableScriptNode">
                    <output name="keySet" type="java.util.Set">Unique values from given column name</output>
                    <output name="tableMap" type="java.util.Map">Map of key -&gt; table values</output>
                    <extensions>
                        <oga:settings>
                            <oga:property key="columnName"><![CDATA[Speaker]]></oga:property>
                            <oga:property key="__script"><![CDATA[/*
 * Phon - An open source tool for research in phonology.
 * Copyright (C) 2005 - 2017, Gregory Hedlund <ghedlund@mun.ca> and Yvan Rose <yrose@mun.ca>
 * Dept of Linguistics, Memorial University <https://phon.ca>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

 /**
  * Split Table.js
  *
  * Script for use with ca.phon.app.opgraph.nodes.table.TableScriptNode
  *
  * Split table based on column name.  Two outputs
  * are produced, a set of keys from the column used in the filter  and a
  * map of key -> table values.
  */

var columnParamInfo = {
	"id": "columnName",
	"title": "Column Name",
	"def": "",
	"prompt": "Enter column name"
}

function setup_params(params) {
	var columnParam = new StringScriptParam(
		columnParamInfo.id,
		columnParamInfo.title,
		columnParamInfo.def);
	columnParam.setPrompt(columnParamInfo.prompt);
	params.add(columnParam);
}

// add custom inputs/outputs here
function init(inputs, outputs) {
	outputs.add("keySet", "Unique values from given column name", false, java.util.Set);
	outputs.add("tableMap", "Map of key -> table values", false, java.util.Map);
}

/*
 * Create a new table with the same schema as the inputTable
 */
function setupTable(inputTable) {
    var table = new DefaultTableDataSource();
    for(c = 0; c < inputTable.columnCount; c++) {
	    var colTitle = inputTable.getColumnTitle(c);
	    table.setColumnTitle(c, colTitle);
	}
	return table;
}

// run operation on table
function tableOp(context, table) {
	// find table column index
	col = table.getColumnIndex(columnName);

	if(col < 0)
		return; // column not found

	var tableMap = new java.util.LinkedHashMap();

	for(row = 0; row < table.rowCount; row++) {
	    // use string value as row key
		var rowKey = Packages.ca.phon.formatter.FormatterUtil.format(table.getValueAt(row, col));

		var keyTable = tableMap.get(rowKey);
		if(keyTable == null) {
		    keyTable = setupTable(table);
		    tableMap.put(rowKey, keyTable);
		}
		keyTable.addRow(table.getRow(row));
	}

	context.put("keySet", tableMap.keySet());
	context.put("tableMap", tableMap);
}
]]></oga:property>
                        </oga:settings>
                        <oga:meta x="581" y="184"/>
                    </extensions>
                </node>
                <ogcn:macro id="108587762d784db1" name="Start Report Template" type="ca.gedge.opgraph.nodes.general.MacroNode">
                    <graph id="3fd7a583">
                        <ogcn:macro id="90a5d75e19e94b6c" name="Get Process Name" type="ca.gedge.opgraph.nodes.general.MacroNode">
                            <graph id="5ea3b27e">
                                <node id="5ead577d496b470d" name="String#&lt;init&gt;(String)" type="class:ca.gedge.opgraph.nodes.reflect.ConstructorNode">
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.classMember"><![CDATA[<init>(java.lang.String)]]></oga:property>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.declaredClass"><![CDATA[java.lang.String]]></oga:property>
                                        </oga:settings>
                                        <oga:meta x="78" y="88">
                                            <oga:default for="arg1" type="java.lang.String">reportTitle</oga:default>
                                        </oga:meta>
                                    </extensions>
                                </node>
                                <node id="ce0f777ad5f943e5" name="Map#get(Object)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[get(java.lang.Object)]]></oga:property>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.util.Map]]></oga:property>
                                        </oga:settings>
                                        <oga:meta x="236" y="91"/>
                                    </extensions>
                                </node>
                                <node id="965a853ba23c4009" name="Object#toString()" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[toString()]]></oga:property>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.Object]]></oga:property>
                                        </oga:settings>
                                        <oga:meta x="393" y="100"/>
                                    </extensions>
                                </node>
                                <link dest="ce0f777ad5f943e5" destField="arg1" source="5ead577d496b470d" sourceField="value"/>
                                <link dest="965a853ba23c4009" destField="obj" source="ce0f777ad5f943e5" sourceField="value"/>
                            </graph>
                            <ogcn:published_input field="obj" name="parameters" ref="ce0f777ad5f943e5"/>
                            <ogcn:published_output field="value" name="value" ref="965a853ba23c4009"/>
                            <extensions>
                                <oga:meta x="59" y="43"/>
                            </extensions>
                        </ogcn:macro>
                        <node id="fe1d5417f4ed4d9f" type="class:ca.phon.app.opgraph.nodes.log.PrintScriptParameters">
                            <extensions>
                                <oga:settings>
                                    <oga:property key="includes"/>
                                    <oga:property key="printOnlyChanged"><![CDATA[true]]></oga:property>
                                    <oga:property key="excludes"><![CDATA[@Participant Filter]]></oga:property>
                                </oga:settings>
                                <oga:meta x="62" y="172"/>
                            </extensions>
                        </node>
                        <node id="77a174d8a1c64516" name="Add to Report Template" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                            <input name="data" optional="false">Data to print</input>
                            <extensions>
                                <oga:settings>
                                    <oga:property key="dataTemplate"><![CDATA[
#h1("$DATA")
]]></oga:property>
                                    <oga:property key="showText"><![CDATA[true]]></oga:property>
                                    <oga:property key="showTable"><![CDATA[false]]></oga:property>
                                    <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                </oga:settings>
                                <oga:meta x="349" y="38">
                                    <oga:default for="buffer" type="java.lang.String">Report Template</oga:default>
                                    <oga:default for="append" type="java.lang.Boolean">true</oga:default>
                                </oga:meta>
                            </extensions>
                        </node>
                        <node id="19c4b07b5cf543a5" name="Add to Report Template" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                            <input name="data" optional="false">Data to print</input>
                            <extensions>
                                <oga:settings>
                                    <oga:property key="dataTemplate"><![CDATA[
#h2("Parameters")

$DATA
]]></oga:property>
                                    <oga:property key="showText"><![CDATA[true]]></oga:property>
                                    <oga:property key="showTable"><![CDATA[false]]></oga:property>
                                    <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                </oga:settings>
                                <oga:meta x="355" y="183">
                                    <oga:default for="buffer" type="java.lang.String">Report Template</oga:default>
                                    <oga:default for="append" type="java.lang.Boolean">true</oga:default>
                                </oga:meta>
                            </extensions>
                        </node>
                        <link dest="77a174d8a1c64516" destField="data" source="90a5d75e19e94b6c" sourceField="value"/>
                        <link dest="19c4b07b5cf543a5" destField="data" source="fe1d5417f4ed4d9f" sourceField="text"/>
                        <extensions>
                            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                        </extensions>
                    </graph>
                    <ogcn:published_input field="parameters" name="parameters" ref="90a5d75e19e94b6c"/>
                    <ogcn:published_input field="script" name="script" ref="fe1d5417f4ed4d9f"/>
                    <extensions>
                        <oga:meta x="599" y="407"/>
                    </extensions>
                </ogcn:macro>
                <ogcn:macro id="4bb42cb62a99463c" name="For Each Participant" type="ca.gedge.opgraph.nodes.reflect.IterableClassNode">
                    <graph id="12dc3dcb">
                        <node id="4579a77279ca4a66" name="Current Object" type="class:ca.gedge.opgraph.nodes.reflect.ContextualItemClassNode">
                            <extensions>
                                <oga:settings>
                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ContextualItemClassNode.key"><![CDATA[currentValue]]></oga:property>
                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ContextualItemClassNode.declaredClass"><![CDATA[java.lang.Object]]></oga:property>
                                </oga:settings>
                                <oga:meta x="48" y="48"/>
                            </extensions>
                        </node>
                        <node id="16d59d355bab4424" name="Table Map" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                            <extensions>
                                <oga:settings>
                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.util.Map]]></oga:property>
                                </oga:settings>
                                <oga:meta x="68" y="208"/>
                            </extensions>
                        </node>
                        <node id="3c9691c6bb004e13" name="Selected Sessions" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                            <extensions>
                                <oga:settings>
                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.util.ArrayList]]></oga:property>
                                    <oga:property key="contextKey"><![CDATA[_selectedSessions]]></oga:property>
                                </oga:settings>
                                <oga:meta x="69" y="310"/>
                            </extensions>
                        </node>
                        <node id="6e8d3cbf56644e64" name="Segmental Totals" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                            <extensions>
                                <oga:settings>
                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.lang.Object]]></oga:property>
                                    <oga:property key="contextKey"/>
                                </oga:settings>
                                <oga:meta x="69" y="424"/>
                            </extensions>
                        </node>
                        <node id="7d1055dcc76e435a" name="To Participant Object" type="class:ca.gedge.opgraph.nodes.reflect.ObjectCastNode">
                            <extensions>
                                <oga:settings>
                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectCastNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                </oga:settings>
                                <oga:meta x="224" y="49"/>
                            </extensions>
                        </node>
                        <ogcn:macro id="e8ae4a39fdd74375" name="Get Table of Results For Speaker" type="ca.gedge.opgraph.nodes.general.MacroNode">
                            <graph id="2d433dee">
                                <node id="7a99452f69514e84" name="Object#toString()" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[toString()]]></oga:property>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.Object]]></oga:property>
                                        </oga:settings>
                                        <oga:meta x="105" y="70"/>
                                    </extensions>
                                </node>
                                <node id="2aa78b824a3b47b5" name="Map#get(Object)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[get(java.lang.Object)]]></oga:property>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.util.Map]]></oga:property>
                                        </oga:settings>
                                        <oga:meta x="296" y="73"/>
                                    </extensions>
                                </node>
                                <node id="6d807e2151704bab" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                                    <output name="exists" type="java.lang.Boolean">does table exist</output>
                                    <output name="table" type="ca.phon.query.report.datasource.DefaultTableDataSource">table if exists, undefined otherwise</output>
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="__script"><![CDATA[
// setup input/output fields
function init(inputFields, outputFields) {
	inputFields.add("table", "");
	outputFields.add("exists", "does table exist", false, java.lang.Boolean);
	outputFields.add("table", "table if exists, undefined otherwise", false, Packages.ca.phon.query.report.datasource.DefaultTableDataSource);
}

function run(context) {
	var tableExists =
		(context.containsKey("table") && context.get("table") != null);
	context.put("exists", tableExists);
	context.put("table", context.get("table"));
}
]]></oga:property>
                                        </oga:settings>
                                        <oga:meta x="514" y="94"/>
                                    </extensions>
                                </node>
                                <link dest="2aa78b824a3b47b5" destField="arg1" source="7a99452f69514e84" sourceField="value"/>
                                <link dest="6d807e2151704bab" destField="table" source="2aa78b824a3b47b5" sourceField="value"/>
                                <extensions>
                                    <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                </extensions>
                            </graph>
                            <ogcn:published_input field="obj" name="speaker" ref="7a99452f69514e84"/>
                            <ogcn:published_input field="obj" name="tableMap" ref="2aa78b824a3b47b5"/>
                            <ogcn:published_output field="exists" name="exists" ref="6d807e2151704bab"/>
                            <ogcn:published_output field="table" name="table" ref="6d807e2151704bab"/>
                            <extensions>
                                <oga:meta x="506" y="127"/>
                            </extensions>
                        </ogcn:macro>
                        <ogcn:macro id="e9d3beb84fbe42d4" name="If Speaker has Results" type="ca.gedge.opgraph.nodes.general.MacroNode">
                            <graph id="1721faf2">
                                <node id="fda3b374aa2e4b57" name="Table" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                        </oga:settings>
                                        <oga:meta x="100" y="177"/>
                                    </extensions>
                                </node>
                                <node id="a1995dcea18b4ba9" name="Selected Sessions" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.util.ArrayList]]></oga:property>
                                            <oga:property key="contextKey"><![CDATA[_selectedSessions]]></oga:property>
                                        </oga:settings>
                                        <oga:meta x="109" y="327"/>
                                    </extensions>
                                </node>
                                <node id="32b10bbefcb14fb6" name="Participant" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                            <oga:property key="contextKey"/>
                                        </oga:settings>
                                        <oga:meta x="101" y="443"/>
                                    </extensions>
                                </node>
                                <node id="57b2fd38a4c54ca8" name="Setup Segmental Totals" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                                    <output name="totals" type="java.lang.Object"/>
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	outputs.add("totals", "", false, java.lang.Object);
}

function run(context) {
	var totals = {
		"onset": {
			"target": { "count": 0, "positions": [] },
			"correct": { "count": 0, "positions": [] },
			"substitution": { "count": 0, "positions": [] },
			"deletion": { "count": 0, "positions": [] },
			"distortion": { "count": 0, "positions": [] },
			"epenthesis": { "count": 0, "positions": [] }
		},
		"nucleus": {
			"target": { "count": 0, "positions": [] },
			"correct": { "count": 0, "positions": [] },
			"substitution": { "count": 0, "positions": [] },
			"deletion": { "count": 0, "positions": [] },
			"distortion": { "count": 0, "positions": [] },
			"epenthesis": { "count": 0, "positions": [] }
		},
		"coda": {
			"target": { "count": 0, "positions": [] },
			"correct": { "count": 0, "positions": [] },
			"substitution": { "count": 0, "positions": [] },
			"deletion": { "count": 0, "positions": [] },
			"distortion": { "count": 0, "positions": [] },
			"epenthesis": { "count": 0, "positions": [] }
		},
		"unknown": {
			"target": { "count": 0, "positions": [] },
			"correct": { "count": 0, "positions": [] },
			"substitution": { "count": 0, "positions": [] },
			"deletion": { "count": 0, "positions": [] },
			"distortion": { "count": 0, "positions": [] },
			"epenthesis": { "count": 0, "positions": [] }
		}
	};

	context.put("totals", totals);
}
]]></oga:property>
                                        </oga:settings>
                                        <oga:meta x="674" y="649"/>
                                    </extensions>
                                </node>
                                <node id="923b1235cde247a8" name="Split Table by Session" type="class:ca.phon.app.opgraph.nodes.table.TableScriptNode">
                                    <output name="keySet" type="java.util.Set">Unique values from given column name</output>
                                    <output name="tableMap" type="java.util.Map">Map of key -&gt; table values</output>
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="columnName"><![CDATA[Session]]></oga:property>
                                            <oga:property key="__script"><![CDATA[/*
 * Phon - An open source tool for research in phonology.
 * Copyright (C) 2005 - 2017, Gregory Hedlund <ghedlund@mun.ca> and Yvan Rose <yrose@mun.ca>
 * Dept of Linguistics, Memorial University <https://phon.ca>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

 /**
  * Split Table.js
  *
  * Script for use with ca.phon.app.opgraph.nodes.table.TableScriptNode
  *
  * Split table based on column name.  Two outputs
  * are produced, a set of keys from the column used in the filter  and a
  * map of key -> table values.
  */

var columnParamInfo = {
	"id": "columnName",
	"title": "Column Name",
	"def": "",
	"prompt": "Enter column name"
}

function setup_params(params) {
	var columnParam = new StringScriptParam(
		columnParamInfo.id,
		columnParamInfo.title,
		columnParamInfo.def);
	columnParam.setPrompt(columnParamInfo.prompt);
	params.add(columnParam);
}

// add custom inputs/outputs here
function init(inputs, outputs) {
	outputs.add("keySet", "Unique values from given column name", false, java.util.Set);
	outputs.add("tableMap", "Map of key -> table values", false, java.util.Map);
}

/*
 * Create a new table with the same schema as the inputTable
 */
function setupTable(inputTable) {
    var table = new DefaultTableDataSource();
    for(c = 0; c < inputTable.columnCount; c++) {
	    var colTitle = inputTable.getColumnTitle(c);
	    table.setColumnTitle(c, colTitle);
	}
	return table;
}

// run operation on table
function tableOp(context, table) {
	// find table column index
	col = table.getColumnIndex(columnName);

	if(col < 0)
		return; // column not found

	var tableMap = new java.util.LinkedHashMap();

	for(row = 0; row < table.rowCount; row++) {
	    // use string value as row key
		var rowKey = Packages.ca.phon.formatter.FormatterUtil.format(table.getValueAt(row, col));

		var keyTable = tableMap.get(rowKey);
		if(keyTable == null) {
		    keyTable = setupTable(table);
		    tableMap.put(rowKey, keyTable);
		}
		keyTable.addRow(table.getRow(row));
	}

	context.put("keySet", tableMap.keySet());
	context.put("tableMap", tableMap);
}
]]></oga:property>
                                        </oga:settings>
                                        <oga:meta x="427" y="287"/>
                                    </extensions>
                                </node>
                                <node id="756573d2" name="Object#toString()" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[toString()]]></oga:property>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.Object]]></oga:property>
                                        </oga:settings>
                                        <oga:meta x="368" y="508"/>
                                    </extensions>
                                </node>
                                <node id="5840d18" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                    <input name="data" optional="false">Data to print</input>
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="dataTemplate"><![CDATA[
#set($speaker = "$DATA")
#h2($speaker)
]]></oga:property>
                                            <oga:property key="showText"><![CDATA[true]]></oga:property>
                                            <oga:property key="showTable"><![CDATA[false]]></oga:property>
                                            <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                        </oga:settings>
                                        <oga:meta x="538" y="498"/>
                                    </extensions>
                                </node>
                                <node id="215004f3" name="Participant Buffer" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.lang.String]]></oga:property>
                                            <oga:property key="contextKey"/>
                                        </oga:settings>
                                        <oga:meta x="725" y="498"/>
                                    </extensions>
                                </node>
                                <ogcn:macro id="cd529cc9bedf4ecc" name="For Each Session" type="ca.gedge.opgraph.nodes.reflect.IterableClassNode">
                                    <graph id="5ffb2967">
                                        <node id="9cd592ba93e14241" name="Session Name" type="class:ca.gedge.opgraph.nodes.reflect.ContextualItemClassNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ContextualItemClassNode.key"><![CDATA[currentValue]]></oga:property>
                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ContextualItemClassNode.declaredClass"><![CDATA[java.lang.Object]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="46" y="66"/>
                                            </extensions>
                                        </node>
                                        <node id="22103902a02f452c" name="Table Map" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.util.Map]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="96" y="341"/>
                                            </extensions>
                                        </node>
                                        <node id="2cde07591d49421f" name="Participant" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="93" y="444"/>
                                            </extensions>
                                        </node>
                                        <node id="e23feb1ca66345eb" name="Participant Buffer" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.lang.String]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="96" y="753"/>
                                            </extensions>
                                        </node>
                                        <node id="9d4e5d5c75304010" name="Segmental Totals" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.lang.Object]]></oga:property>
                                                    <oga:property key="contextKey"/>
                                                </oga:settings>
                                                <oga:meta x="106" y="849"/>
                                            </extensions>
                                        </node>
                                        <ogcn:macro id="d0e50cd137aa45c3" name="Get Table for Session" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                            <graph id="5b0fadc8">
                                                <node id="6991d3ca2b8e4413" name="Map" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.util.Map]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="244" y="68"/>
                                                    </extensions>
                                                </node>
                                                <node id="797e76c817014d15" name="Map#get(Object)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[get(java.lang.Object)]]></oga:property>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.util.Map]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="401" y="69"/>
                                                    </extensions>
                                                </node>
                                                <node id="5f8dcecf77fe46f5" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                                                    <output name="exists" type="java.lang.Boolean">does table exist</output>
                                                    <output name="table" type="ca.phon.query.report.datasource.DefaultTableDataSource">table if exists, undefined otherwise</output>
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="__script"><![CDATA[
// setup input/output fields
function init(inputFields, outputFields) {
	inputFields.add("table", "");
	outputFields.add("exists", "does table exist", false, java.lang.Boolean);
	outputFields.add("table", "table if exists, undefined otherwise", false, Packages.ca.phon.query.report.datasource.DefaultTableDataSource);
}

function run(context) {
	var tableExists =
		(context.containsKey("table") && context.get("table") != null);
	context.put("exists", tableExists);
	context.put("table", context.get("table"));
}
]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="555" y="73"/>
                                                    </extensions>
                                                </node>
                                                <link dest="797e76c817014d15" destField="obj" source="6991d3ca2b8e4413" sourceField="obj"/>
                                                <link dest="5f8dcecf77fe46f5" destField="table" source="797e76c817014d15" sourceField="value"/>
                                            </graph>
                                            <ogcn:published_input field="arg1" name="sessionName" ref="797e76c817014d15"/>
                                            <ogcn:published_input field="obj" name="tableMap" ref="6991d3ca2b8e4413"/>
                                            <ogcn:published_output field="exists" name="exists" ref="5f8dcecf77fe46f5"/>
                                            <ogcn:published_output field="table" name="table" ref="5f8dcecf77fe46f5"/>
                                            <extensions>
                                                <oga:meta x="399" y="89"/>
                                            </extensions>
                                        </ogcn:macro>
                                        <node id="58f7fd28692049d2" name="Add to Breakdown Template" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                            <input name="data" optional="false">Data to print</input>
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="dataTemplate"><![CDATA[
#set($sessionPath = "$DATA")]]></oga:property>
                                                    <oga:property key="showText"><![CDATA[true]]></oga:property>
                                                    <oga:property key="showTable"><![CDATA[false]]></oga:property>
                                                    <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="721" y="512">
                                                    <oga:default for="buffer" type="java.lang.String">Breakdown Template</oga:default>
                                                    <oga:default for="append" type="java.lang.Boolean">true</oga:default>
                                                </oga:meta>
                                            </extensions>
                                        </node>
                                        <ogcn:macro id="c243d0cc85994d01" name="If Speaker has Results for Session" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                            <graph id="61a86eb1">
                                                <node id="7481fcacc2964d6d" name="Integer#&lt;init&gt;(String)" type="class:ca.gedge.opgraph.nodes.reflect.ConstructorNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.classMember"><![CDATA[<init>(java.lang.String)]]></oga:property>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.declaredClass"><![CDATA[java.lang.Integer]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="516" y="128">
                                                            <oga:default for="arg1" type="java.lang.String">0</oga:default>
                                                        </oga:meta>
                                                    </extensions>
                                                </node>
                                                <node id="6b3143df3116411b" name="Session Name" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.lang.Object]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="68" y="130"/>
                                                    </extensions>
                                                </node>
                                                <node id="b25c5b3d1d7440da" name="Session Table" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="71" y="222"/>
                                                    </extensions>
                                                </node>
                                                <node id="c221b0481e9c496b" name="Participant" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="75" y="360"/>
                                                    </extensions>
                                                </node>
                                                <node id="3b4467e2" name="Setup Segmental Totals" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                                                    <output name="totals" type="java.lang.Object"/>
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	outputs.add("totals", "", false, java.lang.Object);
}

function run(context) {
	var totals = {
		"onset": {
			"target": { "count": 0, "positions": [] },
			"correct": { "count": 0, "positions": [] },
			"substitution": { "count": 0, "positions": [] },
			"deletion": { "count": 0, "positions": [] },
			"distortion": { "count": 0, "positions": [] },
			"epenthesis": { "count": 0, "positions": [] }
		},
		"nucleus": {
			"target": { "count": 0, "positions": [] },
			"correct": { "count": 0, "positions": [] },
			"substitution": { "count": 0, "positions": [] },
			"deletion": { "count": 0, "positions": [] },
			"distortion": { "count": 0, "positions": [] },
			"epenthesis": { "count": 0, "positions": [] }
		},
		"coda": {
			"target": { "count": 0, "positions": [] },
			"correct": { "count": 0, "positions": [] },
			"substitution": { "count": 0, "positions": [] },
			"deletion": { "count": 0, "positions": [] },
			"distortion": { "count": 0, "positions": [] },
			"epenthesis": { "count": 0, "positions": [] }
		},
		"unknown": {
			"target": { "count": 0, "positions": [] },
			"correct": { "count": 0, "positions": [] },
			"substitution": { "count": 0, "positions": [] },
			"deletion": { "count": 0, "positions": [] },
			"distortion": { "count": 0, "positions": [] },
			"epenthesis": { "count": 0, "positions": [] }
		}
	};

	context.put("totals", totals);
}
]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="602" y="563"/>
                                                    </extensions>
                                                </node>
                                                <node id="600677ed57684db3" name="Participant Buffer" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.lang.String]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="70" y="669"/>
                                                    </extensions>
                                                </node>
                                                <node id="5c792a0560b4beb" type="class:ca.gedge.opgraph.nodes.math.MathExpressionNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="significantDigits"><![CDATA[-1]]></oga:property>
                                                            <oga:property key="expression"><![CDATA[rowCount+(-1)]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="525" y="231"/>
                                                    </extensions>
                                                </node>
                                                <node id="bedc546" name="Add Session Name Header to Report" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                    <input name="data" optional="false">Data to print</input>
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="dataTemplate"><![CDATA[
#set($sessionPath = "$DATA")
#h3($sessionPath)
]]></oga:property>
                                                            <oga:property key="showText"><![CDATA[true]]></oga:property>
                                                            <oga:property key="showTable"><![CDATA[false]]></oga:property>
                                                            <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="541" y="418">
                                                            <oga:default for="append" type="java.lang.Boolean">true</oga:default>
                                                        </oga:meta>
                                                    </extensions>
                                                </node>
                                                <node id="a8f4c8d442b84425" type="class:ca.gedge.opgraph.nodes.general.RangeNode">
                                                    <extensions>
                                                        <oga:meta x="742" y="157"/>
                                                    </extensions>
                                                </node>
                                                <ogcn:macro id="6cca2ae5" name="For Each Row" type="ca.gedge.opgraph.nodes.reflect.IterableClassNode">
                                                    <graph id="b89609a">
                                                        <node id="36e48cb9" name="Current Object" type="class:ca.gedge.opgraph.nodes.reflect.ContextualItemClassNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ContextualItemClassNode.key"><![CDATA[currentValue]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ContextualItemClassNode.declaredClass"><![CDATA[java.lang.Object]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="60" y="33"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="f150b722d7ce4792" name="DefaultTableDataSource" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="117" y="215"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="37e5d87a8ee2429a" name="Participant" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="111" y="356"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="345c1635ecf04d55" name="Participant Buffer" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.lang.String]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="110" y="670"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="7d75bcad2044891" name="Segmental Totals" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.lang.Object]]></oga:property>
                                                                    <oga:property key="contextKey"/>
                                                                </oga:settings>
                                                                <oga:meta x="111" y="764"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="64f8407c" name="Row Index" type="class:ca.gedge.opgraph.nodes.reflect.ObjectCastNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectCastNode.declaredClass"><![CDATA[java.lang.Integer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="249" y="42"/>
                                                            </extensions>
                                                        </node>
                                                        <ogcn:macro id="4541ca3a0e544ebd" name="Get Row Data" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                                            <graph id="12cebe39">
                                                                <node id="3bd8dba5cdbd4ce8" name="row" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.lang.Integer]]></oga:property>
                                                                        </oga:settings>
                                                                        <oga:meta x="51" y="70"/>
                                                                    </extensions>
                                                                </node>
                                                                <node id="58ad176b869d422d" name="table" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                                                        </oga:settings>
                                                                        <oga:meta x="37" y="243"/>
                                                                    </extensions>
                                                                </node>
                                                                <node id="90cacaca259b4900" name="DefaultTableDataSource#getRow(int)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[getRow(int)]]></oga:property>
                                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                                                        </oga:settings>
                                                                        <oga:meta x="422" y="104"/>
                                                                    </extensions>
                                                                </node>
                                                                <node id="240a13fb1df0407b" name="DefaultTableDataSource#getColumnIndex(String)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[getColumnIndex(java.lang.String)]]></oga:property>
                                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                                                        </oga:settings>
                                                                        <oga:meta x="467" y="269">
                                                                            <oga:default for="arg1" type="java.lang.String">Orthography</oga:default>
                                                                        </oga:meta>
                                                                    </extensions>
                                                                </node>
                                                                <node id="e034c3d7341b44b0" name="DefaultTableDataSource#getColumnIndex(String)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[getColumnIndex(java.lang.String)]]></oga:property>
                                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                                                        </oga:settings>
                                                                        <oga:meta x="467" y="391">
                                                                            <oga:default for="arg1" type="java.lang.String">Target Syllabification (Word)</oga:default>
                                                                        </oga:meta>
                                                                    </extensions>
                                                                </node>
                                                                <node id="25a90be31b12463e" name="DefaultTableDataSource#getColumnIndex(String)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[getColumnIndex(java.lang.String)]]></oga:property>
                                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                                                        </oga:settings>
                                                                        <oga:meta x="467" y="522">
                                                                            <oga:default for="arg1" type="java.lang.String">Actual Syllabification (Word)</oga:default>
                                                                        </oga:meta>
                                                                    </extensions>
                                                                </node>
                                                                <node id="12baff16e33c49b4" name="DefaultTableDataSource#getColumnIndex(String)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[getColumnIndex(java.lang.String)]]></oga:property>
                                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                                                        </oga:settings>
                                                                        <oga:meta x="467" y="635">
                                                                            <oga:default for="arg1" type="java.lang.String">Phone Alignment (Word)</oga:default>
                                                                        </oga:meta>
                                                                    </extensions>
                                                                </node>
                                                                <node id="85e177d8c46f4d84" name="Get Row Data" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                                                                    <input name="row" optional="false"/>
                                                                    <input name="orthoCol" optional="false"/>
                                                                    <input name="targetCol" optional="false"/>
                                                                    <input name="actualCol" optional="false"/>
                                                                    <input name="alignmentCol" optional="false"/>
                                                                    <output name="orthography" type="java.lang.String"/>
                                                                    <output name="target" type="ca.phon.ipa.IPATranscript"/>
                                                                    <output name="actual" type="ca.phon.ipa.IPATranscript"/>
                                                                    <output name="alignment" type="ca.phon.ipa.alignment.PhoneMap"/>
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	inputs.add("row", "", false, false);
	inputs.add("orthoCol", "", false, false);
	inputs.add("targetCol", "", false, false);
	inputs.add("actualCol", "", false, false);
	inputs.add("alignmentCol", "", false, false);

	outputs.add("orthography", "", false, java.lang.String);
	outputs.add("target", "", false, Packages.ca.phon.ipa.IPATranscript);
	outputs.add("actual", "", false, Packages.ca.phon.ipa.IPATranscript);
	outputs.add("alignment", "", false, Packages.ca.phon.ipa.alignment.PhoneMap);
}

function run(context) {
	var rowData = context.get("row");
	var orthoCol = context.get("orthoCol");
	var targetCol = context.get("targetCol");
	var actualCol = context.get("actualCol");
	var alignmentCol = context.get("alignmentCol");

	var orthoData = rowData[orthoCol];
	var targetData = rowData[targetCol];
	var actualData = rowData[actualCol];
	var alignData = rowData[alignmentCol];

	var target = 
		(targetData != null ? Packages.ca.phon.ipa.IPATranscript.parseIPATranscript(rowData[targetCol]) : new Packages.ca.phon.ipa.IPATranscript());
	var actual = 
		(actualData != null ? Packages.ca.phon.ipa.IPATranscript.parseIPATranscript(rowData[actualCol]) : new Packages.ca.phon.ipa.IPATranscript());
	var alignment = 
		(alignData != null && alignData.length() > 0 ? Packages.ca.phon.ipa.alignment.PhoneMap.fromString(target, actual, rowData[alignmentCol]) : new Packages.ca.phon.ipa.alignment.PhoneMap(target, actual));

	context.put("orthography", orthoData.toString());
	context.put("target", target);
	context.put("actual", actual);
	context.put("alignment", alignment);
}
]]></oga:property>
                                                                        </oga:settings>
                                                                        <oga:meta x="918" y="307"/>
                                                                    </extensions>
                                                                </node>
                                                                <link dest="12baff16e33c49b4" destField="obj" source="58ad176b869d422d" sourceField="obj"/>
                                                                <link dest="25a90be31b12463e" destField="obj" source="58ad176b869d422d" sourceField="obj"/>
                                                                <link dest="e034c3d7341b44b0" destField="obj" source="58ad176b869d422d" sourceField="obj"/>
                                                                <link dest="90cacaca259b4900" destField="arg1" source="3bd8dba5cdbd4ce8" sourceField="obj"/>
                                                                <link dest="90cacaca259b4900" destField="obj" source="58ad176b869d422d" sourceField="obj"/>
                                                                <link dest="85e177d8c46f4d84" destField="targetCol" source="e034c3d7341b44b0" sourceField="value"/>
                                                                <link dest="85e177d8c46f4d84" destField="actualCol" source="25a90be31b12463e" sourceField="value"/>
                                                                <link dest="85e177d8c46f4d84" destField="alignmentCol" source="12baff16e33c49b4" sourceField="value"/>
                                                                <link dest="85e177d8c46f4d84" destField="row" source="90cacaca259b4900" sourceField="value"/>
                                                                <link dest="240a13fb1df0407b" destField="obj" source="58ad176b869d422d" sourceField="obj"/>
                                                                <link dest="85e177d8c46f4d84" destField="orthoCol" source="240a13fb1df0407b" sourceField="value"/>
                                                                <extensions>
                                                                    <oga:notes>
                                                                        <oga:note color="0xffff96" height="624" title="Inputs" width="274" x="28" y="30"/>
                                                                    </oga:notes>
                                                                    <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                                                </extensions>
                                                            </graph>
                                                            <ogcn:published_input field="obj" name="table" ref="58ad176b869d422d"/>
                                                            <ogcn:published_input field="obj" name="row" ref="3bd8dba5cdbd4ce8"/>
                                                            <ogcn:published_output field="target" name="target" ref="85e177d8c46f4d84"/>
                                                            <ogcn:published_output field="actual" name="actual" ref="85e177d8c46f4d84"/>
                                                            <ogcn:published_output field="alignment" name="alignment" ref="85e177d8c46f4d84"/>
                                                            <ogcn:published_output field="orthography" name="orthography" ref="85e177d8c46f4d84"/>
                                                            <extensions>
                                                                <oga:meta x="472" y="214"/>
                                                            </extensions>
                                                        </ogcn:macro>
                                                        <ogcn:macro id="93e56a1c9e0d4fa8" name="WAP" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                                            <graph id="1dd8eb9e">
                                                                <node id="d9020c92534d41fa" name="Create Table for Production" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                                                                    <output name="table" type="ca.phon.query.report.datasource.DefaultTableDataSource"/>
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="__script"><![CDATA[
function init(inputs, outputs) {
	outputs.add("table", "", false, Packages.ca.phon.query.report.datasource.DefaultTableDataSource);
}

function run(context) {
	var table = new Packages.ca.phon.query.report.datasource.DefaultTableDataSource();

	table.setColumnTitle(0, "Category");
	table.setColumnTitle(1, "Description");
	table.setColumnTitle(2, "Value");

	context.put("table", table);
}
]]></oga:property>
                                                                        </oga:settings>
                                                                        <oga:meta x="481" y="43"/>
                                                                    </extensions>
                                                                </node>
                                                                <node id="429f5069103f4b19" name="Word" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.lang.String]]></oga:property>
                                                                        </oga:settings>
                                                                        <oga:meta x="55" y="82"/>
                                                                    </extensions>
                                                                </node>
                                                                <node id="ac130279f6464980" name="IPA Target" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.ipa.IPATranscript]]></oga:property>
                                                                        </oga:settings>
                                                                        <oga:meta x="54" y="183"/>
                                                                    </extensions>
                                                                </node>
                                                                <node id="828342a8827348f6" name="IPA Actual" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.ipa.IPATranscript]]></oga:property>
                                                                        </oga:settings>
                                                                        <oga:meta x="54" y="324"/>
                                                                    </extensions>
                                                                </node>
                                                                <node id="126f6847b0734271" name="PhoneMap" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.ipa.alignment.PhoneMap]]></oga:property>
                                                                        </oga:settings>
                                                                        <oga:meta x="54" y="465"/>
                                                                    </extensions>
                                                                </node>
                                                                <node id="d6964130060d4eac" name="Prosodic Level" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                                                                    <input name="table" optional="false"/>
                                                                    <input name="target" optional="false"/>
                                                                    <input name="actual" optional="false"/>
                                                                    <input name="alignment" optional="false"/>
                                                                    <output name="table" type="ca.phon.query.report.datasource.DefaultTableDataSource"/>
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="__script"><![CDATA[importPackage(Packages.ca.phon.syllable)
importPackage(Packages.ca.phon.ipa.alignment)

var coverStr = "C=\\c; V=\\v; implicitBoundaries=true; insertSyllableBoundaries=true;";

function init(inputs, outputs) {
	inputs.add("table", "", false, false);
	inputs.add("target", "", false, false);
	inputs.add("actual", "", false, false);
	inputs.add("alignment", "", false, false);

	outputs.add("table", "", false, Packages.ca.phon.query.report.datasource.DefaultTableDataSource);
}

function run(context) {
	var table = context.get("table");
	var target = context.get("target");
	var actual = context.get("actual");
	var alignment = context.get("alignment");

	var syllableAligner = new SyllableAligner();
	var syllAlignment = syllableAligner.calculateSyllableAlignment(target, actual, alignment);

	addCoverRows(table, target, actual);
	addSyllableLengthRows(table, target, actual);
	addSyllableTransitionRows(table, target, actual);
	addSyllableMatchRows(table, target, actual, syllAlignment);

	context.put("table", table);
}

function addCoverRows(table, target, actual) {
	var rowData = [];
	var idx = 0;

	rowData[idx++] = "CV Shape";
	rowData[idx++] = "Target Shape";
	rowData[idx++] = target.cover(coverStr);
	table.addRow(rowData);
	
	idx = 0;
	rowData[idx++] = ""
	rowData[idx++] = "Actual Shape";
	rowData[idx++] = actual.cover(coverStr);
	table.addRow(rowData);
}

function addSyllableLengthRows(table, target, actual) {
	var rowData = [];
	var idx = 0;

	rowData[idx++] = "Syllable Length";
	rowData[idx++] = "# Target Syllables";
	rowData[idx++] = new java.lang.Integer(target.syllables().size());
	table.addRow(rowData);

	idx = 0;
	rowData[idx++] = "";
	rowData[idx++] = "# Actual Syllables";
	rowData[idx++] = new java.lang.Integer(actual.syllables().size());
	table.addRow(rowData);
}

function addSyllableTransitionRows(table, target, actual) {
	var rowData = [];
	var idx = 0;

	rowData[idx++] = "Syllable Transitions";
	rowData[idx++] = "# Target Transitions";
	rowData[idx++] = new java.lang.Integer(target.syllables().size() - 1);
	table.addRow(rowData);

	idx = 0;
	rowData[idx++] = "";
	rowData[idx++] = "# Actual Transitions";
	actualTransitions = (actual.syllables().size() > 0 ? actual.syllables().size() - 1 : 0);
	rowData[idx++] = new java.lang.Integer(actualTransitions);
	table.addRow(rowData);

	idx = 0;
	rowData[idx++] = "";
	rowData[idx++] = "# Segregated Transitions";
	
	var numSegregatedBoundaries = 0;
	var pauseIdx = actual.indexOf("\\p");
	while(pauseIdx >= 0) {
		++numSegregatedBoundaries;
		pauseIdx = actual.indexOf("\\p", pauseIdx+1);
	}
	
	rowData[idx++] = new java.lang.Integer(numSegregatedBoundaries);
	table.addRow(rowData);
}

function addSyllableMatchRows(table, target, actual, syllAlignment) {
	var rowData = [];
	var idx = 0;

	var retVal = {
		"stressedTargets": 0,
		"unstressedTargets": 0,
		"stressedMatch": 0,
		"unstressedMatch": 0,
		"stressedCVMatch": 0,
		"unstressedCVMatch": 0,
		"stressedDeletion": 0,
		"unstressedDeletion": 0,
		"stressedEpen": 0,
		"unstressedEpen": 0,
		"stressedReduction": 0,
		"unstressedReduction": 0,
		"stressedExpansion": 0,
		"unstressedExpansion": 0
	};

	var targetSylls = syllAlignment.topElements;
	var actualSylls = syllAlignment.bottomElements;

	for(var i = 0; i < targetSylls.length; i++) {
		var targetSyll = targetSylls[i];
		var targetStress = targetSyll.getExtension(SyllableStress);
		var targetCV = targetSyll.audiblePhones().cover(coverStr);
		var oAlignedEle = syllAlignment.getAlignedElement(targetSyll);

		if(targetStress.ordinal() < 2) {
			retVal.stressedTargets++;
		} else {
			retVal.unstressedTargets++;
		}

		if(oAlignedEle.isPresent()) {
			var actualSyll = oAlignedEle.get();
			var actualStress = actualSyll.getExtension(SyllableStress);
			var actualCV = actualSyll.audiblePhones().cover(coverStr);

			if(targetStress == actualStress) {
				if(targetStress.ordinal() < 2) retVal.stressedMatch++;
				else retVal.unstressedMatch++;
			}

			if(targetCV.toString().equals(actualCV.toString())) {
				if(targetStress.ordinal() < 2) retVal.stressedCVMatch++;
				else retVal.unstressedCVMatch++;
			}

			if(targetCV.length() > actualCV.length()) {
				if(targetStress.ordinal() < 2) retVal.stressedReduction++;
				else retVal.unstressedReduction++;
			}

			if(targetCV.length() < actualCV.length()) {
				if(targetStress.ordinal() < 2) retVal.stressedExpansion++;
				else retVal.unstressedExpansion++;
			}
		} else {
			if(targetStress.ordinal < 2) retVal.stressedDeletion++;
			else retVal.unstressedDeletion++;
		}
	}

	// check for epenthesis
	for(var i = 0; i < actualSylls.length; i++) {
		var actualSyll = actualSylls[i];
		var actualStress = actualSyll.getExtension(SyllableStress);

		var alignedEle = syllAlignment.getAlignedElement(actualSyll);
		if(!alignedEle.isPresent()) {
			if(actualStress.ordinal() < 2) retVal.stressedEpen++;
			else retVal.unstressedEpen++;
		}
	}

	var idx = 0;
	var rowData = [];
	rowData[idx++] = "\u03c3 Stress Match";
	rowData[idx++] = "Stressed \u03c3 match";
	rowData[idx++] = new java.lang.Integer(retVal.stressedMatch);
	table.addRow(rowData);

	idx = 0;
	rowData[idx++] = "";
	rowData[idx++] = "Untressed \u03c3 match";
	rowData[idx++] = new java.lang.Integer(retVal.unstressedMatch);
	table.addRow(rowData);

	idx = 0;
	rowData[idx++] = "\u03c3 CV Match";
	rowData[idx++] = "Stressed \u03c3 CV match";
	rowData[idx++] = new java.lang.Integer(retVal.stressedCVMatch);
	table.addRow(rowData);

	idx = 0;
	rowData[idx++] = "";
	rowData[idx++] = "Unstressed \u03c3 CV match";
	rowData[idx++] = new java.lang.Integer(retVal.unstressedCVMatch);
	table.addRow(rowData);

	idx = 0;
	rowData[idx++] = "\u03c3 Epenthesis";
	rowData[idx++] = "Stressed epenthesis";
	rowData[idx++] = new java.lang.Integer(retVal.stressedEpen);
	table.addRow(rowData);

	idx = 0;
	rowData[idx++] = "";
	rowData[idx++] = "Unstressed epenthesis";
	rowData[idx++] = new java.lang.Integer(retVal.unstressedEpen);
	table.addRow(rowData);

	idx = 0;
	rowData[idx++] = "\u03c3 Deletion";
	rowData[idx++] = "Stressed deletions";
	rowData[idx++] = new java.lang.Integer(retVal.stressedDeletion);
	table.addRow(rowData);

	idx = 0;
	rowData[idx++] = "";
	rowData[idx++] = "Unstressed deletions";
	rowData[idx++] = new java.lang.Integer(retVal.unstressedDeletion);
	table.addRow(rowData);

	idx = 0;
	rowData[idx++] = "\u03c3 Expansions";
	rowData[idx++] = "Stressed expansions";
	rowData[idx++] = new java.lang.Integer(retVal.stressedExpansion);
	table.addRow(rowData);

	idx = 0;
	rowData[idx++] = "";
	rowData[idx++] = "Unstressed expansions";
	rowData[idx++] = new java.lang.Integer(retVal.unstressedExpansion);
	table.addRow(rowData);

	idx = 0;
	rowData[idx++] = "\u03c3 Reductions";
	rowData[idx++] = "Stressed reductions";
	rowData[idx++] = new java.lang.Integer(retVal.stressedReduction);
	table.addRow(rowData);

	idx = 0;
	rowData[idx++] = "";
	rowData[idx++] = "Unstressed reductions";
	rowData[idx++] = new java.lang.Integer(retVal.unstressedReduction);
	table.addRow(rowData);
	
	return retVal;
}
]]></oga:property>
                                                                        </oga:settings>
                                                                        <oga:meta x="844" y="204"/>
                                                                    </extensions>
                                                                </node>
                                                                <node id="feaa6135ab9f4863" name="Segmental Level" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                                                                    <input name="table" optional="false"/>
                                                                    <input name="target" optional="false"/>
                                                                    <input name="actual" optional="false"/>
                                                                    <input name="alignment" optional="false"/>
                                                                    <output name="table" type="ca.phon.query.report.datasource.DefaultTableDataSource"/>
                                                                    <output name="counts" type="java.lang.Object"/>
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="__script"><![CDATA[importPackage(Packages.ca.phon.syllable)
importPackage(Packages.ca.phon.ipa.relations)

var ignoreDiacriticsParamInfo = {
	"id": "options.ignoreDiacritics",
	"title": "Ignore diacritics",
	"def": false,
	"desc": ""
};
var ignoreDiacriticsParam;
var options = {
	"ignoreDiacritics": ignoreDiacriticsParamInfo.def
};

function init(inputs, outputs) {
	inputs.add("table", "", false, false);
	inputs.add("target", "", false, false);
	inputs.add("actual", "", false, false);
	inputs.add("alignment", "", false, false);

	outputs.add("table", "", false, Packages.ca.phon.query.report.datasource.DefaultTableDataSource);
	outputs.add("counts", "", false, java.lang.Object);
}

function setup_params(params) {
	ignoreDiacriticsParam = new BooleanScriptParam(
		ignoreDiacriticsParamInfo.id,
		ignoreDiacriticsParamInfo.title,
		ignoreDiacriticsParamInfo.desc,
		ignoreDiacriticsParamInfo.def);
	params.add(ignoreDiacriticsParam);
}

function run(context) {
	var table = context.get("table");
	var target = context.get("target");
	var actual = context.get("actual");
	var alignment = context.get("alignment");

	// find any segmental relations
	var detector = new SegmentalRelations(true, true);
	var relations = detector.detect(alignment);

	// collect data
	var counts = {
		"target": target,
		"actual": actual,
		"alignment": alignment,
		"relations": relations,
		"onset": {
			"target": { "count": 0, "positions": [] },
			"correct": { "count": 0, "positions": [] },
			"substitution": { "count": 0, "positions": [] },
			"deletion": { "count": 0, "positions": [] },
			"distortion": { "count": 0, "positions": [] },
			"epenthesis": { "count": 0, "positions": [] }
		},
		"nucleus": {
			"target": { "count": 0, "positions": [] },
			"correct": { "count": 0, "positions": [] },
			"substitution": { "count": 0, "positions": [] },
			"deletion": { "count": 0, "positions": [] },
			"distortion": { "count": 0, "positions": [] },
			"epenthesis": { "count": 0, "positions": [] }
		},
		"coda": {
			"target": { "count": 0, "positions": [] },
			"correct": { "count": 0, "positions": [] },
			"substitution": { "count": 0, "positions": [] },
			"deletion": { "count": 0, "positions": [] },
			"distortion": { "count": 0, "positions": [] },
			"epenthesis": { "count": 0, "positions": [] }
		},
		"unknown": {
			"target": { "count": 0, "positions": [] },
			"correct": { "count": 0, "positions": [] },
			"substitution": { "count": 0, "positions": [] },
			"deletion": { "count": 0, "positions": [] },
			"distortion": { "count": 0, "positions": [] },
			"epenthesis": { "count": 0, "positions": [] }
		}
	};
	
	for(var i = 0; i < alignment.alignmentLength; i++) {
		var alignedEles = alignment.getAlignedElements(i);

		var targetEle = alignedEles.get(0);
		var actualEle = alignedEles.get(1);

		var alignTxt = (targetEle != null ? targetEle.toString() : "\u2205");
		alignTxt += " \u2194 ";
		alignTxt += (actualEle != null ? actualEle.toString() : "\u2205");

		var objCount = counts.unknown;
		var testEle = (targetEle != null ? targetEle : actualEle);

		var scType = SyllableConstituentType.UNKNOWN;
		if(testEle.scType == SyllableConstituentType.LEFTAPPENDIX
			|| testEle.scType == SyllableConstituentType.ONSET) {
			objCount = counts.onset;
			scType = SyllableConstituentType.ONSET;
		} else if(testEle.scType == SyllableConstituentType.NUCLEUS
			|| testEle.scType == SyllableConstituentType.OEHS) {
			objCount = counts.nucleus;
			scType = SyllableConstituentType.NUCLEUS;	
		} else if(testEle.scType == SyllableConstituentType.CODA
			|| testEle.scType == SyllableConstituentType.RIGHTAPPENDIX) {
			objCount = counts.coda;
			scType = SyllableConstituentType.CODA;
		}

		var typeTxt = scType.identifier + " ";
		if(targetEle != null && actualEle != null) {
			objCount.target.count++;
			objCount.target.positions.push(i);

			var matches = 
				(options.ignoreDiacritics == true ? targetEle.basePhone == actualEle.basePhone : 
					targetEle.toString().equals(actualEle.toString()));
			if(matches) {
				objCount.correct.count++;
				objCount.correct.positions.push(i);

				typeTxt += "Correct";
			} else {
				objCount.substitution.count++;
				objCount.substitution.positions.push(i);

				typeTxt += "Substitution";
			}
		} else if(targetEle != null && actualEle == null) {
			objCount.target.count++;
			objCount.target.positions.push(i);
			
			objCount.deletion.count++;
			objCount.deletion.positions.push(i);

			typeTxt += "Deletion";
		} else if(targetEle == null && actualEle != null) {
			objCount.epenthesis.count++;
			objCount.epenthesis.positions.push(i);

			typeTxt += "Epenthesis";
		}

		var idx = 0;
		var rowData = [];

		rowData[idx++] = (i == 0 ? "Segmental Alignment" : "");
		rowData[idx++] = alignTxt;
		rowData[idx++] = typeTxt;
		table.addRow(rowData);
	}

	context.put("table", table);
	context.put("counts", counts);
}
]]></oga:property>
                                                                        </oga:settings>
                                                                        <oga:meta x="1072" y="207"/>
                                                                    </extensions>
                                                                </node>
                                                                <node id="4d085d8410204491" name="Output Table" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                                                        </oga:settings>
                                                                        <oga:meta x="1454" y="167"/>
                                                                    </extensions>
                                                                </node>
                                                                <node id="5fb74f79" name="Segmental Summary (js)" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.lang.Object]]></oga:property>
                                                                            <oga:property key="contextKey"/>
                                                                        </oga:settings>
                                                                        <oga:meta x="1459" y="311"/>
                                                                    </extensions>
                                                                </node>
                                                                <link dest="feaa6135ab9f4863" destField="table" source="d6964130060d4eac" sourceField="table"/>
                                                                <link dest="d6964130060d4eac" destField="table" source="d9020c92534d41fa" sourceField="table"/>
                                                                <link dest="d6964130060d4eac" destField="target" source="ac130279f6464980" sourceField="obj"/>
                                                                <link dest="d6964130060d4eac" destField="actual" source="828342a8827348f6" sourceField="obj"/>
                                                                <link dest="d6964130060d4eac" destField="alignment" source="126f6847b0734271" sourceField="obj"/>
                                                                <link dest="feaa6135ab9f4863" destField="target" source="ac130279f6464980" sourceField="obj"/>
                                                                <link dest="feaa6135ab9f4863" destField="actual" source="828342a8827348f6" sourceField="obj"/>
                                                                <link dest="feaa6135ab9f4863" destField="alignment" source="126f6847b0734271" sourceField="obj"/>
                                                                <link dest="4d085d8410204491" destField="obj" source="feaa6135ab9f4863" sourceField="table"/>
                                                                <link dest="5fb74f79" destField="obj" source="feaa6135ab9f4863" sourceField="counts"/>
                                                                <extensions>
                                                                    <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                                                    <oga:notes>
                                                                        <oga:note color="0xffff96" height="750" title="Inputs" width="431" x="23" y="31"/>
                                                                        <oga:note color="0x9696ff" height="343" title="Analysis" width="572" x="790" y="100"/>
                                                                        <oga:note color="0x96ff96" height="543" title="Outputs" width="334" x="1400" y="50"/>
                                                                    </oga:notes>
                                                                </extensions>
                                                            </graph>
                                                            <ogcn:published_input field="obj" name="word" ref="429f5069103f4b19"/>
                                                            <ogcn:published_input field="obj" name="target" ref="ac130279f6464980"/>
                                                            <ogcn:published_input field="obj" name="actual" ref="828342a8827348f6"/>
                                                            <ogcn:published_input field="obj" name="alignment" ref="126f6847b0734271"/>
                                                            <ogcn:published_output field="obj" name="table" ref="4d085d8410204491"/>
                                                            <ogcn:published_output field="obj" name="segmental summary" ref="5fb74f79"/>
                                                            <extensions>
                                                                <oga:meta x="752" y="200"/>
                                                            </extensions>
                                                        </ogcn:macro>
                                                        <ogcn:macro id="211f40c6c55a4ede" name="Setup Buffer Name" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                                            <graph id="275fd5d5">
                                                                <node id="57bba5989827479b" name="StringBuffer#&lt;init&gt;(String)" type="class:ca.gedge.opgraph.nodes.reflect.ConstructorNode">
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.classMember"><![CDATA[<init>(java.lang.String)]]></oga:property>
                                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                        </oga:settings>
                                                                        <oga:meta x="15" y="15">
                                                                            <oga:default for="arg1" type="java.lang.String"/>
                                                                        </oga:meta>
                                                                    </extensions>
                                                                </node>
                                                                <node id="6fb52dbc09de4312" name="Participant" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                                                        </oga:settings>
                                                                        <oga:meta x="15" y="146"/>
                                                                    </extensions>
                                                                </node>
                                                                <node id="df6dd78771b4c3f" name="StringBuffer#append(String)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[append(java.lang.String)]]></oga:property>
                                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                        </oga:settings>
                                                                        <oga:meta x="256" y="16"/>
                                                                    </extensions>
                                                                </node>
                                                                <node id="a556c4b973994812" name="StringBuffer#append(String)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[append(java.lang.String)]]></oga:property>
                                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                        </oga:settings>
                                                                        <oga:meta x="259" y="124">
                                                                            <oga:default for="arg1" type="java.lang.String">_</oga:default>
                                                                        </oga:meta>
                                                                    </extensions>
                                                                </node>
                                                                <node id="8af7983fdf4448ff" name="StringBuffer#append(String)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[append(java.lang.String)]]></oga:property>
                                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                        </oga:settings>
                                                                        <oga:meta x="259" y="237">
                                                                            <oga:default for="arg1" type="java.lang.String">_</oga:default>
                                                                        </oga:meta>
                                                                    </extensions>
                                                                </node>
                                                                <node id="e24143f7eb0a43e0" name="StringBuffer#append(String)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[append(java.lang.String)]]></oga:property>
                                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                        </oga:settings>
                                                                        <oga:meta x="259" y="358">
                                                                            <oga:default for="arg1" type="java.lang.String">_</oga:default>
                                                                        </oga:meta>
                                                                    </extensions>
                                                                </node>
                                                                <node id="980e5363933f40b1" name="StringBuffer#append(Object)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[append(java.lang.Object)]]></oga:property>
                                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                        </oga:settings>
                                                                        <oga:meta x="261" y="479"/>
                                                                    </extensions>
                                                                </node>
                                                                <node id="b4ad7b1dcd74575" name="StringBuffer#toString()" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[toString()]]></oga:property>
                                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                        </oga:settings>
                                                                        <oga:meta x="507" y="15"/>
                                                                    </extensions>
                                                                </node>
                                                                <link dest="df6dd78771b4c3f" destField="obj" source="57bba5989827479b" sourceField="value"/>
                                                                <link dest="df6dd78771b4c3f" destField="arg1" source="6fb52dbc09de4312" sourceField="name"/>
                                                                <link dest="a556c4b973994812" destField="obj" source="df6dd78771b4c3f" sourceField="value"/>
                                                                <link dest="8af7983fdf4448ff" destField="obj" source="a556c4b973994812" sourceField="value"/>
                                                                <link dest="e24143f7eb0a43e0" destField="obj" source="8af7983fdf4448ff" sourceField="value"/>
                                                                <link dest="980e5363933f40b1" destField="obj" source="e24143f7eb0a43e0" sourceField="value"/>
                                                                <link dest="b4ad7b1dcd74575" destField="obj" source="980e5363933f40b1" sourceField="value"/>
                                                                <extensions>
                                                                    <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                                                </extensions>
                                                            </graph>
                                                            <ogcn:published_input field="obj" name="speaker" ref="6fb52dbc09de4312"/>
                                                            <ogcn:published_input field="arg1" name="word" ref="8af7983fdf4448ff"/>
                                                            <ogcn:published_input field="arg1" name="row" ref="980e5363933f40b1"/>
                                                            <ogcn:published_output field="value" name="value" ref="b4ad7b1dcd74575"/>
                                                            <extensions>
                                                                <oga:meta x="655" y="386"/>
                                                            </extensions>
                                                        </ogcn:macro>
                                                        <node id="d295335" name="Segmental Totals" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                                                            <input name="totals" optional="false"/>
                                                            <input name="subtotal" optional="false"/>
                                                            <output name="totals" type="java.lang.Object"/>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	inputs.add("totals", "", false, false);
	inputs.add("subtotal", "", false, false);

	outputs.add("totals", "", false, java.lang.Object);
}
	
function run(context) {
	var totals = context.get("totals");
	var subtotal = context.get("subtotal");

	sumcounts(totals.onset, subtotal.onset);
	sumcounts(totals.nucleus, subtotal.nucleus);
	sumcounts(totals.coda, subtotal.coda);
	sumcounts(totals.unknown, subtotal.unknown);

	context.put("totals", totals);
}

function sumcounts(total, subtotal) {
	total.target.count += subtotal.target.count;
	total.correct.count += subtotal.correct.count;
	total.substitution.count += subtotal.substitution.count;
	total.deletion.count += subtotal.deletion.count;
	total.epenthesis.count += subtotal.epenthesis.count;
}
]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="1097" y="212"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="5d81a99f" name="Print WAP Table" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                            <input name="data" optional="false">Data to print</input>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="dataTemplate"><![CDATA[$DATA]]></oga:property>
                                                                    <oga:property key="showText"><![CDATA[false]]></oga:property>
                                                                    <oga:property key="showTable"><![CDATA[true]]></oga:property>
                                                                    <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="860" y="388"/>
                                                            </extensions>
                                                        </node>
                                                        <ogcn:macro id="14b535db" name="Add to Participant Report" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                                            <graph id="macro14b535db">
                                                                <node id="3fbb12ae" name="actual" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.ipa.IPATranscript]]></oga:property>
                                                                        </oga:settings>
                                                                        <oga:meta x="15" y="15"/>
                                                                    </extensions>
                                                                </node>
                                                                <node id="47685344" name="buffer" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.lang.String]]></oga:property>
                                                                        </oga:settings>
                                                                        <oga:meta x="15" y="176"/>
                                                                    </extensions>
                                                                </node>
                                                                <node id="61afc392" name="data" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.lang.String]]></oga:property>
                                                                        </oga:settings>
                                                                        <oga:meta x="15" y="317"/>
                                                                    </extensions>
                                                                </node>
                                                                <node id="313770ea" name="target" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.ipa.IPATranscript]]></oga:property>
                                                                        </oga:settings>
                                                                        <oga:meta x="15" y="418"/>
                                                                    </extensions>
                                                                </node>
                                                                <node id="58d27acc" name="word" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.lang.String]]></oga:property>
                                                                        </oga:settings>
                                                                        <oga:meta x="15" y="559"/>
                                                                    </extensions>
                                                                </node>
                                                                <ogcn:macro id="ee943fb" name="Set Caption" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                                                    <graph id="macroee943fb">
                                                                        <node id="192adde9" name="actual" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                                            <extensions>
                                                                                <oga:settings>
                                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.ipa.IPATranscript]]></oga:property>
                                                                                </oga:settings>
                                                                                <oga:meta x="15" y="15"/>
                                                                            </extensions>
                                                                        </node>
                                                                        <node id="65005aa8" name="buffer" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                                            <extensions>
                                                                                <oga:settings>
                                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.lang.String]]></oga:property>
                                                                                </oga:settings>
                                                                                <oga:meta x="15" y="176"/>
                                                                            </extensions>
                                                                        </node>
                                                                        <node id="6cdf0f77" name="target" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                                            <extensions>
                                                                                <oga:settings>
                                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.ipa.IPATranscript]]></oga:property>
                                                                                </oga:settings>
                                                                                <oga:meta x="15" y="277"/>
                                                                            </extensions>
                                                                        </node>
                                                                        <node id="11910d74" name="word" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                                            <extensions>
                                                                                <oga:settings>
                                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.lang.String]]></oga:property>
                                                                                </oga:settings>
                                                                                <oga:meta x="15" y="418"/>
                                                                            </extensions>
                                                                        </node>
                                                                        <node id="19576de6" name="Setup Caption" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                                                                            <input name="word" optional="false"/>
                                                                            <input name="target" optional="false"/>
                                                                            <input name="actual" optional="false"/>
                                                                            <output name="caption" type="java.lang.String"/>
                                                                            <extensions>
                                                                                <oga:settings>
                                                                                    <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	inputs.add("word", "", false, false);
	inputs.add("target", "", false, false);
	inputs.add("actual", "", false, false);

	outputs.add("caption", "", false, java.lang.String);
}

function run(context) {
	var word = context.get("word");
	var target = context.get("target");
	var actual = context.get("actual");

	var caption = "<h4>" +
		word.toString() + " /" + 
		target.toString() + "/ \u2194 /" + 
		actual.toString() + "/</h4>";

	context.put("caption", caption);
}
]]></oga:property>
                                                                                </oga:settings>
                                                                                <oga:meta x="303" y="45"/>
                                                                            </extensions>
                                                                        </node>
                                                                        <node id="4279149a" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                                            <input name="data" optional="false">Data to print</input>
                                                                            <extensions>
                                                                                <oga:settings>
                                                                                    <oga:property key="dataTemplate"><![CDATA[
#set($caption = "$DATA")]]></oga:property>
                                                                                    <oga:property key="showText"><![CDATA[true]]></oga:property>
                                                                                    <oga:property key="showTable"><![CDATA[false]]></oga:property>
                                                                                    <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                                                </oga:settings>
                                                                                <oga:meta x="538" y="45">
                                                                                    <oga:default for="append" type="java.lang.Boolean">true</oga:default>
                                                                                </oga:meta>
                                                                            </extensions>
                                                                        </node>
                                                                        <link dest="4279149a" destField="buffer" source="65005aa8" sourceField="obj"/>
                                                                        <link dest="19576de6" destField="actual" source="192adde9" sourceField="obj"/>
                                                                        <link dest="19576de6" destField="target" source="6cdf0f77" sourceField="obj"/>
                                                                        <link dest="4279149a" destField="data" source="19576de6" sourceField="caption"/>
                                                                        <link dest="19576de6" destField="word" source="11910d74" sourceField="obj"/>
                                                                        <extensions>
                                                                            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                                                        </extensions>
                                                                    </graph>
                                                                    <ogcn:published_input field="obj" name="buffer" ref="65005aa8"/>
                                                                    <ogcn:published_input field="obj" name="actual" ref="192adde9"/>
                                                                    <ogcn:published_input field="obj" name="target" ref="6cdf0f77"/>
                                                                    <ogcn:published_input field="obj" name="word" ref="11910d74"/>
                                                                    <extensions>
                                                                        <oga:meta x="376" y="49"/>
                                                                    </extensions>
                                                                </ogcn:macro>
                                                                <node id="23bd997c" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                                    <input name="data" optional="false">Data to print</input>
                                                                    <extensions>
                                                                        <oga:settings>
                                                                            <oga:property key="dataTemplate"><![CDATA[
#set($tableName = "$DATA")
#set($table = $tables.get($tableName))
#printTableWithIdAndCaption( $table $tableName $caption [] )
]]></oga:property>
                                                                            <oga:property key="showText"><![CDATA[true]]></oga:property>
                                                                            <oga:property key="showTable"><![CDATA[false]]></oga:property>
                                                                            <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                                        </oga:settings>
                                                                        <oga:meta x="328" y="210">
                                                                            <oga:default for="append" type="java.lang.Boolean">true</oga:default>
                                                                        </oga:meta>
                                                                    </extensions>
                                                                </node>
                                                                <link dest="ee943fb" destField="buffer" source="47685344" sourceField="obj"/>
                                                                <link dest="ee943fb" destField="target" source="313770ea" sourceField="obj"/>
                                                                <link dest="23bd997c" destField="buffer" source="47685344" sourceField="obj"/>
                                                                <link dest="ee943fb" destField="actual" source="3fbb12ae" sourceField="obj"/>
                                                                <link dest="23bd997c" destField="data" source="61afc392" sourceField="obj"/>
                                                                <link dest="ee943fb" destField="word" source="58d27acc" sourceField="obj"/>
                                                            </graph>
                                                            <ogcn:published_input field="obj" name="buffer" ref="47685344"/>
                                                            <ogcn:published_input field="obj" name="target" ref="313770ea"/>
                                                            <ogcn:published_input field="obj" name="actual" ref="3fbb12ae"/>
                                                            <ogcn:published_input field="obj" name="WAP table name" ref="61afc392"/>
                                                            <ogcn:published_input field="obj" name="word" ref="58d27acc"/>
                                                            <extensions>
                                                                <oga:meta x="826" y="542"/>
                                                            </extensions>
                                                        </ogcn:macro>
                                                        <link dest="64f8407c" destField="obj" source="36e48cb9" sourceField="obj"/>
                                                        <link dest="4541ca3a0e544ebd" destField="table" source="f150b722d7ce4792" sourceField="obj"/>
                                                        <link dest="4541ca3a0e544ebd" destField="row" source="64f8407c" sourceField="obj"/>
                                                        <link dest="93e56a1c9e0d4fa8" destField="target" source="4541ca3a0e544ebd" sourceField="target"/>
                                                        <link dest="93e56a1c9e0d4fa8" destField="actual" source="4541ca3a0e544ebd" sourceField="actual"/>
                                                        <link dest="93e56a1c9e0d4fa8" destField="alignment" source="4541ca3a0e544ebd" sourceField="alignment"/>
                                                        <link dest="93e56a1c9e0d4fa8" destField="word" source="4541ca3a0e544ebd" sourceField="orthography"/>
                                                        <link dest="5d81a99f" destField="data" source="93e56a1c9e0d4fa8" sourceField="table"/>
                                                        <link dest="211f40c6c55a4ede" destField="speaker" source="37e5d87a8ee2429a" sourceField="obj"/>
                                                        <link dest="211f40c6c55a4ede" destField="word" source="4541ca3a0e544ebd" sourceField="orthography"/>
                                                        <link dest="211f40c6c55a4ede" destField="row" source="64f8407c" sourceField="obj"/>
                                                        <link dest="5d81a99f" destField="buffer" source="211f40c6c55a4ede" sourceField="value"/>
                                                        <link dest="14b535db" destField="target" source="4541ca3a0e544ebd" sourceField="target"/>
                                                        <link dest="14b535db" destField="actual" source="4541ca3a0e544ebd" sourceField="actual"/>
                                                        <link dest="14b535db" destField="buffer" source="345c1635ecf04d55" sourceField="obj"/>
                                                        <link dest="14b535db" destField="WAP table name" source="5d81a99f" sourceField="buffer"/>
                                                        <link dest="14b535db" destField="word" source="4541ca3a0e544ebd" sourceField="orthography"/>
                                                        <link dest="d295335" destField="subtotal" source="93e56a1c9e0d4fa8" sourceField="segmental summary"/>
                                                        <link dest="d295335" destField="totals" source="7d75bcad2044891" sourceField="obj"/>
                                                        <extensions>
                                                            <oga:notes>
                                                                <oga:note color="0xffff96" height="696" title="Inputs" width="365" x="50" y="164"/>
                                                            </oga:notes>
                                                            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                                        </extensions>
                                                    </graph>
                                                    <ogcn:published_input field="obj" name="table" ref="f150b722d7ce4792"/>
                                                    <ogcn:published_input field="obj" name="speaker" ref="37e5d87a8ee2429a"/>
                                                    <ogcn:published_input field="obj" name="participant buffer" ref="345c1635ecf04d55"/>
                                                    <ogcn:published_input field="obj" name="segmental totals" ref="7d75bcad2044891"/>
                                                    <ogcn:published_output field="totals" name="totals" ref="d295335"/>
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.IterableClassNode.className"><![CDATA[java.util.List]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="917" y="163"/>
                                                    </extensions>
                                                </ogcn:macro>
                                                <node id="2043e708" name="Setup Segmental Totals Table" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                                                    <input name="totals" optional="false"/>
                                                    <output name="table" type="ca.phon.query.report.datasource.DefaultTableDataSource"/>
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="__script"><![CDATA[importClass(Packages.ca.phon.query.report.datasource.DefaultTableDataSource)

function init(inputs, outputs) {
	inputs.add("totals", "", false, false);

	outputs.add("table", "", false, DefaultTableDataSource);
}

function run(context) {
	var totals = context.get("totals");
	var table = new DefaultTableDataSource();

	var colIdx = 0;
	table.setColumnTitle(colIdx++, "");
	table.setColumnTitle(colIdx++, "Onset");
	table.setColumnTitle(colIdx++, "Nucleus");
	table.setColumnTitle(colIdx++, "Coda");
	table.setColumnTitle(colIdx++, "Unknown");

	var idx = 0;
	var rowData = []
	// target
	rowData[idx++] = "# Target";
	rowData[idx++] = new java.lang.Integer(totals.onset.target.count);
	rowData[idx++] = new java.lang.Integer(totals.nucleus.target.count);
	rowData[idx++] = new java.lang.Integer(totals.coda.target.count);
	rowData[idx++] = new java.lang.Integer(totals.unknown.target.count);
	table.addRow(rowData);

	idx = 0;
	// correct
	rowData[idx++] = "# Correct";
	rowData[idx++] = new java.lang.Integer(totals.onset.correct.count);
	rowData[idx++] = new java.lang.Integer(totals.nucleus.correct.count);
	rowData[idx++] = new java.lang.Integer(totals.coda.correct.count);
	rowData[idx++] = new java.lang.Integer(totals.unknown.correct.count);
	table.addRow(rowData);

	idx = 0;
	// substitutions
	rowData[idx++] = "# Substitutions";
	rowData[idx++] = new java.lang.Integer(totals.onset.substitution.count);
	rowData[idx++] = new java.lang.Integer(totals.nucleus.substitution.count);
	rowData[idx++] = new java.lang.Integer(totals.coda.substitution.count);
	rowData[idx++] = new java.lang.Integer(totals.unknown.substitution.count);
	table.addRow(rowData);

	idx = 0;
	// deletions
	rowData[idx++] = "# Deletions";
	rowData[idx++] = new java.lang.Integer(totals.onset.deletion.count);
	rowData[idx++] = new java.lang.Integer(totals.nucleus.deletion.count);
	rowData[idx++] = new java.lang.Integer(totals.coda.deletion.count);
	rowData[idx++] = new java.lang.Integer(totals.unknown.deletion.count);
	table.addRow(rowData);

	idx = 0;
	// distortions
	rowData[idx++] = "# Distortions";
	rowData[idx++] = new java.lang.Integer(totals.onset.distortion.count);
	rowData[idx++] = new java.lang.Integer(totals.nucleus.distortion.count);
	rowData[idx++] = new java.lang.Integer(totals.coda.distortion.count);
	rowData[idx++] = new java.lang.Integer(totals.unknown.distortion.count);
	table.addRow(rowData);

	idx = 0;
	// epenthesis
	rowData[idx++] = "# Epenthesis";
	rowData[idx++] = new java.lang.Integer(totals.onset.epenthesis.count);
	rowData[idx++] = new java.lang.Integer(totals.nucleus.epenthesis.count);
	rowData[idx++] = new java.lang.Integer(totals.coda.epenthesis.count);
	rowData[idx++] = new java.lang.Integer(totals.unknown.epenthesis.count);
	table.addRow(rowData);

	idx = 0;
	// % correct
	rowData[idx++] = "% Correct";
	var pc = (totals.onset.target.count + totals.onset.epenthesis.count > 0 
		? (totals.onset.correct.count / (totals.onset.correct.count+totals.onset.substitution.count+totals.onset.deletion.count+totals.onset.distortion.count+totals.onset.epenthesis.count)) * 100.0 
		: 0.0);
	rowData[idx++] = new java.lang.Float(pc);

	pc = (totals.nucleus.target.count + totals.nucleus.epenthesis.count > 0
		? (totals.nucleus.correct.count / (totals.nucleus.correct.count+totals.nucleus.substitution.count+totals.nucleus.deletion.count+totals.nucleus.distortion.count+totals.nucleus.epenthesis.count)) * 100.0
		: 0.0);
	rowData[idx++] = new java.lang.Float(pc);

	pc = (totals.coda.target.count + totals.coda.epenthesis.count > 0 
		? (totals.coda.correct.count / (totals.coda.correct.count+totals.coda.substitution.count+totals.coda.deletion.count+totals.coda.distortion.count+totals.coda.epenthesis.count)) * 100.0
		: 0.0);
	rowData[idx++] = new java.lang.Float(pc);

	pc = (totals.unknown.target.count + totals.unknown.epenthesis.count > 0 
		? (totals.unknown.correct.count / (totals.unknown.correct.count+totals.unknown.substitution.count+totals.unknown.deletion.count+totals.unknown.distortion.count+totals.unknown.epenthesis.count)) * 100.0
		: 0.0);
	rowData[idx++] = new java.lang.Float(pc);
	table.addRow(rowData);
	
	context.put("table", table);
}
]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="996" y="571"/>
                                                    </extensions>
                                                </node>
                                                <node id="29a99473" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                    <input name="data" optional="true">Data to print</input>
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="dataTemplate"><![CDATA[$DATA]]></oga:property>
                                                            <oga:property key="showText"><![CDATA[false]]></oga:property>
                                                            <oga:property key="showTable"><![CDATA[true]]></oga:property>
                                                            <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="1070" y="690">
                                                            <oga:default for="buffer" type="java.lang.String">Segmental Totals</oga:default>
                                                        </oga:meta>
                                                    </extensions>
                                                </node>
                                                <link dest="a8f4c8d442b84425" destField="end" source="5c792a0560b4beb" sourceField="result"/>
                                                <link dest="a8f4c8d442b84425" destField="start" source="7481fcacc2964d6d" sourceField="value"/>
                                                <link dest="5c792a0560b4beb" destField="rowCount" source="b25c5b3d1d7440da" sourceField="rowCount"/>
                                                <link dest="6cca2ae5" destField="collection" source="a8f4c8d442b84425" sourceField="range"/>
                                                <link dest="6cca2ae5" destField="table" source="b25c5b3d1d7440da" sourceField="obj"/>
                                                <link dest="6cca2ae5" destField="speaker" source="c221b0481e9c496b" sourceField="obj"/>
                                                <link dest="bedc546" destField="buffer" source="600677ed57684db3" sourceField="obj"/>
                                                <link dest="bedc546" destField="data" source="6b3143df3116411b" sourceField="obj"/>
                                                <link dest="6cca2ae5" destField="participant buffer" source="600677ed57684db3" sourceField="obj"/>
                                                <link dest="6cca2ae5" destField="segmental totals" source="3b4467e2" sourceField="totals"/>
                                                <link dest="2043e708" destField="totals" source="6cca2ae5" sourceField="totals"/>
                                                <link dest="29a99473" destField="data" source="2043e708" sourceField="table"/>
                                                <extensions>
                                                    <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                                    <oga:notes>
                                                        <oga:note color="0xffff96" height="783" title="Published Inputs" width="394" x="25" y="100"/>
                                                    </oga:notes>
                                                </extensions>
                                            </graph>
                                            <ogcn:published_input field="obj" name="table" ref="b25c5b3d1d7440da"/>
                                            <ogcn:published_input field="obj" name="speaker" ref="c221b0481e9c496b"/>
                                            <ogcn:published_input field="obj" name="session name" ref="6b3143df3116411b"/>
                                            <ogcn:published_input field="obj" name="participant buffer" ref="600677ed57684db3"/>
                                            <ogcn:published_output field="totals" name="totals" ref="6cca2ae5"/>
                                            <extensions>
                                                <oga:meta x="788" y="153"/>
                                            </extensions>
                                        </ogcn:macro>
                                        <node id="eb28c5583c0f4ffb" name="Segmental Totals" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                                            <input name="totals" optional="false"/>
                                            <input name="subtotal" optional="false"/>
                                            <output name="totals" type="java.lang.Object"/>
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	inputs.add("totals", "", false, false);
	inputs.add("subtotal", "", false, false);

	outputs.add("totals", "", false, java.lang.Object);
}
	
function run(context) {
	var totals = context.get("totals");
	var subtotal = context.get("subtotal");

	sumcounts(totals.onset, subtotal.onset);
	sumcounts(totals.nucleus, subtotal.nucleus);
	sumcounts(totals.coda, subtotal.coda);
	sumcounts(totals.unknown, subtotal.unknown);

	context.put("totals", totals);
}

function sumcounts(total, subtotal) {
	total.target.count += subtotal.target.count;
	total.correct.count += subtotal.correct.count;
	total.substitution.count += subtotal.substitution.count;
	total.deletion.count += subtotal.deletion.count;
	total.epenthesis.count += subtotal.epenthesis.count;
}
]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="1105" y="163"/>
                                            </extensions>
                                        </node>
                                        <link dest="d0e50cd137aa45c3" destField="sessionName" source="9cd592ba93e14241" sourceField="obj"/>
                                        <link dest="d0e50cd137aa45c3" destField="tableMap" source="22103902a02f452c" sourceField="obj"/>
                                        <link dest="c243d0cc85994d01" destField="enabled" source="d0e50cd137aa45c3" sourceField="exists"/>
                                        <link dest="58f7fd28692049d2" destField="data" source="9cd592ba93e14241" sourceField="obj"/>
                                        <link dest="c243d0cc85994d01" destField="table" source="d0e50cd137aa45c3" sourceField="table"/>
                                        <link dest="c243d0cc85994d01" destField="speaker" source="2cde07591d49421f" sourceField="obj"/>
                                        <link dest="c243d0cc85994d01" destField="session name" source="9cd592ba93e14241" sourceField="obj"/>
                                        <link dest="c243d0cc85994d01" destField="participant buffer" source="e23feb1ca66345eb" sourceField="obj"/>
                                        <link dest="eb28c5583c0f4ffb" destField="totals" source="9d4e5d5c75304010" sourceField="obj"/>
                                        <link dest="eb28c5583c0f4ffb" destField="subtotal" source="c243d0cc85994d01" sourceField="totals"/>
                                        <link dest="eb28c5583c0f4ffb" destField="enabled" source="d0e50cd137aa45c3" sourceField="exists"/>
                                        <extensions>
                                            <oga:notes>
                                                <oga:note color="0xffff96" height="643" title="Published Inputs" width="314" x="61" y="296"/>
                                                <oga:note color="0x96ff96" height="266" title="Condition" width="400" x="709" y="69">This node is only executed if there are results in the current session for the current participant.</oga:note>
                                                <oga:note color="0xffc864" height="270" title="Report Template" width="337" x="687" y="458">Set $sessionPath variable in breakdown template</oga:note>
                                            </oga:notes>
                                            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                        </extensions>
                                    </graph>
                                    <ogcn:published_input field="obj" name="tableMap" ref="22103902a02f452c"/>
                                    <ogcn:published_input field="obj" name="speaker" ref="2cde07591d49421f"/>
                                    <ogcn:published_input field="obj" name="particiant buffer" ref="e23feb1ca66345eb"/>
                                    <ogcn:published_input field="obj" name="segmental totals" ref="9d4e5d5c75304010"/>
                                    <ogcn:published_output field="totals" name="totals" ref="eb28c5583c0f4ffb"/>
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.IterableClassNode.className"><![CDATA[java.util.Set]]></oga:property>
                                        </oga:settings>
                                        <oga:meta x="997" y="287"/>
                                    </extensions>
                                </ogcn:macro>
                                <node id="2a33337e87ae43a9" name="Setup Segmental Totals Table" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                                    <input name="totals" optional="false"/>
                                    <output name="table" type="ca.phon.query.report.datasource.DefaultTableDataSource"/>
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="__script"><![CDATA[importClass(Packages.ca.phon.query.report.datasource.DefaultTableDataSource)

function init(inputs, outputs) {
	inputs.add("totals", "", false, false);

	outputs.add("table", "", false, DefaultTableDataSource);
}

function run(context) {
	var totals = context.get("totals");
	var table = new DefaultTableDataSource();

	var colIdx = 0;
	table.setColumnTitle(colIdx++, "");
	table.setColumnTitle(colIdx++, "Onset");
	table.setColumnTitle(colIdx++, "Nucleus");
	table.setColumnTitle(colIdx++, "Coda");
	table.setColumnTitle(colIdx++, "Unknown");

	var idx = 0;
	var rowData = []
	// target
	rowData[idx++] = "# Target";
	rowData[idx++] = new java.lang.Integer(totals.onset.target.count);
	rowData[idx++] = new java.lang.Integer(totals.nucleus.target.count);
	rowData[idx++] = new java.lang.Integer(totals.coda.target.count);
	rowData[idx++] = new java.lang.Integer(totals.unknown.target.count);
	table.addRow(rowData);

	idx = 0;
	// correct
	rowData[idx++] = "# Correct";
	rowData[idx++] = new java.lang.Integer(totals.onset.correct.count);
	rowData[idx++] = new java.lang.Integer(totals.nucleus.correct.count);
	rowData[idx++] = new java.lang.Integer(totals.coda.correct.count);
	rowData[idx++] = new java.lang.Integer(totals.unknown.correct.count);
	table.addRow(rowData);

	idx = 0;
	// substitutions
	rowData[idx++] = "# Substitutions";
	rowData[idx++] = new java.lang.Integer(totals.onset.substitution.count);
	rowData[idx++] = new java.lang.Integer(totals.nucleus.substitution.count);
	rowData[idx++] = new java.lang.Integer(totals.coda.substitution.count);
	rowData[idx++] = new java.lang.Integer(totals.unknown.substitution.count);
	table.addRow(rowData);

	idx = 0;
	// deletions
	rowData[idx++] = "# Deletions";
	rowData[idx++] = new java.lang.Integer(totals.onset.deletion.count);
	rowData[idx++] = new java.lang.Integer(totals.nucleus.deletion.count);
	rowData[idx++] = new java.lang.Integer(totals.coda.deletion.count);
	rowData[idx++] = new java.lang.Integer(totals.unknown.deletion.count);
	table.addRow(rowData);

	idx = 0;
	// distortions
	rowData[idx++] = "# Distortions";
	rowData[idx++] = new java.lang.Integer(totals.onset.distortion.count);
	rowData[idx++] = new java.lang.Integer(totals.nucleus.distortion.count);
	rowData[idx++] = new java.lang.Integer(totals.coda.distortion.count);
	rowData[idx++] = new java.lang.Integer(totals.unknown.distortion.count);
	table.addRow(rowData);

	idx = 0;
	// epenthesis
	rowData[idx++] = "# Epenthesis";
	rowData[idx++] = new java.lang.Integer(totals.onset.epenthesis.count);
	rowData[idx++] = new java.lang.Integer(totals.nucleus.epenthesis.count);
	rowData[idx++] = new java.lang.Integer(totals.coda.epenthesis.count);
	rowData[idx++] = new java.lang.Integer(totals.unknown.epenthesis.count);
	table.addRow(rowData);

	idx = 0;
	// % correct
	rowData[idx++] = "% Correct";
	var pc = (totals.onset.target.count + totals.onset.epenthesis.count > 0 
		? (totals.onset.correct.count / (totals.onset.correct.count+totals.onset.substitution.count+totals.onset.deletion.count+totals.onset.distortion.count+totals.onset.epenthesis.count)) * 100.0 
		: 0.0);
	rowData[idx++] = new java.lang.Float(pc);

	pc = (totals.nucleus.target.count + totals.nucleus.epenthesis.count > 0
		? (totals.nucleus.correct.count / (totals.nucleus.correct.count+totals.nucleus.substitution.count+totals.nucleus.deletion.count+totals.nucleus.distortion.count+totals.nucleus.epenthesis.count)) * 100.0
		: 0.0);
	rowData[idx++] = new java.lang.Float(pc);

	pc = (totals.coda.target.count + totals.coda.epenthesis.count > 0 
		? (totals.coda.correct.count / (totals.coda.correct.count+totals.coda.substitution.count+totals.coda.deletion.count+totals.coda.distortion.count+totals.coda.epenthesis.count)) * 100.0
		: 0.0);
	rowData[idx++] = new java.lang.Float(pc);

	pc = (totals.unknown.target.count + totals.unknown.epenthesis.count > 0 
		? (totals.unknown.correct.count / (totals.unknown.correct.count+totals.unknown.substitution.count+totals.unknown.deletion.count+totals.unknown.distortion.count+totals.unknown.epenthesis.count)) * 100.0
		: 0.0);
	rowData[idx++] = new java.lang.Float(pc);
	table.addRow(rowData);
	
	context.put("table", table);
}
]]></oga:property>
                                        </oga:settings>
                                        <oga:meta x="1031" y="625"/>
                                    </extensions>
                                </node>
                                <node id="3042292c7cbe4d0b" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                    <input name="data" optional="false">Data to print</input>
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="dataTemplate"><![CDATA[$DATA]]></oga:property>
                                            <oga:property key="showText"><![CDATA[false]]></oga:property>
                                            <oga:property key="showTable"><![CDATA[true]]></oga:property>
                                            <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                        </oga:settings>
                                        <oga:meta x="1105" y="744">
                                            <oga:default for="buffer" type="java.lang.String">Segmental Totals_Speaker</oga:default>
                                        </oga:meta>
                                    </extensions>
                                </node>
                                <link dest="923b1235cde247a8" destField="table" source="fda3b374aa2e4b57" sourceField="obj"/>
                                <link dest="cd529cc9bedf4ecc" destField="collection" source="923b1235cde247a8" sourceField="keySet"/>
                                <link dest="cd529cc9bedf4ecc" destField="tableMap" source="923b1235cde247a8" sourceField="tableMap"/>
                                <link dest="cd529cc9bedf4ecc" destField="speaker" source="32b10bbefcb14fb6" sourceField="obj"/>
                                <link dest="5840d18" destField="data" source="32b10bbefcb14fb6" sourceField="obj"/>
                                <link dest="756573d2" destField="obj" source="32b10bbefcb14fb6" sourceField="obj"/>
                                <link dest="5840d18" destField="buffer" source="756573d2" sourceField="value"/>
                                <link dest="215004f3" destField="obj" source="5840d18" sourceField="buffer"/>
                                <link dest="cd529cc9bedf4ecc" destField="particiant buffer" source="215004f3" sourceField="obj"/>
                                <link dest="3042292c7cbe4d0b" destField="data" source="2a33337e87ae43a9" sourceField="table"/>
                                <link dest="cd529cc9bedf4ecc" destField="segmental totals" source="57b2fd38a4c54ca8" sourceField="totals"/>
                                <link dest="2a33337e87ae43a9" destField="totals" source="cd529cc9bedf4ecc" sourceField="totals"/>
                                <extensions>
                                    <oga:notes>
                                        <oga:note color="0xffff96" height="705" title="Published Inputs" width="286" x="68" y="117"/>
                                    </oga:notes>
                                    <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                </extensions>
                            </graph>
                            <ogcn:published_input field="obj" name="table" ref="fda3b374aa2e4b57"/>
                            <ogcn:published_input field="obj" name="selectedSessions" ref="a1995dcea18b4ba9"/>
                            <ogcn:published_input field="obj" name="speaker" ref="32b10bbefcb14fb6"/>
                            <ogcn:published_output field="totals" name="totals" ref="cd529cc9bedf4ecc"/>
                            <extensions>
                                <oga:meta x="788" y="134"/>
                            </extensions>
                        </ogcn:macro>
                        <node id="1ccd59e9ffe049af" name="Segmental Totals" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                            <input name="totals" optional="false"/>
                            <input name="subtotal" optional="false"/>
                            <output name="totals" type="java.lang.Object"/>
                            <extensions>
                                <oga:settings>
                                    <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	inputs.add("totals", "", false, false);
	inputs.add("subtotal", "", false, false);

	outputs.add("totals", "", false, java.lang.Object);
}
	
function run(context) {
	var totals = context.get("totals");
	var subtotal = context.get("subtotal");

	sumcounts(totals.onset, subtotal.onset);
	sumcounts(totals.nucleus, subtotal.nucleus);
	sumcounts(totals.coda, subtotal.coda);
	sumcounts(totals.unknown, subtotal.unknown);

	context.put("totals", totals);
}

function sumcounts(total, subtotal) {
	total.target.count += subtotal.target.count;
	total.correct.count += subtotal.correct.count;
	total.substitution.count += subtotal.substitution.count;
	total.deletion.count += subtotal.deletion.count;
	total.epenthesis.count += subtotal.epenthesis.count;
}
]]></oga:property>
                                </oga:settings>
                                <oga:meta x="1049" y="140"/>
                            </extensions>
                        </node>
                        <link dest="e8ae4a39fdd74375" destField="speaker" source="7d1055dcc76e435a" sourceField="obj"/>
                        <link dest="7d1055dcc76e435a" destField="obj" source="4579a77279ca4a66" sourceField="obj"/>
                        <link dest="e8ae4a39fdd74375" destField="tableMap" source="16d59d355bab4424" sourceField="obj"/>
                        <link dest="e9d3beb84fbe42d4" destField="table" source="e8ae4a39fdd74375" sourceField="table"/>
                        <link dest="e9d3beb84fbe42d4" destField="enabled" source="e8ae4a39fdd74375" sourceField="exists"/>
                        <link dest="e9d3beb84fbe42d4" destField="selectedSessions" source="3c9691c6bb004e13" sourceField="obj"/>
                        <link dest="e9d3beb84fbe42d4" destField="speaker" source="7d1055dcc76e435a" sourceField="obj"/>
                        <link dest="1ccd59e9ffe049af" destField="totals" source="6e8d3cbf56644e64" sourceField="obj"/>
                        <link dest="1ccd59e9ffe049af" destField="subtotal" source="e9d3beb84fbe42d4" sourceField="totals"/>
                        <link dest="1ccd59e9ffe049af" destField="enabled" source="e8ae4a39fdd74375" sourceField="exists"/>
                        <extensions>
                            <oga:notes>
                                <oga:note color="0xffff96" height="565" title="Published Inputs" width="229" x="33" y="160"/>
                            </oga:notes>
                            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                        </extensions>
                    </graph>
                    <ogcn:published_input field="obj" name="tableMap" ref="16d59d355bab4424"/>
                    <ogcn:published_input field="obj" name="selectedSessions" ref="3c9691c6bb004e13"/>
                    <ogcn:published_input field="obj" name="segmental totals" ref="6e8d3cbf56644e64"/>
                    <ogcn:published_output field="totals" name="totals" ref="1ccd59e9ffe049af"/>
                    <extensions>
                        <oga:settings>
                            <oga:property key="ca.gedge.opgraph.nodes.reflect.IterableClassNode.className"><![CDATA[java.util.ArrayList]]></oga:property>
                        </oga:settings>
                        <oga:meta x="825" y="187"/>
                    </extensions>
                </ogcn:macro>
                <ogcn:macro id="235e6b2004c4b74" name="Finish Report Template" type="ca.gedge.opgraph.nodes.general.MacroNode">
                    <graph id="3c1f7df7">
                        <ogcn:macro id="3923fa2029604c1d" name="Add Buffer to Template" type="ca.gedge.opgraph.nodes.general.MacroNode">
                            <graph id="4e132b9e">
                                <node id="7115bbe5b35044fd" name="String#&lt;init&gt;(String)" type="class:ca.gedge.opgraph.nodes.reflect.ConstructorNode">
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.classMember"><![CDATA[<init>(java.lang.String)]]></oga:property>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.declaredClass"><![CDATA[java.lang.String]]></oga:property>
                                        </oga:settings>
                                        <oga:meta x="55" y="74"/>
                                    </extensions>
                                </node>
                                <ogcn:macro id="131f6b8ff0b34676" name="Add to Template" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                    <graph id="16d4fc42">
                                        <node id="6fbd05c6f5044f6a" type="class:ca.phon.app.opgraph.nodes.log.GetBufferNode">
                                            <extensions>
                                                <oga:meta x="518" y="147">
                                                    <oga:default for="buffer" type="java.lang.String"/>
                                                </oga:meta>
                                            </extensions>
                                        </node>
                                        <node id="415b870a5753497e" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                            <input name="data" optional="false">Data to print</input>
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="dataTemplate"><![CDATA[
#h2("Summary")

$DATA
]]></oga:property>
                                                    <oga:property key="showText"><![CDATA[true]]></oga:property>
                                                    <oga:property key="showTable"><![CDATA[false]]></oga:property>
                                                    <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="677" y="151">
                                                    <oga:default for="buffer" type="java.lang.String">Report Template</oga:default>
                                                    <oga:default for="append" type="java.lang.Boolean">true</oga:default>
                                                </oga:meta>
                                            </extensions>
                                        </node>
                                        <link dest="415b870a5753497e" destField="data" source="6fbd05c6f5044f6a" sourceField="text"/>
                                    </graph>
                                    <ogcn:published_input field="buffer" name="buffer" ref="6fbd05c6f5044f6a"/>
                                    <extensions>
                                        <oga:meta x="305" y="28"/>
                                    </extensions>
                                </ogcn:macro>
                                <node id="bdf929b961f4125" type="class:ca.phon.app.opgraph.nodes.log.CloseBufferNode">
                                    <extensions>
                                        <oga:meta x="316" y="125"/>
                                    </extensions>
                                </node>
                                <link dest="bdf929b961f4125" destField="buffer" source="7115bbe5b35044fd" sourceField="value"/>
                                <link dest="131f6b8ff0b34676" destField="buffer" source="7115bbe5b35044fd" sourceField="value"/>
                                <extensions>
                                    <oga:notes>
                                        <oga:note color="0xffff96" height="220" title="Published Inputs" width="234" x="35" y="20"/>
                                    </oga:notes>
                                </extensions>
                            </graph>
                            <ogcn:published_input field="arg1" name="arg1" ref="7115bbe5b35044fd"/>
                            <extensions>
                                <oga:meta x="323" y="30">
                                    <oga:default for="arg1" type="java.lang.String">Summary Template</oga:default>
                                </oga:meta>
                            </extensions>
                        </ogcn:macro>
                        <node id="9e04d2dc538f48be" type="class:ca.gedge.opgraph.nodes.general.PassThroughNode">
                            <extensions>
                                <oga:meta x="66" y="65"/>
                            </extensions>
                        </node>
                        <ogcn:macro id="7cd7745d846e40f9" name="Add Buffer to Template" type="ca.gedge.opgraph.nodes.general.MacroNode">
                            <graph id="3b2ce500">
                                <node id="fe222fb90b3e4528" name="String#&lt;init&gt;(String)" type="class:ca.gedge.opgraph.nodes.reflect.ConstructorNode">
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.classMember"><![CDATA[<init>(java.lang.String)]]></oga:property>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.declaredClass"><![CDATA[java.lang.String]]></oga:property>
                                        </oga:settings>
                                        <oga:meta x="55" y="74"/>
                                    </extensions>
                                </node>
                                <ogcn:macro id="9db50f56eab44172" name="Add to Template" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                    <graph id="7dbfb8d9">
                                        <node id="dff06fc8f07546df" type="class:ca.phon.app.opgraph.nodes.log.GetBufferNode">
                                            <extensions>
                                                <oga:meta x="518" y="147">
                                                    <oga:default for="buffer" type="java.lang.String"/>
                                                </oga:meta>
                                            </extensions>
                                        </node>
                                        <node id="bd68466e8fad45fe" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                            <input name="data" optional="false">Data to print</input>
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="dataTemplate"><![CDATA[
#h2("Breakdown")

$DATA
]]></oga:property>
                                                    <oga:property key="showText"><![CDATA[true]]></oga:property>
                                                    <oga:property key="showTable"><![CDATA[false]]></oga:property>
                                                    <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="677" y="151">
                                                    <oga:default for="buffer" type="java.lang.String">Report Template</oga:default>
                                                    <oga:default for="append" type="java.lang.Boolean">true</oga:default>
                                                </oga:meta>
                                            </extensions>
                                        </node>
                                        <link dest="bd68466e8fad45fe" destField="data" source="dff06fc8f07546df" sourceField="text"/>
                                    </graph>
                                    <ogcn:published_input field="buffer" name="buffer" ref="dff06fc8f07546df"/>
                                    <extensions>
                                        <oga:meta x="305" y="28"/>
                                    </extensions>
                                </ogcn:macro>
                                <node id="2ef7077971be4845" type="class:ca.phon.app.opgraph.nodes.log.CloseBufferNode">
                                    <extensions>
                                        <oga:meta x="316" y="125"/>
                                    </extensions>
                                </node>
                                <link dest="2ef7077971be4845" destField="buffer" source="fe222fb90b3e4528" sourceField="value"/>
                                <link dest="9db50f56eab44172" destField="buffer" source="fe222fb90b3e4528" sourceField="value"/>
                                <extensions>
                                    <oga:notes>
                                        <oga:note color="0xffff96" height="220" title="Published Inputs" width="234" x="35" y="20"/>
                                    </oga:notes>
                                </extensions>
                            </graph>
                            <ogcn:published_input field="arg1" name="arg1" ref="fe222fb90b3e4528"/>
                            <extensions>
                                <oga:meta x="323" y="236">
                                    <oga:default for="arg1" type="java.lang.String">Breakdown Template</oga:default>
                                </oga:meta>
                            </extensions>
                        </ogcn:macro>
                        <extensions>
                            <oga:notes>
                                <oga:note color="0xffff96" height="213" title="Published Inputs" width="260" x="31" y="21">This input is ignored</oga:note>
                            </oga:notes>
                            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                        </extensions>
                    </graph>
                    <ogcn:published_input field="input" name="input" ref="9e04d2dc538f48be"/>
                    <extensions>
                        <oga:meta x="827" y="408"/>
                    </extensions>
                </ogcn:macro>
                <node id="c7f69d3dc69a41e6" name="Setup Segmental Totals Table" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                    <input name="totals" optional="false"/>
                    <output name="table" type="ca.phon.query.report.datasource.DefaultTableDataSource"/>
                    <extensions>
                        <oga:settings>
                            <oga:property key="__script"><![CDATA[importClass(Packages.ca.phon.query.report.datasource.DefaultTableDataSource)

function init(inputs, outputs) {
	inputs.add("totals", "", false, false);

	outputs.add("table", "", false, DefaultTableDataSource);
}

function run(context) {
	var totals = context.get("totals");
	var table = new DefaultTableDataSource();

	var colIdx = 0;
	table.setColumnTitle(colIdx++, "");
	table.setColumnTitle(colIdx++, "Onset");
	table.setColumnTitle(colIdx++, "Nucleus");
	table.setColumnTitle(colIdx++, "Coda");
	table.setColumnTitle(colIdx++, "Unknown");

	var idx = 0;
	var rowData = []
	// target
	rowData[idx++] = "# Target";
	rowData[idx++] = new java.lang.Integer(totals.onset.target.count);
	rowData[idx++] = new java.lang.Integer(totals.nucleus.target.count);
	rowData[idx++] = new java.lang.Integer(totals.coda.target.count);
	rowData[idx++] = new java.lang.Integer(totals.unknown.target.count);
	table.addRow(rowData);

	idx = 0;
	// correct
	rowData[idx++] = "# Correct";
	rowData[idx++] = new java.lang.Integer(totals.onset.correct.count);
	rowData[idx++] = new java.lang.Integer(totals.nucleus.correct.count);
	rowData[idx++] = new java.lang.Integer(totals.coda.correct.count);
	rowData[idx++] = new java.lang.Integer(totals.unknown.correct.count);
	table.addRow(rowData);

	idx = 0;
	// substitutions
	rowData[idx++] = "# Substitutions";
	rowData[idx++] = new java.lang.Integer(totals.onset.substitution.count);
	rowData[idx++] = new java.lang.Integer(totals.nucleus.substitution.count);
	rowData[idx++] = new java.lang.Integer(totals.coda.substitution.count);
	rowData[idx++] = new java.lang.Integer(totals.unknown.substitution.count);
	table.addRow(rowData);

	idx = 0;
	// deletions
	rowData[idx++] = "# Deletions";
	rowData[idx++] = new java.lang.Integer(totals.onset.deletion.count);
	rowData[idx++] = new java.lang.Integer(totals.nucleus.deletion.count);
	rowData[idx++] = new java.lang.Integer(totals.coda.deletion.count);
	rowData[idx++] = new java.lang.Integer(totals.unknown.deletion.count);
	table.addRow(rowData);

	idx = 0;
	// distortions
	rowData[idx++] = "# Distortions";
	rowData[idx++] = new java.lang.Integer(totals.onset.distortion.count);
	rowData[idx++] = new java.lang.Integer(totals.nucleus.distortion.count);
	rowData[idx++] = new java.lang.Integer(totals.coda.distortion.count);
	rowData[idx++] = new java.lang.Integer(totals.unknown.distortion.count);
	table.addRow(rowData);

	idx = 0;
	// epenthesis
	rowData[idx++] = "# Epenthesis";
	rowData[idx++] = new java.lang.Integer(totals.onset.epenthesis.count);
	rowData[idx++] = new java.lang.Integer(totals.nucleus.epenthesis.count);
	rowData[idx++] = new java.lang.Integer(totals.coda.epenthesis.count);
	rowData[idx++] = new java.lang.Integer(totals.unknown.epenthesis.count);
	table.addRow(rowData);

	idx = 0;
	// % correct
	rowData[idx++] = "% Correct";
	var pc = (totals.onset.target.count + totals.onset.epenthesis.count > 0 
		? (totals.onset.correct.count / (totals.onset.correct.count+totals.onset.substitution.count+totals.onset.deletion.count+totals.onset.distortion.count+totals.onset.epenthesis.count)) * 100.0 
		: 0.0);
	rowData[idx++] = new java.lang.Float(pc);

	pc = (totals.nucleus.target.count + totals.nucleus.epenthesis.count > 0
		? (totals.nucleus.correct.count / (totals.nucleus.correct.count+totals.nucleus.substitution.count+totals.nucleus.deletion.count+totals.nucleus.distortion.count+totals.nucleus.epenthesis.count)) * 100.0
		: 0.0);
	rowData[idx++] = new java.lang.Float(pc);

	pc = (totals.coda.target.count + totals.coda.epenthesis.count > 0 
		? (totals.coda.correct.count / (totals.coda.correct.count+totals.coda.substitution.count+totals.coda.deletion.count+totals.coda.distortion.count+totals.coda.epenthesis.count)) * 100.0
		: 0.0);
	rowData[idx++] = new java.lang.Float(pc);

	pc = (totals.unknown.target.count + totals.unknown.epenthesis.count > 0 
		? (totals.unknown.correct.count / (totals.unknown.correct.count+totals.unknown.substitution.count+totals.unknown.deletion.count+totals.unknown.distortion.count+totals.unknown.epenthesis.count)) * 100.0
		: 0.0);
	rowData[idx++] = new java.lang.Float(pc);
	table.addRow(rowData);
	
	context.put("table", table);
}
]]></oga:property>
                        </oga:settings>
                        <oga:meta x="1020" y="551"/>
                    </extensions>
                </node>
                <node id="146e30f76f4b4ecf" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                    <input name="data" optional="false">Data to print</input>
                    <extensions>
                        <oga:settings>
                            <oga:property key="dataTemplate"><![CDATA[$DATA]]></oga:property>
                            <oga:property key="showText"><![CDATA[false]]></oga:property>
                            <oga:property key="showTable"><![CDATA[true]]></oga:property>
                            <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                        </oga:settings>
                        <oga:meta x="1094" y="670">
                            <oga:default for="buffer" type="java.lang.String">Segmental Totals_All</oga:default>
                        </oga:meta>
                    </extensions>
                </node>
                <link dest="235e6b2004c4b74" destField="input" source="4bb42cb62a99463c" sourceField="collection"/>
                <link dest="ab51fa1368b04671" destField="reportTitle" source="a76bba62a1b840ab" sourceField="obj"/>
                <link dest="e7eb0f6277c94cc7" destField="results" source="a23f99c423d64c49" sourceField="obj"/>
                <link dest="4bb42cb62a99463c" destField="tableMap" source="a067a50295fe48ce" sourceField="tableMap"/>
                <link dest="e7eb0f6277c94cc7" destField="project" source="2564dd40d5ce4021" sourceField="obj"/>
                <link dest="4bb42cb62a99463c" destField="selectedSessions" source="a12ca1eed6584c87" sourceField="obj"/>
                <link dest="108587762d784db1" destField="script" source="315c425357194883" sourceField="obj"/>
                <link dest="4bb42cb62a99463c" destField="collection" source="9a6b0aacb31f456e" sourceField="obj"/>
                <link dest="108587762d784db1" destField="parameters" source="ab51fa1368b04671" sourceField="obj"/>
                <link dest="a067a50295fe48ce" destField="table" source="e7eb0f6277c94cc7" sourceField="table"/>
                <link dest="ab51fa1368b04671" destField="parameters" source="12b64feb22f6497b" sourceField="obj"/>
                <link dest="146e30f76f4b4ecf" destField="data" source="c7f69d3dc69a41e6" sourceField="table"/>
                <link dest="4bb42cb62a99463c" destField="segmental totals" source="76dc324150b34376" sourceField="totals"/>
                <link dest="c7f69d3dc69a41e6" destField="totals" source="4bb42cb62a99463c" sourceField="totals"/>
                <extensions>
                    <oga:notes>
                        <oga:note color="0xffff96" height="979" title="Published Inputs" width="356" x="9" y="7"/>
                    </oga:notes>
                    <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                </extensions>
            </graph>
            <ogcn:published_input field="obj" name="reportTitle" ref="a76bba62a1b840ab"/>
            <ogcn:published_input field="obj" name="project" ref="2564dd40d5ce4021"/>
            <ogcn:published_input field="obj" name="results" ref="a23f99c423d64c49"/>
            <ogcn:published_input field="obj" name="selected sessions" ref="a12ca1eed6584c87"/>
            <ogcn:published_input field="obj" name="selected participants" ref="9a6b0aacb31f456e"/>
            <ogcn:published_input field="obj" name="script" ref="315c425357194883"/>
            <ogcn:published_input field="obj" name="parameters" ref="12b64feb22f6497b"/>
            <extensions>
                <oga:meta x="733" y="112"/>
            </extensions>
        </ogcn:macro>
        <link dest="b7c53c9330914507" destField="parameters" source="43d39e9b67384156" sourceField="parameters"/>
        <link dest="7ca6b2ef" destField="project" source="35a0fbb5" sourceField="obj"/>
        <link dest="7ca6b2ef" destField="sessions" source="6420582b" sourceField="obj"/>
        <link dest="7e7f6d0b48264831" destField="project" source="7ca6b2ef" sourceField="project"/>
        <link dest="7e7f6d0b48264831" destField="results" source="7ca6b2ef" sourceField="results"/>
        <link dest="7e7f6d0b48264831" destField="selected sessions" source="6420582b" sourceField="obj"/>
        <link dest="7e7f6d0b48264831" destField="selected participants" source="338df44a" sourceField="obj"/>
        <link dest="7e7f6d0b48264831" destField="script" source="7ca6b2ef" sourceField="script"/>
        <link dest="7e7f6d0b48264831" destField="parameters" source="7ca6b2ef" sourceField="parameters"/>
        <link dest="7e7f6d0b48264831" destField="reportTitle" source="b7c53c9330914507" sourceField="reportTitle"/>
        <extensions>
            <opqry:nodewizard type="ca.phon.app.opgraph.analysis.AnalysisWizardExtension">
                <opqry:info format="html" title="WAP">
                    <opqry:message/>
                </opqry:info>
                <opqry:node ref="7ca6b2ef" showAsStep="true">
                    <opqry:info format="html" title="Query : Data Tiers">
                        <opqry:message/>
                    </opqry:info>
                </opqry:node>
                <opqry:report-template name="Report Prefix"/>
                <opqry:report-template name="Report Suffix"/>
            </opqry:nodewizard>
            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
        </extensions>
    </graph>
</opgraph>
