<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<opgraph xmlns="http://gedge.ca/ns/opgraph" xmlns:nes="https://www.phon.ca/ns/node_editor" xmlns:oga="http://gedge.ca/ns/opgraph-app" xmlns:ogcn="http://gedge.ca/ns/opgraph-common-nodes" xmlns:opqry="https://phon.ca/ns/opgraph_query" xmlns:qry="http://phon.ling.mun.ca/ns/query">
    <graph id="root">
        <node id="747f610d" name="Project" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
            <extensions>
                <oga:settings>
                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.project.Project]]></oga:property>
                    <oga:property key="contextKey"><![CDATA[_project]]></oga:property>
                </oga:settings>
                <oga:meta x="15" y="15"/>
            </extensions>
        </node>
        <node id="67ab4a6" name="Selected Sessions" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
            <extensions>
                <oga:settings>
                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.util.ArrayList]]></oga:property>
                    <oga:property key="contextKey"><![CDATA[_selectedSessions]]></oga:property>
                </oga:settings>
                <oga:meta x="103" y="256"/>
            </extensions>
        </node>
        <node id="f00dcc378bd645f1" name="Selected Participants" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
            <extensions>
                <oga:settings>
                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.util.ArrayList]]></oga:property>
                    <oga:property key="contextKey"><![CDATA[_selectedParticipants]]></oga:property>
                </oga:settings>
                <oga:meta x="86" y="381"/>
            </extensions>
        </node>
        <opqry:queryNode id="78e659da" name="Query: Word Match" type="ca.phon.app.opgraph.nodes.query.QueryNode">
            <qry:query xmlns="http://phon.ling.mun.ca/ns/query" date="2017-02-03T07:18:20.907-03:30" name="Query: Word Match" uuid="f6a59e94-0f08-4a55-8085-90c4b9f08e06">
                <script>
                    <source>/*
 * Phon - An open source tool for research in phonology.
 * Copyright (C) 2005 - 2017, Gregory Hedlund &lt;ghedlund@mun.ca&gt; and Yvan Rose &lt;yrose@mun.ca&gt;
 * Dept of Linguistics, Memorial University &lt;https://phon.ca&gt;
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see &lt;http://www.gnu.org/licenses/&gt;.
 */
 
/*
params = {label, "", "Whole-word comparison of IPA Actual vs. IPA Target forms."};
*/

importClass(Packages.ca.phon.syllable.SyllableConstituentType)
importClass(Packages.ca.phon.orthography.Orthography)

var GroupFilter = require("lib/GroupFilter").GroupFilter;
var AlignedGroupFilter = require("lib/TierFilter").TierFilter;
var ParticipantFilter = require("lib/ParticipantFilter").ParticipantFilter;
var WordFilter = require("lib/WordFilter").WordFilter;
var AlignedWordFilter = require("lib/TierFilter").TierFilter;
var ResultType = require("lib/PhonScriptConstants").ResultType;

var filters = {
	"group": new GroupFilter("filters.group"),
	"alignedGroup": new AlignedGroupFilter("filters.alignedGroup"),
	"word": new WordFilter("filters.word"),
	"alignedWord": new AlignedWordFilter("filters.alignedWord"),
	"speaker": new ParticipantFilter("filters.speaker")
};

var ignoreTruncatedParamInfo = {
	"id": "ignoreTruncated",
	"desc": "Ignore truncated words",
	"title": "",
	"def": true
};
var ignoreTruncatedParam;
var ignoreTruncated = ignoreTruncatedParamInfo.def;

var compTypesParamInfo = {
	"id":["includeExactMatch", "includeCVPatternMatch", "includeStressPatternMatch"],
	"title": "Comparators:",
	"desc":["Exact match", "CV pattern (see options below)", "Stress pattern"],
	"def":[true, true, true],
	"numCols":1
};
var compTypesParam;

/*
var includeCVPatternMatch = compTypesParamInfo.def[1];
var includeStressPatternMatch = compTypesParamInfo.def[2];
var includeExactMatch = compTypesParamInfo.def[0];
*/
var includeCVPatternMatch = true;
var includeStressPatternMatch = true;
var includeExactMatch = true; 

var cvOptionsParamInfo = {
    "id":["includeSyllableBoundaries", "includeImplicitBoundaries", "includeStressMarkers"],
    "title": "CV Pattern Options",
    "desc":[ "Include syllable boundaries", "Include implicit boundaries", "Include stress markers"],
    "def":[ true, true, true],
    "numCols": 1
};
var cvOptionsParam;
var includeSyllableBoundaries = cvOptionsParamInfo.def[0];
var includeImplicitBoundaries = cvOptionsParamInfo.def[1];
var includeStressMarkers = cvOptionsParamInfo.def[2];

var searchTier = "IPA Target";
var alignedTier = "IPA Actual";

var mdataExactField = "Word Exact Match";
var mdataCVField = "Word CV Match";
var mdataStressField = "Word Stress Match";

/*
 * Globals
 */
var session;

function begin_search(s) {
    session = s;
}

function setup_params(params) {
	var cvOptionsSep = new SeparatorScriptParam("Comparison Options", false);
	params.add(cvOptionsSep);
	
	ignoreTruncatedParam = new BooleanScriptParam(
		ignoreTruncatedParamInfo.id,
		ignoreTruncatedParamInfo.desc,
		ignoreTruncatedParamInfo.title,
		ignoreTruncatedParamInfo.def);
	params.add(ignoreTruncatedParam);

	/*
	compTypesParam = new MultiboolScriptParam(
		compTypesParamInfo.id,
		compTypesParamInfo.def,
		compTypesParamInfo.desc,
		compTypesParamInfo.title,
		compTypesParamInfo.numCols);
	params.add(compTypesParam);
	*/
	
	cvOptionsParam = new MultiboolScriptParam(
		cvOptionsParamInfo.id,
		cvOptionsParamInfo.def,
		cvOptionsParamInfo.desc,
		cvOptionsParamInfo.title,
		cvOptionsParamInfo.numCols);
	params.add(cvOptionsParam);
	
	filters.group.param_setup(params);
	var sep = new LabelScriptParam("", "&lt;html&gt;&lt;b&gt;Aligned Group&lt;/b&gt;&lt;/html&gt;");
	params.add(sep);
	filters.alignedGroup.param_setup(params);
		
	filters.word.searchByWordEnabled = false;
	filters.word.param_setup(params);
	var wordsep = new LabelScriptParam("", "&lt;html&gt;&lt;b&gt;Aligned Word&lt;/b&gt;&lt;/html&gt;");
	params.add(wordsep);
	filters.alignedWord.param_setup(params);

	ignoreTruncatedParam = new BooleanScriptParam(ignoreTruncatedParamInfo.id,
		ignoreTruncatedParamInfo.title, ignoreTruncatedParamInfo.desc,
		ignoreTruncatedParamInfo.def);
	params.add(ignoreTruncatedParam);
	
	filters.speaker.param_setup(params);
}

/********************************
 * query_record (required)
 *
 * Called for each record in a session.
 * Perform search operations here.
 *
 * params:
 *  recordIndex - current record index
 *	record - current record
 * returns:
 *	void
 *******************************/
function query_record(recordIndex, record)
{
	if(!filters.speaker.check_speaker(record.speaker)) return;
    
	var searchObjects = filters.group.getRequestedGroups(record);
	// check aligned group for each group returned
	if(filters.alignedGroup.isUseFilter()) {
	    searchObjects = filters.alignedGroup.filter_groups(record, searchObjects);
	}
	
	for(var gIdx = 0; gIdx &lt; searchObjects.length; gIdx++) {
		var group = searchObjects[gIdx];
		var words = filters.word.getRequestedWords(group, "IPA Target");
		
		for(var wIdx = 0; wIdx &lt; words.length; wIdx++) {
			var word = words[wIdx];
			if(filters.alignedWord.isUseFilter()) {
				var alignedWord = word.getTier(filters.alignedWord.tierName);
				if(!filters.alignedWord.patternFilter.check_filter(alignedWord)) continue;
			}
			
			checkWordMatch(recordIndex, record, word);
		}
	}
}

function checkWordMatch(recordIndex, record, obj) {
	var word = (obj.IPATarget != null ? obj.IPATarget : new IPATranscript());
	var aligned = (obj.IPAActual != null ? obj.IPAActual : new IPATranscript());
	var ortho = (obj.orthography != null ? obj.orthography : new Orthography());
	
	if((aligned ==  null || aligned.length() == 0) &amp;&amp; ignoreTruncated == true) {
		return;
	}

	var result = factory.createResult();
	result.recordIndex = recordIndex;
	result.schema = "ALIGNED";
	
	var orthoVal = factory.createResultValue();
	orthoVal.tierName = "Orthography";
	orthoVal.groupIndex = obj.group.groupIndex;
	var startIndex = obj.getOrthographyWordLocation();
	var length = ortho.toString().length();
	orthoVal.range = new Range(startIndex, startIndex + length, false);
	orthoVal.data = ortho;
	result.addResultValue(orthoVal);
	
	var rv = factory.createResultValue();
	rv.tierName = searchTier;
	rv.groupIndex = obj.group.groupIndex;
	var startIndex = obj.getIPATargetWordLocation();
	var length = word.toString().length();
	rv.range = new Range(startIndex, startIndex + length, false);
	rv.data = word;
	result.addResultValue(rv);
	
	rv = factory.createResultValue();
	rv.tierName = alignedTier;
	rv.groupIndex = obj.group.groupIndex;
	var startIndex = obj.getIPAActualWordLocation();
	var length = aligned.toString().length();
	rv.range = new Range(startIndex, startIndex + length, false);
	rv.data = aligned;
	result.addResultValue(rv);
	
	if(includeExactMatch == true) {
		result.metadata.put(mdataExactField, word.toString().equals(aligned.toString()) + "");
	}
	
	if(includeCVPatternMatch == true) {
		var targetCVPattern = cvPattern2(word, includeStressMarkers, includeSyllableBoundaries, includeImplicitBoundaries);
		var alignedCVPattern = cvPattern2(aligned, includeStressMarkers, includeSyllableBoundaries, includeImplicitBoundaries);
		
		var exactMatch = (targetCVPattern == alignedCVPattern);
		
		result.metadata.put(searchTier + " CV", targetCVPattern);
		result.metadata.put(alignedTier + " CV", alignedCVPattern)
		result.metadata.put(mdataCVField, exactMatch + "");
	}
	
	if(includeStressPatternMatch == true) {
		var targetStressPattern = word.stressPattern;
		var actualStressPattern = aligned.stressPattern;
		
		var exactMatch = word.matchesStressPattern(actualStressPattern);
		
		result.metadata.put(searchTier + " Stress", targetStressPattern);
		result.metadata.put(alignedTier + " Stress", actualStressPattern);
		result.metadata.put(mdataStressField, exactMatch + "");
	}
	
	results.addResult(result);
}

/**
 * Special CV pattern generator.
 */
function cvPattern2(obj, includeStressMarkers, includeSyllableBoundaries, includeImplicitBoundaries) {
	var retVal = "";

	if(includeSyllableBoundaries == true &amp;&amp; includeImplicitBoundaries == true) {
		for(var sIdx = 0; sIdx &lt; obj.syllables().size(); sIdx++) {
			var syll = obj.syllables().get(sIdx);
			retVal += (sIdx &gt; 0 &amp;&amp; !syll.matches(".:S.*") ? "." : "") + cvPattern(syll, includeStressMarkers, includeSyllableBoundaries);
		}
	} else {
		retVal = cvPattern(obj, includeStressMarkers, includeSyllableBoundaries);
	}
	
	return retVal;
}
 
function cvPattern(obj, includeStressMarkers, includeSyllableBoundaries) {
	var retVal = "";

	for(var pIdx = 0; pIdx &lt; obj.length(); pIdx++) {
		var p = obj.elementAt(pIdx);
		
		if(p.getScType() == SyllableConstituentType.SYLLABLEBOUNDARYMARKER) {
			if(includeSyllableBoundaries == true &amp;&amp; pIdx &gt; 0)
				retVal += ".";
			continue;
		} else if(p.getScType() == SyllableConstituentType.SYLLABLESTRESSMARKER) {
			if(includeStressMarkers == true)
				retVal += p.getText();
			continue;
		} else if(p.getScType() == SyllableConstituentType.WORDBOUNDARYMARKER) {
			retVal += " ";
			continue;
		}
		
		if(p.getFeatureSet().hasFeature("Consonant")) {
			retVal += "C";
		} else if(p.getFeatureSet().hasFeature("Vowel")) {
			retVal += "V";
		}
	}
	
	return retVal;
}
</source>
                </script>
            </qry:query>
            <extensions>
                <oga:settings/>
                <oga:meta x="304" y="87"/>
            </extensions>
        </opqry:queryNode>
        <node id="3382e2e3" type="class:ca.phon.app.opgraph.nodes.table.ResultsToTableNode">
            <extensions>
                <oga:settings>
                    <oga:property key="includeMetadata"><![CDATA[true]]></oga:property>
                    <oga:property key="includeTierInfo"><![CDATA[true]]></oga:property>
                    <oga:property key="includeSpeakerInfo"><![CDATA[true]]></oga:property>
                    <oga:property key="includeSessionInfo"><![CDATA[true]]></oga:property>
                </oga:settings>
                <oga:meta x="541" y="104"/>
            </extensions>
        </node>
        <node id="409e9fee" name="Split Table by Speaker" type="class:ca.phon.app.opgraph.nodes.table.TableScriptNode">
            <output name="keySet" type="java.util.Set">Unique values from given column name</output>
            <output name="tableMap" type="java.util.Map">Map of key -&gt; table values</output>
            <extensions>
                <oga:settings>
                    <oga:property key="columnName"><![CDATA[Speaker]]></oga:property>
                    <oga:property key="__script"><![CDATA[/*
 * Phon - An open source tool for research in phonology.
 * Copyright (C) 2005 - 2017, Gregory Hedlund <ghedlund@mun.ca> and Yvan Rose <yrose@mun.ca>
 * Dept of Linguistics, Memorial University <https://phon.ca>
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
 /**
  * Split Table.js
  * 
  * Script for use with ca.phon.app.opgraph.nodes.table.TableScriptNode
  * 
  * Split table based on column name.  Two outputs
  * are produced, a set of keys from the column used in the filter  and a 
  * map of key -> table values.
  */

var columnParamInfo = {
	"id": "columnName",
	"title": "Column Name",
	"def": "",
	"prompt": "Enter column name"
}

function setup_params(params) {
	var columnParam = new StringScriptParam(
		columnParamInfo.id,
		columnParamInfo.title,
		columnParamInfo.def);
	columnParam.setPrompt(columnParamInfo.prompt);
	params.add(columnParam);
}

// add custom inputs/outputs here
function init(inputs, outputs) {
	outputs.add("keySet", "Unique values from given column name", false, java.util.Set);
	outputs.add("tableMap", "Map of key -> table values", false, java.util.Map);
}

/* 
 * Create a new table with the same schema as the inputTable
 */
function setupTable(inputTable) {
    var table = new DefaultTableDataSource();
    for(c = 0; c < inputTable.columnCount; c++) {
	    var colTitle = inputTable.getColumnTitle(c);
	    table.setColumnTitle(c, colTitle);
	}
	return table;
}

// run operation on table
function tableOp(context, table) {
	// find table column index
	col = table.getColumnIndex(columnName);
	
	if(col < 0) 
		return; // column not found
	
	var tableMap = new java.util.LinkedHashMap();
	
	for(row = 0; row < table.rowCount; row++) {
	    // use string value as row key
		var rowKey = Packages.ca.phon.formatter.FormatterUtil.format(table.getValueAt(row, col));
		
		var keyTable = tableMap.get(rowKey);
		if(keyTable == null) {
		    keyTable = setupTable(table);
		    tableMap.put(rowKey, keyTable);
		}
		keyTable.addRow(table.getRow(row));
	}
	
	context.put("keySet", tableMap.keySet());
	context.put("tableMap", tableMap);
}
]]></oga:property>
                </oga:settings>
                <oga:meta x="707" y="112"/>
            </extensions>
        </node>
        <ogcn:macro id="1030eddd" name="For Each Participant" type="ca.gedge.opgraph.nodes.reflect.IterableClassNode">
            <graph id="feba7ec">
                <node id="4d78e0c9" name="Current Object" type="class:ca.gedge.opgraph.nodes.reflect.ContextualItemClassNode">
                    <extensions>
                        <oga:settings>
                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ContextualItemClassNode.key"><![CDATA[currentValue]]></oga:property>
                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ContextualItemClassNode.declaredClass"><![CDATA[java.lang.Object]]></oga:property>
                        </oga:settings>
                        <oga:meta x="44" y="29"/>
                    </extensions>
                </node>
                <node id="bd41f2935e8a4dc9" name="Table Map" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                    <extensions>
                        <oga:settings>
                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.util.Map]]></oga:property>
                        </oga:settings>
                        <oga:meta x="135" y="323"/>
                    </extensions>
                </node>
                <ogcn:macro id="7042cc1b9ceb408c" name="Create Summary Table" type="ca.gedge.opgraph.nodes.general.MacroNode">
                    <graph id="1590b8da">
                        <node id="595ffa9c68124e62" name="DefaultTableDataSource#&lt;init&gt;()" type="class:ca.gedge.opgraph.nodes.reflect.ConstructorNode">
                            <extensions>
                                <oga:settings>
                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.classMember"><![CDATA[<init>()]]></oga:property>
                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                </oga:settings>
                                <oga:meta x="37" y="183"/>
                            </extensions>
                        </node>
                        <node id="99bf33c4c39d4b54" name="Setup Column Names" type="class:ca.phon.app.opgraph.nodes.table.TableScriptNode">
                            <extensions>
                                <oga:settings>
                                    <oga:property key="__script"><![CDATA[function tableOp(context, table) {
	// add headers to table
	var row = 0;
	table.setColumnTitle(row++, "Session");
	table.setColumnTitle(row++, "Age");
	table.setColumnTitle(row++, "Word Count");
	table.setColumnTitle(row++, "# Exact Match");
	table.setColumnTitle(row++, "# Exact Mis-match");
	table.setColumnTitle(row++, "Exact Match");
	table.setColumnTitle(row++, "# CV Match");
	table.setColumnTitle(row++, "# CV Mis-match");
	table.setColumnTitle(row++, "% CV Match");
	table.setColumnTitle(row++, "# Stress Match");
	table.setColumnTitle(row++, "# Stress Mis-match");
	table.setColumnTitle(row++, "% Stress Match");
}
]]></oga:property>
                                </oga:settings>
                                <oga:meta x="291" y="178"/>
                            </extensions>
                        </node>
                        <node id="5bf134fd" name="To DefaultTableDataSource" type="class:ca.gedge.opgraph.nodes.reflect.ObjectCastNode">
                            <extensions>
                                <oga:settings>
                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectCastNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                </oga:settings>
                                <oga:meta x="548" y="198"/>
                            </extensions>
                        </node>
                        <link dest="99bf33c4c39d4b54" destField="table" source="595ffa9c68124e62" sourceField="value"/>
                        <link dest="5bf134fd" destField="obj" source="99bf33c4c39d4b54" sourceField="table"/>
                        <extensions>
                            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                        </extensions>
                    </graph>
                    <ogcn:published_output field="obj" name="summaryTable" ref="5bf134fd"/>
                    <extensions>
                        <oga:meta x="490" y="346"/>
                    </extensions>
                </ogcn:macro>
                <node id="c395c1491dbb4a9b" name="To Participant Object" type="class:ca.gedge.opgraph.nodes.reflect.ObjectCastNode">
                    <extensions>
                        <oga:settings>
                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectCastNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                        </oga:settings>
                        <oga:meta x="187" y="24"/>
                    </extensions>
                </node>
                <ogcn:macro id="6b5d4572" name="Get Table of Results For Speaker" type="ca.gedge.opgraph.nodes.general.MacroNode">
                    <graph id="608dfd80">
                        <node id="4e580612" name="Object#toString()" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                            <extensions>
                                <oga:settings>
                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[toString()]]></oga:property>
                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.Object]]></oga:property>
                                </oga:settings>
                                <oga:meta x="105" y="70"/>
                            </extensions>
                        </node>
                        <node id="63011e7b" name="Map#get(Object)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                            <extensions>
                                <oga:settings>
                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[get(java.lang.Object)]]></oga:property>
                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.util.Map]]></oga:property>
                                </oga:settings>
                                <oga:meta x="296" y="73"/>
                            </extensions>
                        </node>
                        <node id="3e8df0d5" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                            <output name="exists" type="java.lang.Boolean">does table exist</output>
                            <output name="table" type="ca.phon.query.report.datasource.DefaultTableDataSource">table if exists, undefined otherwise</output>
                            <extensions>
                                <oga:settings>
                                    <oga:property key="__script"><![CDATA[
// setup input/output fields
function init(inputFields, outputFields) {
	inputFields.add("table", "");
	outputFields.add("exists", "does table exist", false, java.lang.Boolean);
	outputFields.add("table", "table if exists, undefined otherwise", false, Packages.ca.phon.query.report.datasource.DefaultTableDataSource);
}

function run(context) {
	var tableExists = 
		(context.containsKey("table") && context.get("table") != null);
	context.put("exists", tableExists);
	context.put("table", context.get("table"));
}
]]></oga:property>
                                </oga:settings>
                                <oga:meta x="514" y="94"/>
                            </extensions>
                        </node>
                        <link dest="63011e7b" destField="arg1" source="4e580612" sourceField="value"/>
                        <link dest="3e8df0d5" destField="table" source="63011e7b" sourceField="value"/>
                        <extensions>
                            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                        </extensions>
                    </graph>
                    <ogcn:published_input field="obj" name="speaker" ref="4e580612"/>
                    <ogcn:published_input field="obj" name="tableMap" ref="63011e7b"/>
                    <ogcn:published_output field="exists" name="exists" ref="3e8df0d5"/>
                    <ogcn:published_output field="table" name="table" ref="3e8df0d5"/>
                    <extensions>
                        <oga:meta x="469" y="102"/>
                    </extensions>
                </ogcn:macro>
                <ogcn:macro id="588b604d" name="If Speaker has Results" type="ca.gedge.opgraph.nodes.general.MacroNode">
                    <graph id="63f817ce">
                        <node id="d580fc54a5a04182" name="DefaultTableDataSource" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                            <extensions>
                                <oga:settings>
                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                </oga:settings>
                                <oga:meta x="96" y="212"/>
                            </extensions>
                        </node>
                        <node id="eeae57b70e674095" name="Summary Table" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                            <extensions>
                                <oga:settings>
                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                </oga:settings>
                                <oga:meta x="100" y="344"/>
                            </extensions>
                        </node>
                        <node id="59377617e2b348f4" name="Participant" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                            <extensions>
                                <oga:settings>
                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                </oga:settings>
                                <oga:meta x="104" y="489"/>
                            </extensions>
                        </node>
                        <node id="7c61771a" name="Split Table by Session" type="class:ca.phon.app.opgraph.nodes.table.TableScriptNode">
                            <output name="keySet" type="java.util.Set">Unique values from given column name</output>
                            <output name="tableMap" type="java.util.Map">Map of key -&gt; table values</output>
                            <extensions>
                                <oga:settings>
                                    <oga:property key="columnName"><![CDATA[Session]]></oga:property>
                                    <oga:property key="__script"><![CDATA[/*
 * Phon - An open source tool for research in phonology.
 * Copyright (C) 2005 - 2017, Gregory Hedlund <ghedlund@mun.ca> and Yvan Rose <yrose@mun.ca>
 * Dept of Linguistics, Memorial University <https://phon.ca>
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
 /**
  * Split Table.js
  * 
  * Script for use with ca.phon.app.opgraph.nodes.table.TableScriptNode
  * 
  * Split table based on column name.  Two outputs
  * are produced, a set of keys from the column used in the filter  and a 
  * map of key -> table values.
  */

var columnParamInfo = {
	"id": "columnName",
	"title": "Column Name",
	"def": "",
	"prompt": "Enter column name"
}

function setup_params(params) {
	var columnParam = new StringScriptParam(
		columnParamInfo.id,
		columnParamInfo.title,
		columnParamInfo.def);
	columnParam.setPrompt(columnParamInfo.prompt);
	params.add(columnParam);
}

// add custom inputs/outputs here
function init(inputs, outputs) {
	outputs.add("keySet", "Unique values from given column name", false, java.util.Set);
	outputs.add("tableMap", "Map of key -> table values", false, java.util.Map);
}

/* 
 * Create a new table with the same schema as the inputTable
 */
function setupTable(inputTable) {
    var table = new DefaultTableDataSource();
    for(c = 0; c < inputTable.columnCount; c++) {
	    var colTitle = inputTable.getColumnTitle(c);
	    table.setColumnTitle(c, colTitle);
	}
	return table;
}

// run operation on table
function tableOp(context, table) {
	// find table column index
	col = table.getColumnIndex(columnName);
	
	if(col < 0) 
		return; // column not found
	
	var tableMap = new java.util.LinkedHashMap();
	
	for(row = 0; row < table.rowCount; row++) {
	    // use string value as row key
		var rowKey = Packages.ca.phon.formatter.FormatterUtil.format(table.getValueAt(row, col));
		
		var keyTable = tableMap.get(rowKey);
		if(keyTable == null) {
		    keyTable = setupTable(table);
		    tableMap.put(rowKey, keyTable);
		}
		keyTable.addRow(table.getRow(row));
	}
	
	context.put("keySet", tableMap.keySet());
	context.put("tableMap", tableMap);
}
]]></oga:property>
                                </oga:settings>
                                <oga:meta x="503" y="170"/>
                            </extensions>
                        </node>
                        <ogcn:macro id="2c588b90256c43b3" name="Setup Buffer Name" type="ca.gedge.opgraph.nodes.general.MacroNode">
                            <graph id="d72f191">
                                <node id="12b4cc6150db4c9a" name="StringBuffer#&lt;init&gt;()" type="class:ca.gedge.opgraph.nodes.reflect.ConstructorNode">
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.classMember"><![CDATA[<init>()]]></oga:property>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                        </oga:settings>
                                        <oga:meta x="305" y="167"/>
                                    </extensions>
                                </node>
                                <node id="7defc9ae0aa24d52" name="StringBuffer#append(String)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[append(java.lang.String)]]></oga:property>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                        </oga:settings>
                                        <oga:meta x="483" y="170">
                                            <oga:default for="arg1" type="java.lang.String"/>
                                        </oga:meta>
                                    </extensions>
                                </node>
                                <node id="4be42c3014c84212" name="StringBuffer#append(String)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[append(java.lang.String)]]></oga:property>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                        </oga:settings>
                                        <oga:meta x="482" y="274">
                                            <oga:default for="arg1" type="java.lang.String">_</oga:default>
                                        </oga:meta>
                                    </extensions>
                                </node>
                                <node id="668a28b4ac2f45be" name="StringBuffer#append(Object)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[append(java.lang.Object)]]></oga:property>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                        </oga:settings>
                                        <oga:meta x="483" y="382"/>
                                    </extensions>
                                </node>
                                <node id="1eccd2091b334362" name="StringBuffer#toString()" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[toString()]]></oga:property>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                        </oga:settings>
                                        <oga:meta x="721" y="496"/>
                                    </extensions>
                                </node>
                                <link dest="7defc9ae0aa24d52" destField="obj" source="12b4cc6150db4c9a" sourceField="value"/>
                                <link dest="4be42c3014c84212" destField="obj" source="7defc9ae0aa24d52" sourceField="value"/>
                                <link dest="668a28b4ac2f45be" destField="obj" source="4be42c3014c84212" sourceField="value"/>
                                <link dest="1eccd2091b334362" destField="obj" source="668a28b4ac2f45be" sourceField="value"/>
                            </graph>
                            <ogcn:published_input field="arg1" name="speaker" ref="668a28b4ac2f45be"/>
                            <ogcn:published_input field="arg1" name="prefix" ref="7defc9ae0aa24d52"/>
                            <ogcn:published_output field="value" name="value" ref="1eccd2091b334362"/>
                            <extensions>
                                <oga:meta x="790" y="298">
                                    <oga:default for="prefix" type="java.lang.String">Summary</oga:default>
                                </oga:meta>
                            </extensions>
                        </ogcn:macro>
                        <ogcn:macro id="cdbeadeceb9a4264" name="Setup Buffer Name" type="ca.gedge.opgraph.nodes.general.MacroNode">
                            <graph id="d5007c3">
                                <node id="8099e976b4e34e5e" name="StringBuffer#&lt;init&gt;()" type="class:ca.gedge.opgraph.nodes.reflect.ConstructorNode">
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.classMember"><![CDATA[<init>()]]></oga:property>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                        </oga:settings>
                                        <oga:meta x="305" y="167"/>
                                    </extensions>
                                </node>
                                <node id="c04d19c8a7c74e92" name="StringBuffer#append(String)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[append(java.lang.String)]]></oga:property>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                        </oga:settings>
                                        <oga:meta x="483" y="170">
                                            <oga:default for="arg1" type="java.lang.String"/>
                                        </oga:meta>
                                    </extensions>
                                </node>
                                <node id="a28de6b492044d9d" name="StringBuffer#append(String)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[append(java.lang.String)]]></oga:property>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                        </oga:settings>
                                        <oga:meta x="482" y="274">
                                            <oga:default for="arg1" type="java.lang.String">_</oga:default>
                                        </oga:meta>
                                    </extensions>
                                </node>
                                <node id="10df50434d564b59" name="StringBuffer#append(Object)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[append(java.lang.Object)]]></oga:property>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                        </oga:settings>
                                        <oga:meta x="483" y="382"/>
                                    </extensions>
                                </node>
                                <node id="bf27986ff2c84fa1" name="StringBuffer#toString()" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[toString()]]></oga:property>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                        </oga:settings>
                                        <oga:meta x="721" y="496"/>
                                    </extensions>
                                </node>
                                <link dest="c04d19c8a7c74e92" destField="obj" source="8099e976b4e34e5e" sourceField="value"/>
                                <link dest="a28de6b492044d9d" destField="obj" source="c04d19c8a7c74e92" sourceField="value"/>
                                <link dest="10df50434d564b59" destField="obj" source="a28de6b492044d9d" sourceField="value"/>
                                <link dest="bf27986ff2c84fa1" destField="obj" source="10df50434d564b59" sourceField="value"/>
                            </graph>
                            <ogcn:published_input field="arg1" name="speaker" ref="10df50434d564b59"/>
                            <ogcn:published_input field="arg1" name="prefix" ref="c04d19c8a7c74e92"/>
                            <ogcn:published_output field="value" name="value" ref="bf27986ff2c84fa1"/>
                            <extensions>
                                <oga:meta x="818" y="489">
                                    <oga:default for="prefix" type="java.lang.String">Aggregate_Matches</oga:default>
                                </oga:meta>
                            </extensions>
                        </ogcn:macro>
                        <node id="4d9a07f9fd344f69" name="Word Match Split" type="class:ca.phon.app.opgraph.nodes.table.TableScriptNode">
                            <output name="wordMatches" type="ca.phon.query.report.datasource.DefaultTableDataSource">table of word exact matches</output>
                            <output name="wordMisMatches" type="ca.phon.query.report.datasource.DefaultTableDataSource">table of word mis-matches</output>
                            <output name="wordCVMatches" type="ca.phon.query.report.datasource.DefaultTableDataSource">table of word CV matches</output>
                            <output name="wordCVMisMatches" type="ca.phon.query.report.datasource.DefaultTableDataSource">table of word CV mis-matches</output>
                            <output name="wordStressMatches" type="ca.phon.query.report.datasource.DefaultTableDataSource">table of word stress matches</output>
                            <output name="wordStressMisMatches" type="ca.phon.query.report.datasource.DefaultTableDataSource">table of word stress mis-matches</output>
                            <extensions>
                                <oga:settings>
                                    <oga:property key="__script"><![CDATA[/*
 * Phon - An open source tool for research in phonology.
 * Copyright (C) 2005 - 2017, Gregory Hedlund <ghedlund@mun.ca> and Yvan Rose <yrose@mun.ca>
 * Dept of Linguistics, Memorial University <https://phon.ca>
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
/**
 * This node will create output tables
 * for:
 *  - word matches/mis-matches
 *  - word CV matches/mis-matches
 *  - word stress matches/mis-matches
 */

function init(inputFields, outputFields) {
	outputFields.add("wordMatches", "table of word exact matches", false, Packages.ca.phon.query.report.datasource.DefaultTableDataSource);
	outputFields.add("wordMisMatches", "table of word mis-matches", false, Packages.ca.phon.query.report.datasource.DefaultTableDataSource);
	outputFields.add("wordCVMatches", "table of word CV matches", false, Packages.ca.phon.query.report.datasource.DefaultTableDataSource);
	outputFields.add("wordCVMisMatches", "table of word CV mis-matches", false, Packages.ca.phon.query.report.datasource.DefaultTableDataSource);
	outputFields.add("wordStressMatches", "table of word stress matches", false, Packages.ca.phon.query.report.datasource.DefaultTableDataSource);
	outputFields.add("wordStressMisMatches", "table of word stress mis-matches", false, Packages.ca.phon.query.report.datasource.DefaultTableDataSource);
}

/* 
 * Create a new table with the same schema as the inputTable
 */
function setupTable(inputTable) {
    var table = new DefaultTableDataSource();
    for(c = 0; c < inputTable.columnCount; c++) {
	    var colTitle = inputTable.getColumnTitle(c);
	    table.setColumnTitle(c, colTitle);
	}
	return table;
}

function tableOp(context, table) {
	// the word-match script has already calculated the matches, use columns provided
	var exactMatchCol = table.getColumnIndex("Word Exact Match");
	if(exactMatchCol < 0) {
		java.lang.System.err.println("No word exact match column found");
		return;
	}

	var cvMatchCol = table.getColumnIndex("Word CV Match");
	if(cvMatchCol < 0) {
		java.lang.System.err.println("No word CV match column found");
		return;
	}

	var stressMatchCol = table.getColumnIndex("Word Stress Match");
	if(stressMatchCol < 0) {
		java.lang.System.err.println("No word stress match column found");
		return;
	}

	var wordMatchTable = setupTable(table);
	var wordMisMatchTable = setupTable(table);
	var wordCVMatchTable = setupTable(table);
	var wordCVMisMatchTable = setupTable(table);
	var wordStressMatchTable = setupTable(table);
	var wordStressMisMatchTable = setupTable(table);

	for(row = 0; row < table.getRowCount(); row++) {
		var rowData = table.getRow(row);
		
		var isExactMatch = java.lang.Boolean.parseBoolean(table.getValueAt(row, exactMatchCol));
		if(isExactMatch == true) {
			wordMatchTable.addRow(rowData);
		} else {
			wordMisMatchTable.addRow(rowData);
		}

		var isCVMatch = java.lang.Boolean.parseBoolean(table.getValueAt(row, cvMatchCol));
		if(isCVMatch == true) {
			wordCVMatchTable.addRow(rowData);
		} else {
			wordCVMisMatchTable.addRow(rowData);
		}

		var isStressMatch = java.lang.Boolean.parseBoolean(table.getValueAt(row, stressMatchCol));
		if(isStressMatch == true) {
			wordStressMatchTable.addRow(rowData);
		} else {
			wordStressMisMatchTable.addRow(rowData);
		}
	}

	context.put("wordMatches", wordMatchTable);
	context.put("wordMisMatches", wordMisMatchTable);
	context.put("wordCVMatches", wordCVMatchTable);
	context.put("wordCVMisMatches", wordCVMisMatchTable);
	context.put("wordStressMatches", wordStressMatchTable);
	context.put("wordStressMisMatches", wordStressMisMatchTable);
}
]]></oga:property>
                                </oga:settings>
                                <oga:meta x="495" y="501"/>
                            </extensions>
                        </node>
                        <ogcn:macro id="293a48a85ee74f42" name="Setup Buffer Name" type="ca.gedge.opgraph.nodes.general.MacroNode">
                            <graph id="15a478c4">
                                <node id="de957c6fd4f42db" name="StringBuffer#&lt;init&gt;()" type="class:ca.gedge.opgraph.nodes.reflect.ConstructorNode">
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.classMember"><![CDATA[<init>()]]></oga:property>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                        </oga:settings>
                                        <oga:meta x="305" y="167"/>
                                    </extensions>
                                </node>
                                <node id="167438589e234410" name="StringBuffer#append(String)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[append(java.lang.String)]]></oga:property>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                        </oga:settings>
                                        <oga:meta x="483" y="170">
                                            <oga:default for="arg1" type="java.lang.String"/>
                                        </oga:meta>
                                    </extensions>
                                </node>
                                <node id="8089ec06ac6d46ce" name="StringBuffer#append(String)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[append(java.lang.String)]]></oga:property>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                        </oga:settings>
                                        <oga:meta x="482" y="274">
                                            <oga:default for="arg1" type="java.lang.String">_</oga:default>
                                        </oga:meta>
                                    </extensions>
                                </node>
                                <node id="cf7b2f02e47e4e1a" name="StringBuffer#append(Object)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[append(java.lang.Object)]]></oga:property>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                        </oga:settings>
                                        <oga:meta x="483" y="382"/>
                                    </extensions>
                                </node>
                                <node id="c4b77584f7494ad7" name="StringBuffer#toString()" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[toString()]]></oga:property>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                        </oga:settings>
                                        <oga:meta x="721" y="496"/>
                                    </extensions>
                                </node>
                                <link dest="167438589e234410" destField="obj" source="de957c6fd4f42db" sourceField="value"/>
                                <link dest="8089ec06ac6d46ce" destField="obj" source="167438589e234410" sourceField="value"/>
                                <link dest="cf7b2f02e47e4e1a" destField="obj" source="8089ec06ac6d46ce" sourceField="value"/>
                                <link dest="c4b77584f7494ad7" destField="obj" source="cf7b2f02e47e4e1a" sourceField="value"/>
                            </graph>
                            <ogcn:published_input field="arg1" name="speaker" ref="cf7b2f02e47e4e1a"/>
                            <ogcn:published_input field="arg1" name="prefix" ref="167438589e234410"/>
                            <ogcn:published_output field="value" name="value" ref="c4b77584f7494ad7"/>
                            <extensions>
                                <oga:meta x="824" y="685">
                                    <oga:default for="prefix" type="java.lang.String">Aggregate_Mis-matches</oga:default>
                                </oga:meta>
                            </extensions>
                        </ogcn:macro>
                        <ogcn:macro id="89d7b1aa582647fc" name="Setup Buffer Name" type="ca.gedge.opgraph.nodes.general.MacroNode">
                            <graph id="39897622">
                                <node id="984df1ddb69a4096" name="StringBuffer#&lt;init&gt;()" type="class:ca.gedge.opgraph.nodes.reflect.ConstructorNode">
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.classMember"><![CDATA[<init>()]]></oga:property>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                        </oga:settings>
                                        <oga:meta x="305" y="167"/>
                                    </extensions>
                                </node>
                                <node id="86e42a68ed114873" name="StringBuffer#append(String)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[append(java.lang.String)]]></oga:property>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                        </oga:settings>
                                        <oga:meta x="483" y="170">
                                            <oga:default for="arg1" type="java.lang.String"/>
                                        </oga:meta>
                                    </extensions>
                                </node>
                                <node id="b9c02592b78e43b0" name="StringBuffer#append(String)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[append(java.lang.String)]]></oga:property>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                        </oga:settings>
                                        <oga:meta x="482" y="274">
                                            <oga:default for="arg1" type="java.lang.String">_</oga:default>
                                        </oga:meta>
                                    </extensions>
                                </node>
                                <node id="8f5a28911e1f48a8" name="StringBuffer#append(Object)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[append(java.lang.Object)]]></oga:property>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                        </oga:settings>
                                        <oga:meta x="483" y="382"/>
                                    </extensions>
                                </node>
                                <node id="bdbb2f856927405d" name="StringBuffer#toString()" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[toString()]]></oga:property>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                        </oga:settings>
                                        <oga:meta x="721" y="496"/>
                                    </extensions>
                                </node>
                                <link dest="86e42a68ed114873" destField="obj" source="984df1ddb69a4096" sourceField="value"/>
                                <link dest="b9c02592b78e43b0" destField="obj" source="86e42a68ed114873" sourceField="value"/>
                                <link dest="8f5a28911e1f48a8" destField="obj" source="b9c02592b78e43b0" sourceField="value"/>
                                <link dest="bdbb2f856927405d" destField="obj" source="8f5a28911e1f48a8" sourceField="value"/>
                            </graph>
                            <ogcn:published_input field="arg1" name="speaker" ref="8f5a28911e1f48a8"/>
                            <ogcn:published_input field="arg1" name="prefix" ref="86e42a68ed114873"/>
                            <ogcn:published_output field="value" name="value" ref="bdbb2f856927405d"/>
                            <extensions>
                                <oga:meta x="827" y="881">
                                    <oga:default for="prefix" type="java.lang.String">Aggregate_CV Matches</oga:default>
                                </oga:meta>
                            </extensions>
                        </ogcn:macro>
                        <ogcn:macro id="e5035384076542ac" name="Setup Buffer Name" type="ca.gedge.opgraph.nodes.general.MacroNode">
                            <graph id="6ce6a4b6">
                                <node id="fef183524ff94959" name="StringBuffer#&lt;init&gt;()" type="class:ca.gedge.opgraph.nodes.reflect.ConstructorNode">
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.classMember"><![CDATA[<init>()]]></oga:property>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                        </oga:settings>
                                        <oga:meta x="305" y="167"/>
                                    </extensions>
                                </node>
                                <node id="89cc2da7c9ff4cb5" name="StringBuffer#append(String)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[append(java.lang.String)]]></oga:property>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                        </oga:settings>
                                        <oga:meta x="483" y="170">
                                            <oga:default for="arg1" type="java.lang.String"/>
                                        </oga:meta>
                                    </extensions>
                                </node>
                                <node id="aafa9c05e68b402c" name="StringBuffer#append(String)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[append(java.lang.String)]]></oga:property>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                        </oga:settings>
                                        <oga:meta x="482" y="274">
                                            <oga:default for="arg1" type="java.lang.String">_</oga:default>
                                        </oga:meta>
                                    </extensions>
                                </node>
                                <node id="26b16560e4124740" name="StringBuffer#append(Object)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[append(java.lang.Object)]]></oga:property>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                        </oga:settings>
                                        <oga:meta x="483" y="382"/>
                                    </extensions>
                                </node>
                                <node id="33526079a9034784" name="StringBuffer#toString()" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[toString()]]></oga:property>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                        </oga:settings>
                                        <oga:meta x="721" y="496"/>
                                    </extensions>
                                </node>
                                <link dest="89cc2da7c9ff4cb5" destField="obj" source="fef183524ff94959" sourceField="value"/>
                                <link dest="aafa9c05e68b402c" destField="obj" source="89cc2da7c9ff4cb5" sourceField="value"/>
                                <link dest="26b16560e4124740" destField="obj" source="aafa9c05e68b402c" sourceField="value"/>
                                <link dest="33526079a9034784" destField="obj" source="26b16560e4124740" sourceField="value"/>
                            </graph>
                            <ogcn:published_input field="arg1" name="speaker" ref="26b16560e4124740"/>
                            <ogcn:published_input field="arg1" name="prefix" ref="89cc2da7c9ff4cb5"/>
                            <ogcn:published_output field="value" name="value" ref="33526079a9034784"/>
                            <extensions>
                                <oga:meta x="802" y="1071">
                                    <oga:default for="prefix" type="java.lang.String">Aggregate_CV Mis-matches</oga:default>
                                </oga:meta>
                            </extensions>
                        </ogcn:macro>
                        <ogcn:macro id="4cde8ec413ec4a93" name="Setup Buffer Name" type="ca.gedge.opgraph.nodes.general.MacroNode">
                            <graph id="91fae63">
                                <node id="ed4a680659e740d2" name="StringBuffer#&lt;init&gt;()" type="class:ca.gedge.opgraph.nodes.reflect.ConstructorNode">
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.classMember"><![CDATA[<init>()]]></oga:property>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                        </oga:settings>
                                        <oga:meta x="305" y="167"/>
                                    </extensions>
                                </node>
                                <node id="2c3ee3c0f3a04fea" name="StringBuffer#append(String)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[append(java.lang.String)]]></oga:property>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                        </oga:settings>
                                        <oga:meta x="483" y="170">
                                            <oga:default for="arg1" type="java.lang.String"/>
                                        </oga:meta>
                                    </extensions>
                                </node>
                                <node id="26d6b7c8e7f49a3" name="StringBuffer#append(String)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[append(java.lang.String)]]></oga:property>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                        </oga:settings>
                                        <oga:meta x="482" y="274">
                                            <oga:default for="arg1" type="java.lang.String">_</oga:default>
                                        </oga:meta>
                                    </extensions>
                                </node>
                                <node id="ca50f6b4701e4f54" name="StringBuffer#append(Object)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[append(java.lang.Object)]]></oga:property>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                        </oga:settings>
                                        <oga:meta x="483" y="382"/>
                                    </extensions>
                                </node>
                                <node id="d3110cb68dd34095" name="StringBuffer#toString()" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[toString()]]></oga:property>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                        </oga:settings>
                                        <oga:meta x="721" y="496"/>
                                    </extensions>
                                </node>
                                <link dest="2c3ee3c0f3a04fea" destField="obj" source="ed4a680659e740d2" sourceField="value"/>
                                <link dest="26d6b7c8e7f49a3" destField="obj" source="2c3ee3c0f3a04fea" sourceField="value"/>
                                <link dest="ca50f6b4701e4f54" destField="obj" source="26d6b7c8e7f49a3" sourceField="value"/>
                                <link dest="d3110cb68dd34095" destField="obj" source="ca50f6b4701e4f54" sourceField="value"/>
                            </graph>
                            <ogcn:published_input field="arg1" name="speaker" ref="ca50f6b4701e4f54"/>
                            <ogcn:published_input field="arg1" name="prefix" ref="2c3ee3c0f3a04fea"/>
                            <ogcn:published_output field="value" name="value" ref="d3110cb68dd34095"/>
                            <extensions>
                                <oga:meta x="803" y="1267">
                                    <oga:default for="prefix" type="java.lang.String">Aggregate_Stress Matches</oga:default>
                                </oga:meta>
                            </extensions>
                        </ogcn:macro>
                        <ogcn:macro id="6a2022f1966244d4" name="Setup Buffer Name" type="ca.gedge.opgraph.nodes.general.MacroNode">
                            <graph id="2b1bb8ec">
                                <node id="3e75c015f5d34ad1" name="StringBuffer#&lt;init&gt;()" type="class:ca.gedge.opgraph.nodes.reflect.ConstructorNode">
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.classMember"><![CDATA[<init>()]]></oga:property>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                        </oga:settings>
                                        <oga:meta x="305" y="167"/>
                                    </extensions>
                                </node>
                                <node id="dc6a69eacf0540c7" name="StringBuffer#append(String)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[append(java.lang.String)]]></oga:property>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                        </oga:settings>
                                        <oga:meta x="483" y="170">
                                            <oga:default for="arg1" type="java.lang.String"/>
                                        </oga:meta>
                                    </extensions>
                                </node>
                                <node id="aca7cacee52441de" name="StringBuffer#append(String)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[append(java.lang.String)]]></oga:property>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                        </oga:settings>
                                        <oga:meta x="482" y="274">
                                            <oga:default for="arg1" type="java.lang.String">_</oga:default>
                                        </oga:meta>
                                    </extensions>
                                </node>
                                <node id="4b8f30de411f422a" name="StringBuffer#append(Object)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[append(java.lang.Object)]]></oga:property>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                        </oga:settings>
                                        <oga:meta x="483" y="382"/>
                                    </extensions>
                                </node>
                                <node id="50ecdd238eb741ed" name="StringBuffer#toString()" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[toString()]]></oga:property>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                        </oga:settings>
                                        <oga:meta x="721" y="496"/>
                                    </extensions>
                                </node>
                                <link dest="dc6a69eacf0540c7" destField="obj" source="3e75c015f5d34ad1" sourceField="value"/>
                                <link dest="aca7cacee52441de" destField="obj" source="dc6a69eacf0540c7" sourceField="value"/>
                                <link dest="4b8f30de411f422a" destField="obj" source="aca7cacee52441de" sourceField="value"/>
                                <link dest="50ecdd238eb741ed" destField="obj" source="4b8f30de411f422a" sourceField="value"/>
                            </graph>
                            <ogcn:published_input field="arg1" name="speaker" ref="4b8f30de411f422a"/>
                            <ogcn:published_input field="arg1" name="prefix" ref="dc6a69eacf0540c7"/>
                            <ogcn:published_output field="value" name="value" ref="50ecdd238eb741ed"/>
                            <extensions>
                                <oga:meta x="796" y="1461">
                                    <oga:default for="prefix" type="java.lang.String">Aggregate_Stress Mis-matches</oga:default>
                                </oga:meta>
                            </extensions>
                        </ogcn:macro>
                        <ogcn:macro id="3ad7825a" name="For Each Session" type="ca.gedge.opgraph.nodes.reflect.IterableClassNode">
                            <graph id="153511e">
                                <node id="20a81de6" name="Session Name" type="class:ca.gedge.opgraph.nodes.reflect.ContextualItemClassNode">
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ContextualItemClassNode.key"><![CDATA[currentValue]]></oga:property>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ContextualItemClassNode.declaredClass"><![CDATA[java.lang.Object]]></oga:property>
                                        </oga:settings>
                                        <oga:meta x="46" y="66"/>
                                    </extensions>
                                </node>
                                <node id="4cc204d606b04df5" name="Table Map" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.util.Map]]></oga:property>
                                        </oga:settings>
                                        <oga:meta x="96" y="341"/>
                                    </extensions>
                                </node>
                                <node id="49f800d7cde04991" name="Participant" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                        </oga:settings>
                                        <oga:meta x="95" y="432"/>
                                    </extensions>
                                </node>
                                <node id="a227f9bdbb2446da" name="Summary Table" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                        </oga:settings>
                                        <oga:meta x="98" y="717"/>
                                    </extensions>
                                </node>
                                <ogcn:macro id="7ae44e7f" name="Get Table for Session" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                    <graph id="235ffdf8">
                                        <node id="45ab2b8b" name="Map" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.util.Map]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="244" y="68"/>
                                            </extensions>
                                        </node>
                                        <node id="5b4cfba5" name="Map#get(Object)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[get(java.lang.Object)]]></oga:property>
                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.util.Map]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="401" y="69"/>
                                            </extensions>
                                        </node>
                                        <node id="403c5ed7c14a4e60" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                                            <output name="exists" type="java.lang.Boolean">does table exist</output>
                                            <output name="table" type="ca.phon.query.report.datasource.DefaultTableDataSource">table if exists, undefined otherwise</output>
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="__script"><![CDATA[
// setup input/output fields
function init(inputFields, outputFields) {
	inputFields.add("table", "");
	outputFields.add("exists", "does table exist", false, java.lang.Boolean);
	outputFields.add("table", "table if exists, undefined otherwise", false, Packages.ca.phon.query.report.datasource.DefaultTableDataSource);
}

function run(context) {
	var tableExists = 
		(context.containsKey("table") && context.get("table") != null);
	context.put("exists", tableExists);
	context.put("table", context.get("table"));
}
]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="555" y="73"/>
                                            </extensions>
                                        </node>
                                        <link dest="5b4cfba5" destField="obj" source="45ab2b8b" sourceField="obj"/>
                                        <link dest="403c5ed7c14a4e60" destField="table" source="5b4cfba5" sourceField="value"/>
                                    </graph>
                                    <ogcn:published_input field="arg1" name="sessionName" ref="5b4cfba5"/>
                                    <ogcn:published_input field="obj" name="tableMap" ref="45ab2b8b"/>
                                    <ogcn:published_output field="exists" name="exists" ref="403c5ed7c14a4e60"/>
                                    <ogcn:published_output field="table" name="table" ref="403c5ed7c14a4e60"/>
                                    <extensions>
                                        <oga:meta x="399" y="89"/>
                                    </extensions>
                                </ogcn:macro>
                                <ogcn:macro id="369cc50c" name="If Speaker has Results for Session" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                    <graph id="72355ec8">
                                        <node id="7eeb13ba4ea4541" name="DefaultTableDataSource" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="53" y="390"/>
                                            </extensions>
                                        </node>
                                        <node id="486ac6c4ab954867" name="Session Name" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.lang.Object]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="56" y="511"/>
                                            </extensions>
                                        </node>
                                        <node id="5ab9334ebdb74de4" name="Participant" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="59" y="602"/>
                                            </extensions>
                                        </node>
                                        <node id="fcb5d1a144be4576" name="Summary Table" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="58" y="881"/>
                                            </extensions>
                                        </node>
                                        <node id="2ebea75f" name="Word Match Split" type="class:ca.phon.app.opgraph.nodes.table.TableScriptNode">
                                            <output name="wordMatches" type="ca.phon.query.report.datasource.DefaultTableDataSource">table of word exact matches</output>
                                            <output name="wordMisMatches" type="ca.phon.query.report.datasource.DefaultTableDataSource">table of word mis-matches</output>
                                            <output name="wordCVMatches" type="ca.phon.query.report.datasource.DefaultTableDataSource">table of word CV matches</output>
                                            <output name="wordCVMisMatches" type="ca.phon.query.report.datasource.DefaultTableDataSource">table of word CV mis-matches</output>
                                            <output name="wordStressMatches" type="ca.phon.query.report.datasource.DefaultTableDataSource">table of word stress matches</output>
                                            <output name="wordStressMisMatches" type="ca.phon.query.report.datasource.DefaultTableDataSource">table of word stress mis-matches</output>
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="__script"><![CDATA[/*
 * Phon - An open source tool for research in phonology.
 * Copyright (C) 2005 - 2017, Gregory Hedlund <ghedlund@mun.ca> and Yvan Rose <yrose@mun.ca>
 * Dept of Linguistics, Memorial University <https://phon.ca>
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
 
/**
 * This node will create output tables
 * for:
 *  - word matches/mis-matches
 *  - word CV matches/mis-matches
 *  - word stress matches/mis-matches
 */

function init(inputFields, outputFields) {
	outputFields.add("wordMatches", "table of word exact matches", false, Packages.ca.phon.query.report.datasource.DefaultTableDataSource);
	outputFields.add("wordMisMatches", "table of word mis-matches", false, Packages.ca.phon.query.report.datasource.DefaultTableDataSource);
	outputFields.add("wordCVMatches", "table of word CV matches", false, Packages.ca.phon.query.report.datasource.DefaultTableDataSource);
	outputFields.add("wordCVMisMatches", "table of word CV mis-matches", false, Packages.ca.phon.query.report.datasource.DefaultTableDataSource);
	outputFields.add("wordStressMatches", "table of word stress matches", false, Packages.ca.phon.query.report.datasource.DefaultTableDataSource);
	outputFields.add("wordStressMisMatches", "table of word stress mis-matches", false, Packages.ca.phon.query.report.datasource.DefaultTableDataSource);
}

/* 
 * Create a new table with the same schema as the inputTable
 */
function setupTable(inputTable) {
    var table = new DefaultTableDataSource();
    for(c = 0; c < inputTable.columnCount; c++) {
	    var colTitle = inputTable.getColumnTitle(c);
	    table.setColumnTitle(c, colTitle);
	}
	return table;
}

function tableOp(context, table) {
	// the word-match script has already calculated the matches, use columns provided
	var exactMatchCol = table.getColumnIndex("Word Exact Match");
	if(exactMatchCol < 0) {
		java.lang.System.err.println("No word exact match column found");
		return;
	}

	var cvMatchCol = table.getColumnIndex("Word CV Match");
	if(cvMatchCol < 0) {
		java.lang.System.err.println("No word CV match column found");
		return;
	}

	var stressMatchCol = table.getColumnIndex("Word Stress Match");
	if(stressMatchCol < 0) {
		java.lang.System.err.println("No word stress match column found");
		return;
	}

	var wordMatchTable = setupTable(table);
	var wordMisMatchTable = setupTable(table);
	var wordCVMatchTable = setupTable(table);
	var wordCVMisMatchTable = setupTable(table);
	var wordStressMatchTable = setupTable(table);
	var wordStressMisMatchTable = setupTable(table);

	for(row = 0; row < table.getRowCount(); row++) {
		var rowData = table.getRow(row);
		
		var isExactMatch = java.lang.Boolean.parseBoolean(table.getValueAt(row, exactMatchCol));
		if(isExactMatch == true) {
			wordMatchTable.addRow(rowData);
		} else {
			wordMisMatchTable.addRow(rowData);
		}

		var isCVMatch = java.lang.Boolean.parseBoolean(table.getValueAt(row, cvMatchCol));
		if(isCVMatch == true) {
			wordCVMatchTable.addRow(rowData);
		} else {
			wordCVMisMatchTable.addRow(rowData);
		}

		var isStressMatch = java.lang.Boolean.parseBoolean(table.getValueAt(row, stressMatchCol));
		if(isStressMatch == true) {
			wordStressMatchTable.addRow(rowData);
		} else {
			wordStressMisMatchTable.addRow(rowData);
		}
	}

	context.put("wordMatches", wordMatchTable);
	context.put("wordMisMatches", wordMisMatchTable);
	context.put("wordCVMatches", wordCVMatchTable);
	context.put("wordCVMisMatches", wordCVMisMatchTable);
	context.put("wordStressMatches", wordStressMatchTable);
	context.put("wordStressMisMatches", wordStressMisMatchTable);
}
]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="473" y="250"/>
                                            </extensions>
                                        </node>
                                        <ogcn:macro id="58a66d68" name="Print Tables" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                            <graph id="36b33ef5">
                                                <node id="fb305db58e734b9f" name="Word Exact Matches" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="51" y="59"/>
                                                    </extensions>
                                                </node>
                                                <node id="312461b0a2464c6e" name="Word Exact Mis-matches" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="54" y="179"/>
                                                    </extensions>
                                                </node>
                                                <node id="cdac94c9a46941f9" name="Word CV Matches" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="53" y="293"/>
                                                    </extensions>
                                                </node>
                                                <node id="926a0843c8c74de6" name="Word CV Mis-matches" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="55" y="416"/>
                                                    </extensions>
                                                </node>
                                                <node id="43ba211f26794aa1" name="Word Stress Matches" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="57" y="539"/>
                                                    </extensions>
                                                </node>
                                                <node id="5921c425b06041dd" name="Word Stress Mis-matches" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="53" y="671"/>
                                                    </extensions>
                                                </node>
                                                <node id="de33df7a92f7492d" name="Session Name" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.lang.Object]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="52" y="791"/>
                                                    </extensions>
                                                </node>
                                                <node id="4fa7e3e393374590" name="Participant" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="48" y="879"/>
                                                    </extensions>
                                                </node>
                                                <ogcn:macro id="d29686b5042542d7" name="Setup Buffer Name: Word Exact Matches" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                                    <graph id="84736d9">
                                                        <node id="c44c153de46a47fd" name="StringBuffer#&lt;init&gt;()" type="class:ca.gedge.opgraph.nodes.reflect.ConstructorNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.classMember"><![CDATA[<init>()]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="305" y="167"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="6108d6e9" name="String#&lt;init&gt;(String)" type="class:ca.gedge.opgraph.nodes.reflect.ConstructorNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.classMember"><![CDATA[<init>(java.lang.String)]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.declaredClass"><![CDATA[java.lang.String]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="311" y="242"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="c77c35ee54de4048" name="Object#toString()" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[toString()]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.Object]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="322" y="495"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="d4ad8236a4894211" name="StringBuffer#append(String)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[append(java.lang.String)]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="483" y="170">
                                                                    <oga:default for="arg1" type="java.lang.String"/>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <node id="e5899c9f2c0948fe" name="StringBuffer#append(String)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[append(java.lang.String)]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="738" y="210">
                                                                    <oga:default for="arg1" type="java.lang.String">_</oga:default>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <node id="7790669d" name="StringBuffer#append(Object)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[append(java.lang.Object)]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="490" y="277"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="bbbec982e9944b59" name="StringBuffer#append(String)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[append(java.lang.String)]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="497" y="384">
                                                                    <oga:default for="arg1" type="java.lang.String">_</oga:default>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <node id="9bd0e6a27a5449fa" name="StringBuffer#append(String)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[append(java.lang.String)]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="497" y="488">
                                                                    <oga:default for="arg1" type="java.lang.String"/>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <node id="69a643bcfc254a34" name="StringBuffer#toString()" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[toString()]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="721" y="496"/>
                                                            </extensions>
                                                        </node>
                                                        <link dest="d4ad8236a4894211" destField="obj" source="c44c153de46a47fd" sourceField="value"/>
                                                        <link dest="9bd0e6a27a5449fa" destField="obj" source="bbbec982e9944b59" sourceField="value"/>
                                                        <link dest="9bd0e6a27a5449fa" destField="arg1" source="c77c35ee54de4048" sourceField="value"/>
                                                        <link dest="69a643bcfc254a34" destField="obj" source="9bd0e6a27a5449fa" sourceField="value"/>
                                                        <link dest="d4ad8236a4894211" destField="arg1" source="6108d6e9" sourceField="value"/>
                                                        <link dest="bbbec982e9944b59" destField="obj" source="7790669d" sourceField="value"/>
                                                        <link dest="e5899c9f2c0948fe" destField="obj" source="d4ad8236a4894211" sourceField="value"/>
                                                        <link dest="7790669d" destField="obj" source="e5899c9f2c0948fe" sourceField="value"/>
                                                    </graph>
                                                    <ogcn:published_input field="obj" name="sessionName" ref="c77c35ee54de4048"/>
                                                    <ogcn:published_input field="arg1" name="tableName" ref="6108d6e9"/>
                                                    <ogcn:published_input field="arg1" name="speaker" ref="7790669d"/>
                                                    <ogcn:published_output field="value" name="value" ref="69a643bcfc254a34"/>
                                                    <extensions>
                                                        <oga:meta x="475" y="76">
                                                            <oga:default for="tableName" type="java.lang.String">Word Exact Matches</oga:default>
                                                        </oga:meta>
                                                    </extensions>
                                                </ogcn:macro>
                                                <ogcn:macro id="4a1999b04680491a" name="Setup Buffer Name: Word Exact Mis-matches" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                                    <graph id="59328f4e">
                                                        <node id="d5a043e0ca6f4f0f" name="StringBuffer#&lt;init&gt;()" type="class:ca.gedge.opgraph.nodes.reflect.ConstructorNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.classMember"><![CDATA[<init>()]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="305" y="167"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="9e4010090fc54fe1" name="String#&lt;init&gt;(String)" type="class:ca.gedge.opgraph.nodes.reflect.ConstructorNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.classMember"><![CDATA[<init>(java.lang.String)]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.declaredClass"><![CDATA[java.lang.String]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="311" y="242"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="4600237da6764387" name="Object#toString()" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[toString()]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.Object]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="322" y="495"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="fda95f1d9c7c40a2" name="StringBuffer#append(String)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[append(java.lang.String)]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="483" y="170">
                                                                    <oga:default for="arg1" type="java.lang.String"/>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <node id="d2dc6b23df96414a" name="StringBuffer#append(String)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[append(java.lang.String)]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="738" y="210">
                                                                    <oga:default for="arg1" type="java.lang.String">_</oga:default>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <node id="9e52cf44b8c148d6" name="StringBuffer#append(Object)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[append(java.lang.Object)]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="490" y="277"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="d1ea8e7c31c84927" name="StringBuffer#append(String)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[append(java.lang.String)]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="497" y="384">
                                                                    <oga:default for="arg1" type="java.lang.String">_</oga:default>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <node id="1bf6dcc738174495" name="StringBuffer#append(String)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[append(java.lang.String)]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="497" y="488">
                                                                    <oga:default for="arg1" type="java.lang.String"/>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <node id="67bc64442c854733" name="StringBuffer#toString()" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[toString()]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="721" y="496"/>
                                                            </extensions>
                                                        </node>
                                                        <link dest="fda95f1d9c7c40a2" destField="obj" source="d5a043e0ca6f4f0f" sourceField="value"/>
                                                        <link dest="1bf6dcc738174495" destField="obj" source="d1ea8e7c31c84927" sourceField="value"/>
                                                        <link dest="1bf6dcc738174495" destField="arg1" source="4600237da6764387" sourceField="value"/>
                                                        <link dest="67bc64442c854733" destField="obj" source="1bf6dcc738174495" sourceField="value"/>
                                                        <link dest="fda95f1d9c7c40a2" destField="arg1" source="9e4010090fc54fe1" sourceField="value"/>
                                                        <link dest="d1ea8e7c31c84927" destField="obj" source="9e52cf44b8c148d6" sourceField="value"/>
                                                        <link dest="d2dc6b23df96414a" destField="obj" source="fda95f1d9c7c40a2" sourceField="value"/>
                                                        <link dest="9e52cf44b8c148d6" destField="obj" source="d2dc6b23df96414a" sourceField="value"/>
                                                    </graph>
                                                    <ogcn:published_input field="obj" name="sessionName" ref="4600237da6764387"/>
                                                    <ogcn:published_input field="arg1" name="tableName" ref="9e4010090fc54fe1"/>
                                                    <ogcn:published_input field="arg1" name="speaker" ref="9e52cf44b8c148d6"/>
                                                    <ogcn:published_output field="value" name="value" ref="67bc64442c854733"/>
                                                    <extensions>
                                                        <oga:meta x="480" y="202">
                                                            <oga:default for="tableName" type="java.lang.String">Word Exact Mis-matches</oga:default>
                                                        </oga:meta>
                                                    </extensions>
                                                </ogcn:macro>
                                                <ogcn:macro id="f71b6cf41d9e47a5" name="Setup Buffer Name: Word CV Matches" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                                    <graph id="30038eab">
                                                        <node id="c340750712384eb7" name="StringBuffer#&lt;init&gt;()" type="class:ca.gedge.opgraph.nodes.reflect.ConstructorNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.classMember"><![CDATA[<init>()]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="305" y="167"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="e5beb8573ece4c4a" name="String#&lt;init&gt;(String)" type="class:ca.gedge.opgraph.nodes.reflect.ConstructorNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.classMember"><![CDATA[<init>(java.lang.String)]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.declaredClass"><![CDATA[java.lang.String]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="311" y="242"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="8acdf28ae6e945c9" name="Object#toString()" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[toString()]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.Object]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="322" y="495"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="28d5c1e80e664986" name="StringBuffer#append(String)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[append(java.lang.String)]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="483" y="170">
                                                                    <oga:default for="arg1" type="java.lang.String"/>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <node id="a2ebee3c69b64da2" name="StringBuffer#append(String)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[append(java.lang.String)]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="738" y="210">
                                                                    <oga:default for="arg1" type="java.lang.String">_</oga:default>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <node id="47467d91b5374cb9" name="StringBuffer#append(Object)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[append(java.lang.Object)]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="490" y="277"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="6c41ba56d5184404" name="StringBuffer#append(String)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[append(java.lang.String)]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="497" y="384">
                                                                    <oga:default for="arg1" type="java.lang.String">_</oga:default>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <node id="42fc08d98a634003" name="StringBuffer#append(String)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[append(java.lang.String)]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="497" y="488">
                                                                    <oga:default for="arg1" type="java.lang.String"/>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <node id="63482a06236c4b68" name="StringBuffer#toString()" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[toString()]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="721" y="496"/>
                                                            </extensions>
                                                        </node>
                                                        <link dest="28d5c1e80e664986" destField="obj" source="c340750712384eb7" sourceField="value"/>
                                                        <link dest="42fc08d98a634003" destField="obj" source="6c41ba56d5184404" sourceField="value"/>
                                                        <link dest="42fc08d98a634003" destField="arg1" source="8acdf28ae6e945c9" sourceField="value"/>
                                                        <link dest="63482a06236c4b68" destField="obj" source="42fc08d98a634003" sourceField="value"/>
                                                        <link dest="28d5c1e80e664986" destField="arg1" source="e5beb8573ece4c4a" sourceField="value"/>
                                                        <link dest="6c41ba56d5184404" destField="obj" source="47467d91b5374cb9" sourceField="value"/>
                                                        <link dest="a2ebee3c69b64da2" destField="obj" source="28d5c1e80e664986" sourceField="value"/>
                                                        <link dest="47467d91b5374cb9" destField="obj" source="a2ebee3c69b64da2" sourceField="value"/>
                                                    </graph>
                                                    <ogcn:published_input field="obj" name="sessionName" ref="8acdf28ae6e945c9"/>
                                                    <ogcn:published_input field="arg1" name="tableName" ref="e5beb8573ece4c4a"/>
                                                    <ogcn:published_input field="arg1" name="speaker" ref="47467d91b5374cb9"/>
                                                    <ogcn:published_output field="value" name="value" ref="63482a06236c4b68"/>
                                                    <extensions>
                                                        <oga:meta x="506" y="342">
                                                            <oga:default for="tableName" type="java.lang.String">Word CV Matches</oga:default>
                                                        </oga:meta>
                                                    </extensions>
                                                </ogcn:macro>
                                                <ogcn:macro id="e0b4e3bc904e45" name="Setup Buffer Name: Word CV Mis-matches" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                                    <graph id="721ec815">
                                                        <node id="79afa9a2da1b4b73" name="StringBuffer#&lt;init&gt;()" type="class:ca.gedge.opgraph.nodes.reflect.ConstructorNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.classMember"><![CDATA[<init>()]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="305" y="167"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="b62cf7b441944d9e" name="String#&lt;init&gt;(String)" type="class:ca.gedge.opgraph.nodes.reflect.ConstructorNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.classMember"><![CDATA[<init>(java.lang.String)]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.declaredClass"><![CDATA[java.lang.String]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="311" y="242"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="a717e1cf3a5d42e5" name="Object#toString()" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[toString()]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.Object]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="322" y="495"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="cc39a9f633a4132" name="StringBuffer#append(String)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[append(java.lang.String)]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="483" y="170">
                                                                    <oga:default for="arg1" type="java.lang.String"/>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <node id="970507d892664d55" name="StringBuffer#append(String)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[append(java.lang.String)]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="738" y="210">
                                                                    <oga:default for="arg1" type="java.lang.String">_</oga:default>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <node id="94db8a544e474113" name="StringBuffer#append(Object)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[append(java.lang.Object)]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="490" y="277"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="6ffd8c6327fd4ec4" name="StringBuffer#append(String)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[append(java.lang.String)]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="497" y="384">
                                                                    <oga:default for="arg1" type="java.lang.String">_</oga:default>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <node id="f00cda828a774a1f" name="StringBuffer#append(String)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[append(java.lang.String)]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="497" y="488">
                                                                    <oga:default for="arg1" type="java.lang.String"/>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <node id="79659c1360ba4433" name="StringBuffer#toString()" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[toString()]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="721" y="496"/>
                                                            </extensions>
                                                        </node>
                                                        <link dest="cc39a9f633a4132" destField="obj" source="79afa9a2da1b4b73" sourceField="value"/>
                                                        <link dest="f00cda828a774a1f" destField="obj" source="6ffd8c6327fd4ec4" sourceField="value"/>
                                                        <link dest="f00cda828a774a1f" destField="arg1" source="a717e1cf3a5d42e5" sourceField="value"/>
                                                        <link dest="79659c1360ba4433" destField="obj" source="f00cda828a774a1f" sourceField="value"/>
                                                        <link dest="cc39a9f633a4132" destField="arg1" source="b62cf7b441944d9e" sourceField="value"/>
                                                        <link dest="6ffd8c6327fd4ec4" destField="obj" source="94db8a544e474113" sourceField="value"/>
                                                        <link dest="970507d892664d55" destField="obj" source="cc39a9f633a4132" sourceField="value"/>
                                                        <link dest="94db8a544e474113" destField="obj" source="970507d892664d55" sourceField="value"/>
                                                    </graph>
                                                    <ogcn:published_input field="obj" name="sessionName" ref="a717e1cf3a5d42e5"/>
                                                    <ogcn:published_input field="arg1" name="tableName" ref="b62cf7b441944d9e"/>
                                                    <ogcn:published_input field="arg1" name="speaker" ref="94db8a544e474113"/>
                                                    <ogcn:published_output field="value" name="value" ref="79659c1360ba4433"/>
                                                    <extensions>
                                                        <oga:meta x="504" y="470">
                                                            <oga:default for="tableName" type="java.lang.String">Word CV Mis-matches</oga:default>
                                                        </oga:meta>
                                                    </extensions>
                                                </ogcn:macro>
                                                <ogcn:macro id="fa0b4710ab824292" name="Setup Buffer Name: Word Stress Matches" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                                    <graph id="5d3e9ef9">
                                                        <node id="91d7c6060a9848ea" name="StringBuffer#&lt;init&gt;()" type="class:ca.gedge.opgraph.nodes.reflect.ConstructorNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.classMember"><![CDATA[<init>()]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="305" y="167"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="1aea384aeb4457b" name="String#&lt;init&gt;(String)" type="class:ca.gedge.opgraph.nodes.reflect.ConstructorNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.classMember"><![CDATA[<init>(java.lang.String)]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.declaredClass"><![CDATA[java.lang.String]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="311" y="242"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="fdb8b5ba3caa4e75" name="Object#toString()" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[toString()]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.Object]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="322" y="495"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="9955c204160a4fe8" name="StringBuffer#append(String)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[append(java.lang.String)]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="483" y="170">
                                                                    <oga:default for="arg1" type="java.lang.String"/>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <node id="d01897b07e954c5c" name="StringBuffer#append(String)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[append(java.lang.String)]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="738" y="210">
                                                                    <oga:default for="arg1" type="java.lang.String">_</oga:default>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <node id="feb8e07be5da4b14" name="StringBuffer#append(Object)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[append(java.lang.Object)]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="490" y="277"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="f2db1c6a35cc475a" name="StringBuffer#append(String)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[append(java.lang.String)]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="497" y="384">
                                                                    <oga:default for="arg1" type="java.lang.String">_</oga:default>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <node id="a970fb7121d48e2" name="StringBuffer#append(String)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[append(java.lang.String)]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="497" y="488">
                                                                    <oga:default for="arg1" type="java.lang.String"/>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <node id="8c54928a708a44bc" name="StringBuffer#toString()" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[toString()]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="721" y="496"/>
                                                            </extensions>
                                                        </node>
                                                        <link dest="9955c204160a4fe8" destField="obj" source="91d7c6060a9848ea" sourceField="value"/>
                                                        <link dest="a970fb7121d48e2" destField="obj" source="f2db1c6a35cc475a" sourceField="value"/>
                                                        <link dest="a970fb7121d48e2" destField="arg1" source="fdb8b5ba3caa4e75" sourceField="value"/>
                                                        <link dest="8c54928a708a44bc" destField="obj" source="a970fb7121d48e2" sourceField="value"/>
                                                        <link dest="9955c204160a4fe8" destField="arg1" source="1aea384aeb4457b" sourceField="value"/>
                                                        <link dest="f2db1c6a35cc475a" destField="obj" source="feb8e07be5da4b14" sourceField="value"/>
                                                        <link dest="d01897b07e954c5c" destField="obj" source="9955c204160a4fe8" sourceField="value"/>
                                                        <link dest="feb8e07be5da4b14" destField="obj" source="d01897b07e954c5c" sourceField="value"/>
                                                    </graph>
                                                    <ogcn:published_input field="obj" name="sessionName" ref="fdb8b5ba3caa4e75"/>
                                                    <ogcn:published_input field="arg1" name="tableName" ref="1aea384aeb4457b"/>
                                                    <ogcn:published_input field="arg1" name="speaker" ref="feb8e07be5da4b14"/>
                                                    <ogcn:published_output field="value" name="value" ref="8c54928a708a44bc"/>
                                                    <extensions>
                                                        <oga:meta x="505" y="595">
                                                            <oga:default for="tableName" type="java.lang.String">Word Stress Matches</oga:default>
                                                        </oga:meta>
                                                    </extensions>
                                                </ogcn:macro>
                                                <ogcn:macro id="c854410ef7aa4757" name="Setup Buffer Name: Word Stress Mis-matches" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                                    <graph id="6d1c5ce0">
                                                        <node id="441e1b6bc0394654" name="StringBuffer#&lt;init&gt;()" type="class:ca.gedge.opgraph.nodes.reflect.ConstructorNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.classMember"><![CDATA[<init>()]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="305" y="167"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="6d5741b8a5924e05" name="String#&lt;init&gt;(String)" type="class:ca.gedge.opgraph.nodes.reflect.ConstructorNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.classMember"><![CDATA[<init>(java.lang.String)]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.declaredClass"><![CDATA[java.lang.String]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="311" y="242"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="8a4adb541a3c4e6f" name="Object#toString()" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[toString()]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.Object]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="322" y="495"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="343c17f58085401b" name="StringBuffer#append(String)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[append(java.lang.String)]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="483" y="170">
                                                                    <oga:default for="arg1" type="java.lang.String"/>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <node id="a019930442be455f" name="StringBuffer#append(String)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[append(java.lang.String)]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="738" y="210">
                                                                    <oga:default for="arg1" type="java.lang.String">_</oga:default>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <node id="e6d87a63da8249a2" name="StringBuffer#append(Object)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[append(java.lang.Object)]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="490" y="277"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="aac678dc455c40c5" name="StringBuffer#append(String)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[append(java.lang.String)]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="497" y="384">
                                                                    <oga:default for="arg1" type="java.lang.String">_</oga:default>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <node id="9695272b65cf468d" name="StringBuffer#append(String)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[append(java.lang.String)]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="497" y="488">
                                                                    <oga:default for="arg1" type="java.lang.String"/>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <node id="540f290646cf49d8" name="StringBuffer#toString()" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[toString()]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="721" y="496"/>
                                                            </extensions>
                                                        </node>
                                                        <link dest="343c17f58085401b" destField="obj" source="441e1b6bc0394654" sourceField="value"/>
                                                        <link dest="9695272b65cf468d" destField="obj" source="aac678dc455c40c5" sourceField="value"/>
                                                        <link dest="9695272b65cf468d" destField="arg1" source="8a4adb541a3c4e6f" sourceField="value"/>
                                                        <link dest="540f290646cf49d8" destField="obj" source="9695272b65cf468d" sourceField="value"/>
                                                        <link dest="343c17f58085401b" destField="arg1" source="6d5741b8a5924e05" sourceField="value"/>
                                                        <link dest="aac678dc455c40c5" destField="obj" source="e6d87a63da8249a2" sourceField="value"/>
                                                        <link dest="a019930442be455f" destField="obj" source="343c17f58085401b" sourceField="value"/>
                                                        <link dest="e6d87a63da8249a2" destField="obj" source="a019930442be455f" sourceField="value"/>
                                                    </graph>
                                                    <ogcn:published_input field="obj" name="sessionName" ref="8a4adb541a3c4e6f"/>
                                                    <ogcn:published_input field="arg1" name="tableName" ref="6d5741b8a5924e05"/>
                                                    <ogcn:published_input field="arg1" name="speaker" ref="e6d87a63da8249a2"/>
                                                    <ogcn:published_output field="value" name="value" ref="540f290646cf49d8"/>
                                                    <extensions>
                                                        <oga:meta x="508" y="726">
                                                            <oga:default for="tableName" type="java.lang.String">Word Stress Mis-matches</oga:default>
                                                        </oga:meta>
                                                    </extensions>
                                                </ogcn:macro>
                                                <node id="7443377e" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="showTable"><![CDATA[true]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="840" y="64">
                                                            <oga:default for="buffer" type="java.lang.String"/>
                                                        </oga:meta>
                                                    </extensions>
                                                </node>
                                                <node id="58d9b3332a6e4645" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="showTable"><![CDATA[true]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="838" y="209">
                                                            <oga:default for="buffer" type="java.lang.String"/>
                                                        </oga:meta>
                                                    </extensions>
                                                </node>
                                                <node id="23f963ad483d4afa" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="showTable"><![CDATA[true]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="830" y="348">
                                                            <oga:default for="buffer" type="java.lang.String"/>
                                                        </oga:meta>
                                                    </extensions>
                                                </node>
                                                <node id="8e66a613942c4663" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="showTable"><![CDATA[true]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="828" y="476">
                                                            <oga:default for="buffer" type="java.lang.String"/>
                                                        </oga:meta>
                                                    </extensions>
                                                </node>
                                                <node id="bf4e29f2605d468b" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="showTable"><![CDATA[true]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="829" y="601">
                                                            <oga:default for="buffer" type="java.lang.String"/>
                                                        </oga:meta>
                                                    </extensions>
                                                </node>
                                                <node id="719212f498ce4530" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="showTable"><![CDATA[true]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="832" y="732">
                                                            <oga:default for="buffer" type="java.lang.String"/>
                                                        </oga:meta>
                                                    </extensions>
                                                </node>
                                                <link dest="58d9b3332a6e4645" destField="buffer" source="4a1999b04680491a" sourceField="value"/>
                                                <link dest="23f963ad483d4afa" destField="buffer" source="f71b6cf41d9e47a5" sourceField="value"/>
                                                <link dest="719212f498ce4530" destField="buffer" source="c854410ef7aa4757" sourceField="value"/>
                                                <link dest="bf4e29f2605d468b" destField="buffer" source="fa0b4710ab824292" sourceField="value"/>
                                                <link dest="7443377e" destField="buffer" source="d29686b5042542d7" sourceField="value"/>
                                                <link dest="8e66a613942c4663" destField="buffer" source="e0b4e3bc904e45" sourceField="value"/>
                                                <link dest="7443377e" destField="data" source="fb305db58e734b9f" sourceField="obj"/>
                                                <link dest="58d9b3332a6e4645" destField="data" source="312461b0a2464c6e" sourceField="obj"/>
                                                <link dest="23f963ad483d4afa" destField="data" source="cdac94c9a46941f9" sourceField="obj"/>
                                                <link dest="8e66a613942c4663" destField="data" source="926a0843c8c74de6" sourceField="obj"/>
                                                <link dest="bf4e29f2605d468b" destField="data" source="43ba211f26794aa1" sourceField="obj"/>
                                                <link dest="719212f498ce4530" destField="data" source="5921c425b06041dd" sourceField="obj"/>
                                                <link dest="d29686b5042542d7" destField="sessionName" source="de33df7a92f7492d" sourceField="obj"/>
                                                <link dest="4a1999b04680491a" destField="sessionName" source="de33df7a92f7492d" sourceField="obj"/>
                                                <link dest="f71b6cf41d9e47a5" destField="sessionName" source="de33df7a92f7492d" sourceField="obj"/>
                                                <link dest="e0b4e3bc904e45" destField="sessionName" source="de33df7a92f7492d" sourceField="obj"/>
                                                <link dest="fa0b4710ab824292" destField="sessionName" source="de33df7a92f7492d" sourceField="obj"/>
                                                <link dest="c854410ef7aa4757" destField="sessionName" source="de33df7a92f7492d" sourceField="obj"/>
                                                <link dest="c854410ef7aa4757" destField="speaker" source="4fa7e3e393374590" sourceField="obj"/>
                                                <link dest="fa0b4710ab824292" destField="speaker" source="4fa7e3e393374590" sourceField="obj"/>
                                                <link dest="e0b4e3bc904e45" destField="speaker" source="4fa7e3e393374590" sourceField="obj"/>
                                                <link dest="f71b6cf41d9e47a5" destField="speaker" source="4fa7e3e393374590" sourceField="obj"/>
                                                <link dest="4a1999b04680491a" destField="speaker" source="4fa7e3e393374590" sourceField="obj"/>
                                                <link dest="d29686b5042542d7" destField="speaker" source="4fa7e3e393374590" sourceField="obj"/>
                                                <extensions>
                                                    <oga:notes>
                                                        <oga:note color="0xffff96" height="1159" title="Published Inputs" width="395" x="18" y="11"/>
                                                    </oga:notes>
                                                    <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                                </extensions>
                                            </graph>
                                            <ogcn:published_input field="obj" name="wordMatches" ref="fb305db58e734b9f"/>
                                            <ogcn:published_input field="obj" name="wordMisMatches" ref="312461b0a2464c6e"/>
                                            <ogcn:published_input field="obj" name="wordCVMatches" ref="cdac94c9a46941f9"/>
                                            <ogcn:published_input field="obj" name="wordCVMisMatches" ref="926a0843c8c74de6"/>
                                            <ogcn:published_input field="obj" name="wordStressMatches" ref="43ba211f26794aa1"/>
                                            <ogcn:published_input field="obj" name="wordStressMisMatches" ref="5921c425b06041dd"/>
                                            <ogcn:published_input field="obj" name="sessionName" ref="de33df7a92f7492d"/>
                                            <ogcn:published_input field="obj" name="speaker" ref="4fa7e3e393374590"/>
                                            <extensions>
                                                <oga:meta x="778" y="175"/>
                                            </extensions>
                                        </ogcn:macro>
                                        <node id="6c872a8d" name="Add Summary Row for Session" type="class:ca.phon.app.opgraph.nodes.table.TableScriptNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="__script"><![CDATA[
function init(inputFields, outputFields) {
	inputFields.add("sessionName", "");
	inputFields.add("allWords", "");
	inputFields.add("wordMatches", "");
	inputFields.add("wordMisMatches", "");
	inputFields.add("wordCVMatches", "");
	inputFields.add("wordCVMisMatches", "");
	inputFields.add("wordStressMatches", "");
	inputFields.add("wordStressMisMatches", "");
}

function tableOp(context, table) {
	var sessionName = context.get("sessionName");

	var numWords = context.get("allWords").rowCount;
	// grab age from 'allWords' table
	var age = context.get("allWords").getValueAt(0, "Age");
	var wordMatches = context.get("wordMatches").rowCount;
	var wordMisMatches = context.get("wordMisMatches").rowCount;
	var wordCVMatches = context.get("wordCVMatches").rowCount;
	var wordCVMisMatches = context.get("wordCVMisMatches").rowCount;
	var wordStressMatches = context.get("wordStressMatches").rowCount;
	var wordStressMisMatches = context.get("wordStressMisMatches").rowCount;

	
	
	var rowData = [];
	var row = 0;
	
	rowData[row++] = sessionName;
	rowData[row++] = age;
	rowData[row++] = new java.lang.Integer(numWords);
	rowData[row++] = new java.lang.Integer(wordMatches);
	rowData[row++] = new java.lang.Integer(wordMisMatches);
	rowData[row++] = (wordMatches / numWords) * 100.0;
	rowData[row++] = new java.lang.Integer(wordCVMatches);
	rowData[row++] = new java.lang.Integer(wordCVMisMatches);
	rowData[row++] = (wordCVMatches / numWords) * 100.0;
	rowData[row++] = new java.lang.Integer(wordStressMatches);
	rowData[row++] = new java.lang.Integer(wordStressMisMatches);
	rowData[row++] = (wordStressMatches / numWords) * 100.0;

	table.addRow(rowData);
}
]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="746" y="433"/>
                                            </extensions>
                                        </node>
                                        <link dest="2ebea75f" destField="table" source="7eeb13ba4ea4541" sourceField="obj"/>
                                        <link dest="58a66d68" destField="wordMatches" source="2ebea75f" sourceField="wordMatches"/>
                                        <link dest="58a66d68" destField="wordMisMatches" source="2ebea75f" sourceField="wordMisMatches"/>
                                        <link dest="58a66d68" destField="wordCVMatches" source="2ebea75f" sourceField="wordCVMatches"/>
                                        <link dest="58a66d68" destField="wordCVMisMatches" source="2ebea75f" sourceField="wordCVMisMatches"/>
                                        <link dest="58a66d68" destField="wordStressMatches" source="2ebea75f" sourceField="wordStressMatches"/>
                                        <link dest="58a66d68" destField="wordStressMisMatches" source="2ebea75f" sourceField="wordStressMisMatches"/>
                                        <link dest="58a66d68" destField="sessionName" source="486ac6c4ab954867" sourceField="obj"/>
                                        <link dest="58a66d68" destField="speaker" source="5ab9334ebdb74de4" sourceField="obj"/>
                                        <link dest="6c872a8d" destField="allWords" source="2ebea75f" sourceField="table"/>
                                        <link dest="6c872a8d" destField="wordMatches" source="2ebea75f" sourceField="wordMatches"/>
                                        <link dest="6c872a8d" destField="wordMisMatches" source="2ebea75f" sourceField="wordMisMatches"/>
                                        <link dest="6c872a8d" destField="wordCVMatches" source="2ebea75f" sourceField="wordCVMatches"/>
                                        <link dest="6c872a8d" destField="wordCVMisMatches" source="2ebea75f" sourceField="wordCVMisMatches"/>
                                        <link dest="6c872a8d" destField="wordStressMatches" source="2ebea75f" sourceField="wordStressMatches"/>
                                        <link dest="6c872a8d" destField="wordStressMisMatches" source="2ebea75f" sourceField="wordStressMisMatches"/>
                                        <link dest="6c872a8d" destField="sessionName" source="486ac6c4ab954867" sourceField="obj"/>
                                        <link dest="6c872a8d" destField="table" source="fcb5d1a144be4576" sourceField="obj"/>
                                        <extensions>
                                            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                            <oga:notes>
                                                <oga:note color="0xffff96" height="686" title="Published Inputs" width="435" x="21" y="331"/>
                                            </oga:notes>
                                        </extensions>
                                    </graph>
                                    <ogcn:published_input field="obj" name="table" ref="7eeb13ba4ea4541"/>
                                    <ogcn:published_input field="obj" name="sessionName" ref="486ac6c4ab954867"/>
                                    <ogcn:published_input field="obj" name="speaker" ref="5ab9334ebdb74de4"/>
                                    <ogcn:published_input field="obj" name="summaryTable" ref="fcb5d1a144be4576"/>
                                    <ogcn:published_output field="table" name="table" ref="6c872a8d"/>
                                    <extensions>
                                        <oga:meta x="805" y="161"/>
                                    </extensions>
                                </ogcn:macro>
                                <link dest="7ae44e7f" destField="sessionName" source="20a81de6" sourceField="obj"/>
                                <link dest="7ae44e7f" destField="tableMap" source="4cc204d606b04df5" sourceField="obj"/>
                                <link dest="369cc50c" destField="enabled" source="7ae44e7f" sourceField="exists"/>
                                <link dest="369cc50c" destField="table" source="7ae44e7f" sourceField="table"/>
                                <link dest="369cc50c" destField="sessionName" source="20a81de6" sourceField="obj"/>
                                <link dest="369cc50c" destField="speaker" source="49f800d7cde04991" sourceField="obj"/>
                                <link dest="369cc50c" destField="summaryTable" source="a227f9bdbb2446da" sourceField="obj"/>
                                <extensions>
                                    <oga:notes>
                                        <oga:note color="0xffff96" height="584" title="Published Inputs" width="313" x="61" y="296"/>
                                        <oga:note color="0x96ff96" height="266" title="Condition" width="400" x="709" y="69">This node is only executed if there are results in the current session for the current participant.</oga:note>
                                    </oga:notes>
                                    <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                </extensions>
                            </graph>
                            <ogcn:published_input field="obj" name="tableMap" ref="4cc204d606b04df5"/>
                            <ogcn:published_input field="obj" name="speaker" ref="49f800d7cde04991"/>
                            <ogcn:published_input field="obj" name="summaryTable" ref="a227f9bdbb2446da"/>
                            <ogcn:published_output field="table" name="summaryTable" ref="369cc50c"/>
                            <extensions>
                                <oga:settings>
                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.IterableClassNode.className"><![CDATA[java.util.Set]]></oga:property>
                                </oga:settings>
                                <oga:meta x="728" y="161"/>
                            </extensions>
                        </ogcn:macro>
                        <node id="341aabc" name="Exact Match Inventory" type="class:ca.phon.app.opgraph.nodes.table.InventoryNode">
                            <extensions>
                                <opqry:inventoryoptions>
                                    <opqry:groupBy caseSensitive="false" column="Age" ignoreDiacritics="false"/>
                                    <opqry:column caseSensitive="false" column="Orthography" ignoreDiacritics="false"/>
                                    <opqry:column caseSensitive="false" column="IPA Target" ignoreDiacritics="false"/>
                                    <opqry:column caseSensitive="false" column="IPA Actual" ignoreDiacritics="false"/>
                                </opqry:inventoryoptions>
                                <oga:settings/>
                                <oga:meta x="801" y="407"/>
                            </extensions>
                        </node>
                        <node id="ce16f916ca7b4fc8" name="Mis-match Inventory" type="class:ca.phon.app.opgraph.nodes.table.InventoryNode">
                            <extensions>
                                <opqry:inventoryoptions>
                                    <opqry:groupBy caseSensitive="false" column="Age" ignoreDiacritics="false"/>
                                    <opqry:column caseSensitive="false" column="Orthography" ignoreDiacritics="false"/>
                                    <opqry:column caseSensitive="false" column="IPA Target" ignoreDiacritics="false"/>
                                    <opqry:column caseSensitive="false" column="IPA Actual" ignoreDiacritics="false"/>
                                </opqry:inventoryoptions>
                                <oga:settings/>
                                <oga:meta x="805" y="604"/>
                            </extensions>
                        </node>
                        <node id="f9656b548c3c492d" name="CV Match Inventory" type="class:ca.phon.app.opgraph.nodes.table.InventoryNode">
                            <extensions>
                                <opqry:inventoryoptions>
                                    <opqry:groupBy caseSensitive="false" column="Age" ignoreDiacritics="false"/>
                                    <opqry:column caseSensitive="false" column="IPA Target CV" ignoreDiacritics="false"/>
                                    <opqry:column caseSensitive="false" column="IPA Actual CV" ignoreDiacritics="true"/>
                                </opqry:inventoryoptions>
                                <oga:settings/>
                                <oga:meta x="810" y="800"/>
                            </extensions>
                        </node>
                        <node id="a4d283f3dd3143ec" name="CV Mis-match Inventory" type="class:ca.phon.app.opgraph.nodes.table.InventoryNode">
                            <extensions>
                                <opqry:inventoryoptions>
                                    <opqry:groupBy caseSensitive="false" column="Age" ignoreDiacritics="false"/>
                                    <opqry:column caseSensitive="false" column="IPA Target CV" ignoreDiacritics="false"/>
                                    <opqry:column caseSensitive="false" column="IPA Actual CV" ignoreDiacritics="false"/>
                                </opqry:inventoryoptions>
                                <oga:settings/>
                                <oga:meta x="785" y="989"/>
                            </extensions>
                        </node>
                        <node id="58b88d834d524adb" name="Stress Match Inventory" type="class:ca.phon.app.opgraph.nodes.table.InventoryNode">
                            <extensions>
                                <opqry:inventoryoptions>
                                    <opqry:groupBy caseSensitive="false" column="Age" ignoreDiacritics="false"/>
                                    <opqry:column caseSensitive="false" column="IPA Target Stress" ignoreDiacritics="false"/>
                                    <opqry:column caseSensitive="false" column="IPA Actual Stress" ignoreDiacritics="false"/>
                                </opqry:inventoryoptions>
                                <oga:settings/>
                                <oga:meta x="786" y="1185"/>
                            </extensions>
                        </node>
                        <node id="cf896fc329114459" name="Stress Mis-match Inventory" type="class:ca.phon.app.opgraph.nodes.table.InventoryNode">
                            <extensions>
                                <opqry:inventoryoptions>
                                    <opqry:groupBy caseSensitive="false" column="Age" ignoreDiacritics="false"/>
                                    <opqry:column caseSensitive="false" column="IPA Target Stress" ignoreDiacritics="false"/>
                                    <opqry:column caseSensitive="false" column="IPA Actual Stress" ignoreDiacritics="false"/>
                                </opqry:inventoryoptions>
                                <oga:settings/>
                                <oga:meta x="779" y="1379"/>
                            </extensions>
                        </node>
                        <node id="11abe9ea17954a1d" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                            <extensions>
                                <oga:settings>
                                    <oga:property key="showTable"><![CDATA[true]]></oga:property>
                                </oga:settings>
                                <oga:meta x="991" y="212"/>
                            </extensions>
                        </node>
                        <node id="169ac0e614534736" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                            <extensions>
                                <oga:settings>
                                    <oga:property key="showTable"><![CDATA[true]]></oga:property>
                                </oga:settings>
                                <oga:meta x="1006" y="425"/>
                            </extensions>
                        </node>
                        <node id="8fc7b5b7ce564761" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                            <extensions>
                                <oga:settings>
                                    <oga:property key="showTable"><![CDATA[true]]></oga:property>
                                </oga:settings>
                                <oga:meta x="1012" y="621"/>
                            </extensions>
                        </node>
                        <node id="51a4bed90e044c38" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                            <extensions>
                                <oga:settings>
                                    <oga:property key="showTable"><![CDATA[true]]></oga:property>
                                </oga:settings>
                                <oga:meta x="1015" y="818"/>
                            </extensions>
                        </node>
                        <node id="5ae33b19d2024de6" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                            <extensions>
                                <oga:settings>
                                    <oga:property key="showTable"><![CDATA[true]]></oga:property>
                                </oga:settings>
                                <oga:meta x="990" y="1007"/>
                            </extensions>
                        </node>
                        <node id="8890e8c9218746cf" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                            <extensions>
                                <oga:settings>
                                    <oga:property key="showTable"><![CDATA[true]]></oga:property>
                                </oga:settings>
                                <oga:meta x="991" y="1203"/>
                            </extensions>
                        </node>
                        <node id="905723b9a1de48b1" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                            <extensions>
                                <oga:settings>
                                    <oga:property key="showTable"><![CDATA[true]]></oga:property>
                                </oga:settings>
                                <oga:meta x="984" y="1397"/>
                            </extensions>
                        </node>
                        <link dest="3ad7825a" destField="collection" source="7c61771a" sourceField="keySet"/>
                        <link dest="3ad7825a" destField="tableMap" source="7c61771a" sourceField="tableMap"/>
                        <link dest="3ad7825a" destField="summaryTable" source="eeae57b70e674095" sourceField="obj"/>
                        <link dest="3ad7825a" destField="speaker" source="59377617e2b348f4" sourceField="obj"/>
                        <link dest="11abe9ea17954a1d" destField="data" source="3ad7825a" sourceField="summaryTable"/>
                        <link dest="7c61771a" destField="table" source="d580fc54a5a04182" sourceField="obj"/>
                        <link dest="4d9a07f9fd344f69" destField="table" source="d580fc54a5a04182" sourceField="obj"/>
                        <link dest="341aabc" destField="table" source="4d9a07f9fd344f69" sourceField="wordMatches"/>
                        <link dest="169ac0e614534736" destField="data" source="341aabc" sourceField="table"/>
                        <link dest="169ac0e614534736" destField="buffer" source="cdbeadeceb9a4264" sourceField="value"/>
                        <link dest="cdbeadeceb9a4264" destField="speaker" source="59377617e2b348f4" sourceField="obj"/>
                        <link dest="8fc7b5b7ce564761" destField="buffer" source="293a48a85ee74f42" sourceField="value"/>
                        <link dest="8fc7b5b7ce564761" destField="data" source="ce16f916ca7b4fc8" sourceField="table"/>
                        <link dest="ce16f916ca7b4fc8" destField="table" source="4d9a07f9fd344f69" sourceField="wordMisMatches"/>
                        <link dest="293a48a85ee74f42" destField="speaker" source="59377617e2b348f4" sourceField="obj"/>
                        <link dest="51a4bed90e044c38" destField="buffer" source="89d7b1aa582647fc" sourceField="value"/>
                        <link dest="51a4bed90e044c38" destField="data" source="f9656b548c3c492d" sourceField="table"/>
                        <link dest="f9656b548c3c492d" destField="table" source="4d9a07f9fd344f69" sourceField="wordCVMatches"/>
                        <link dest="89d7b1aa582647fc" destField="speaker" source="59377617e2b348f4" sourceField="obj"/>
                        <link dest="5ae33b19d2024de6" destField="buffer" source="e5035384076542ac" sourceField="value"/>
                        <link dest="5ae33b19d2024de6" destField="data" source="a4d283f3dd3143ec" sourceField="table"/>
                        <link dest="a4d283f3dd3143ec" destField="table" source="4d9a07f9fd344f69" sourceField="wordCVMisMatches"/>
                        <link dest="e5035384076542ac" destField="speaker" source="59377617e2b348f4" sourceField="obj"/>
                        <link dest="8890e8c9218746cf" destField="buffer" source="4cde8ec413ec4a93" sourceField="value"/>
                        <link dest="8890e8c9218746cf" destField="data" source="58b88d834d524adb" sourceField="table"/>
                        <link dest="58b88d834d524adb" destField="table" source="4d9a07f9fd344f69" sourceField="wordStressMatches"/>
                        <link dest="4cde8ec413ec4a93" destField="speaker" source="59377617e2b348f4" sourceField="obj"/>
                        <link dest="905723b9a1de48b1" destField="buffer" source="6a2022f1966244d4" sourceField="value"/>
                        <link dest="905723b9a1de48b1" destField="data" source="cf896fc329114459" sourceField="table"/>
                        <link dest="cf896fc329114459" destField="table" source="4d9a07f9fd344f69" sourceField="wordStressMisMatches"/>
                        <link dest="6a2022f1966244d4" destField="speaker" source="59377617e2b348f4" sourceField="obj"/>
                        <link dest="2c588b90256c43b3" destField="speaker" source="59377617e2b348f4" sourceField="obj"/>
                        <link dest="11abe9ea17954a1d" destField="buffer" source="2c588b90256c43b3" sourceField="value"/>
                        <extensions>
                            <oga:notes>
                                <oga:note color="0xffff96" height="707" title="Published Inputs" width="436" x="15" y="175"/>
                            </oga:notes>
                            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                        </extensions>
                    </graph>
                    <ogcn:published_input field="obj" name="summaryTable" ref="eeae57b70e674095"/>
                    <ogcn:published_input field="obj" name="speaker" ref="59377617e2b348f4"/>
                    <ogcn:published_input field="obj" name="table" ref="d580fc54a5a04182"/>
                    <extensions>
                        <oga:meta x="843" y="136"/>
                    </extensions>
                </ogcn:macro>
                <link dest="c395c1491dbb4a9b" destField="obj" source="4d78e0c9" sourceField="obj"/>
                <link dest="6b5d4572" destField="speaker" source="c395c1491dbb4a9b" sourceField="obj"/>
                <link dest="6b5d4572" destField="tableMap" source="bd41f2935e8a4dc9" sourceField="obj"/>
                <link dest="588b604d" destField="enabled" source="6b5d4572" sourceField="exists"/>
                <link dest="588b604d" destField="summaryTable" source="7042cc1b9ceb408c" sourceField="summaryTable"/>
                <link dest="588b604d" destField="speaker" source="c395c1491dbb4a9b" sourceField="obj"/>
                <link dest="588b604d" destField="table" source="6b5d4572" sourceField="table"/>
                <extensions>
                    <oga:notes>
                        <oga:note color="0xffff96" height="522" title="Macro Published Inputs" width="376" x="50" y="276"/>
                        <oga:note color="0x96ff96" height="235" title="Condition" width="362" x="769" y="63">This macro is only executed if the speaker has results in the tableMap.</oga:note>
                    </oga:notes>
                    <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                </extensions>
            </graph>
            <ogcn:published_input field="obj" name="tableMap" ref="bd41f2935e8a4dc9"/>
            <extensions>
                <oga:settings>
                    <oga:property key="ca.gedge.opgraph.nodes.reflect.IterableClassNode.className"><![CDATA[java.util.ArrayList]]></oga:property>
                </oga:settings>
                <oga:meta x="929" y="115"/>
            </extensions>
        </ogcn:macro>
        <link dest="78e659da" destField="project" source="747f610d" sourceField="obj"/>
        <link dest="78e659da" destField="sessions" source="67ab4a6" sourceField="obj"/>
        <link dest="3382e2e3" destField="project" source="78e659da" sourceField="project"/>
        <link dest="3382e2e3" destField="results" source="78e659da" sourceField="results"/>
        <link dest="1030eddd" destField="collection" source="f00dcc378bd645f1" sourceField="obj"/>
        <link dest="409e9fee" destField="table" source="3382e2e3" sourceField="table"/>
        <link dest="1030eddd" destField="tableMap" source="409e9fee" sourceField="tableMap"/>
        <extensions>
            <opqry:nodewizard type="ca.phon.app.opgraph.analysis.AnalysisWizardExtension">
                <opqry:info format="html" title="Word Match">
                    <opqry:message/>
                </opqry:info>
                <opqry:node ref="78e659da" showAsStep="true">
                    <opqry:info format="html" title="Query: Word Match">
                        <opqry:message/>
                    </opqry:info>
                </opqry:node>
                <opqry:report-template name="Report">#**
 * Phon - An open source tool for research in phonology.
 * Copyright (C) 2005 - 2017, Gregory Hedlund &amp;lt;ghedlund@mun.ca&amp;gt; and Yvan Rose &amp;lt;yrose@mun.ca&amp;gt;
 * Dept of Linguistics, Memorial University &amp;lt;https://phon.ca&amp;gt;
 * 
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see &amp;lt;http://www.gnu.org/licenses/&amp;gt;.
 *#

#macro( printAggregate $type $title $participant )
#set($tableName = "Aggregate_" + $type + "_" + $participant)
#if($tables.containsKey($tableName))
#set($table = $tables.get($tableName))
#set($caption = "&lt;b&gt;" + $title + "&lt;/b&gt;&lt;/br&gt;&lt;b&gt;Speaker: &lt;/b&gt; " + $participant)
#printTableWithCaption($table, $caption, [])
#else
&lt;b&gt;$title&lt;/b&gt;&lt;br/&gt;
&lt;b&gt;Speaker:&lt;/b&gt; $participant
	
No Results
#end
#end

#macro( printBreakdown $sessionPath $type $title $participant )
#set($tableName = $type+"_"+$participant+"_"+$sessionPath)
#if($tables.containsKey($tableName))
#set($table = $tables.get($tableName))
#set($caption = "&lt;b&gt;" + $title + "&lt;/b&gt;&lt;br/&gt;&lt;b&gt;Session:&lt;/b&gt; " + $sessionPath + "&lt;br/&gt;&lt;b&gt;Speaker:&lt;/b&gt; " + $participant)
#printTableWithCaption( $table $caption ["Orthography", "IPA Target", "IPA Actual", "Word Exact Match", "IPA Target CV", "IPA Actual CV", "Word CV Match", "IPA Target Stress", "IPA Actual Stress", "Word Stress Match"] )
#else
&lt;b&gt;$title&lt;/b&gt;&lt;br/&gt;
&lt;b&gt;Session:&lt;/b&gt; $sessionPath&lt;br/&gt;
&lt;b&gt;Speaker:&lt;/b&gt; $participant&lt;br/&gt;

No Results
#end
#end

#h1("Word Match")

#h2("Summary")

#foreach($participant in $selectedParticipants)
#set($tableName = "Summary_" + $participant)
#if($tables.containsKey($tableName))
#set($table = $tables.get($tableName))
#set($caption = "&lt;b&gt;Speaker:&lt;/b&gt; " + $participant)
#printTableWithCaption($table, $caption, [])
#else
&lt;b&gt;Speaker:&lt;/b&gt; $participant

No Results
#end

#end

#h2("Aggregate")

#foreach($participant in $selectedParticipants)

#printAggregate("Matches", "Word Exact Matches", $participant)

#printAggregate("Mis-matches", "Word Mis-matches", $participant)

#printAggregate("CV Matches", "Word CV Matches", $participant)

#printAggregate("CV Mis-matches", "Word CV Mis-matches", $participant)

#printAggregate("Stress Matches", "Word Stress Matches", $participant)

#printAggregate("Stress Mis-matches", "Word Stress Mis-matches", $participant)

#end

#h2("Breakdown")

#foreach($sessionPath in $selectedSessions)
#foreach($participant in $selectedParticipants)

#set($history = $participant.getExtension($ParticipantHistory))

#if($history.getSessions().contains($sessionPath))
#printBreakdown( $sessionPath "Word Exact Matches" "Word Exact Matches" $participant )

#printBreakdown( $sessionPath "Word Exact Mis-matches" "Word Mis-matches" $participant )

#printBreakdown( $sessionPath "Word CV Matches" "Word CV Matches" $participant )

#printBreakdown( $sessionPath "Word CV Mis-matches" "Word CV Mis-matches" $participant )

#printBreakdown( $sessionPath "Word Stress Matches" "Word Stress Matches" $participant )

#printBreakdown( $sessionPath "Word Stress Mis-matches" "Word Stress Mis-matches" $participant )
#end

#end
#end</opqry:report-template>
            </opqry:nodewizard>
            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
        </extensions>
    </graph>
</opgraph>
