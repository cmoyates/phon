<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<opgraph xmlns="http://gedge.ca/ns/opgraph" xmlns:nes="https://www.phon.ca/ns/node_editor" xmlns:oga="http://gedge.ca/ns/opgraph-app" xmlns:ogcn="http://gedge.ca/ns/opgraph-common-nodes" xmlns:opqry="https://phon.ca/ns/opgraph_query" xmlns:qry="http://phon.ling.mun.ca/ns/query">
    <graph id="root">
        <node id="55f4fba4" name="Project" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
            <extensions>
                <oga:settings>
                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.project.Project]]></oga:property>
                    <oga:property key="contextKey"><![CDATA[_project]]></oga:property>
                </oga:settings>
                <oga:meta x="15" y="15"/>
            </extensions>
        </node>
        <node id="1ae2322c" name="Selected Sessions" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
            <extensions>
                <oga:settings>
                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.util.ArrayList]]></oga:property>
                    <oga:property key="contextKey"><![CDATA[_selectedSessions]]></oga:property>
                </oga:settings>
                <oga:meta x="15" y="236"/>
            </extensions>
        </node>
        <node id="3da0e5db" name="Selected Participants" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
            <extensions>
                <oga:settings>
                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.util.ArrayList]]></oga:property>
                    <oga:property key="contextKey"><![CDATA[_selectedParticipants]]></oga:property>
                </oga:settings>
                <oga:meta x="16" y="331"/>
            </extensions>
        </node>
        <node id="dc596f57c3774064" name="Parameters" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
            <extensions>
                <oga:settings>
                    <oga:property key="__script"><![CDATA[var reportTitleParamInfo = {
	"id": "reportTitle",
	"title": "Report Title",
	"def": "Report",
	"prompt": "Enter report title"
};
var reportTitleParam;
var reportTitle = reportTitleParamInfo.def;

function setup_params(params) {
	reportTitleParam = new StringScriptParam(
			reportTitleParamInfo.id,
			reportTitleParamInfo.title,
			reportTitleParamInfo.def);
     reportTitleParam.setPrompt(reportTitleParamInfo.prompt);
	params.add(reportTitleParam);
}
]]></oga:property>
                    <oga:property key="reportTitle"><![CDATA[Vocalization Analysis]]></oga:property>
                </oga:settings>
                <oga:meta x="23" y="437"/>
            </extensions>
        </node>
        <opqry:queryNode id="29ac654b" name="Query : Data Tiers" type="ca.phon.app.opgraph.nodes.query.QueryNode">
            <qry:query xmlns="http://phon.ling.mun.ca/ns/query" date="2017-07-04T09:24:46.886-02:30" name="Data Tiers" uuid="5b835929-67f0-4d92-85a2-148381e0446d">
                <script>
                    <url ref="Data Tiers" rel="stock"/>
                    <param id="filters.alignedWord.patternFilter.allowOverlap">false</param>
                    <param id="filters.alignedWord.patternFilter.caseSensitive">false</param>
                    <param id="filters.alignedWord.patternFilter.exactMatch">true</param>
                    <param id="filters.alignedWord.patternFilter.filter">.+</param>
                    <param id="filters.alignedWord.patternFilter.filterType">Regular expression</param>
                    <param id="filters.alignedWord.tier">IPA Actual</param>
                    <param id="filters.primary.patternFilter.filter">.+</param>
                    <param id="filters.primary.patternFilter.filterType">Regular expression</param>
                    <param id="filters.primary.tier">Orthography</param>
                    <param id="filters.word.searchByWord">true</param>
                    <param id="filters.wordTiers.tiers">Actual Syllabification</param>
                </script>
            </qry:query>
            <extensions>
                <oga:settings/>
                <oga:meta x="318" y="102"/>
            </extensions>
        </opqry:queryNode>
        <ogcn:macro id="41a5af28" name="Print Report Title" type="ca.gedge.opgraph.nodes.general.MacroNode">
            <graph id="3bb44d42">
                <node id="444d7ec1" name="parameters" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                    <extensions>
                        <oga:settings>
                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.util.Map]]></oga:property>
                        </oga:settings>
                    </extensions>
                </node>
                <ogcn:macro id="6be9cf3f68b64e43" name="Get Report Title" type="ca.gedge.opgraph.nodes.general.MacroNode">
                    <graph id="2e76084e">
                        <node id="496aae2d8c5f45ee" name="String#&lt;init&gt;(String)" type="class:ca.gedge.opgraph.nodes.reflect.ConstructorNode">
                            <extensions>
                                <oga:settings>
                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.classMember"><![CDATA[<init>(java.lang.String)]]></oga:property>
                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.declaredClass"><![CDATA[java.lang.String]]></oga:property>
                                </oga:settings>
                                <oga:meta x="15" y="15">
                                    <oga:default for="arg1" type="java.lang.String">reportTitle</oga:default>
                                </oga:meta>
                            </extensions>
                        </node>
                        <node id="7b1133368cbf4c65" name="Map#get(Object)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                            <extensions>
                                <oga:settings>
                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[get(java.lang.Object)]]></oga:property>
                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.util.Map]]></oga:property>
                                </oga:settings>
                                <oga:meta x="218" y="16"/>
                            </extensions>
                        </node>
                        <node id="9c8aa94acf7f4599" name="Object#toString()" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                            <extensions>
                                <oga:settings>
                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[toString()]]></oga:property>
                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.Object]]></oga:property>
                                </oga:settings>
                                <oga:meta x="392" y="15"/>
                            </extensions>
                        </node>
                        <link dest="7b1133368cbf4c65" destField="arg1" source="496aae2d8c5f45ee" sourceField="value"/>
                        <link dest="9c8aa94acf7f4599" destField="obj" source="7b1133368cbf4c65" sourceField="value"/>
                    </graph>
                    <ogcn:published_input field="obj" name="parameters" ref="7b1133368cbf4c65"/>
                    <ogcn:published_output field="value" name="reportTitle" ref="9c8aa94acf7f4599"/>
                    <extensions>
                        <oga:meta x="258" y="437"/>
                    </extensions>
                </ogcn:macro>
                <node id="16a1b6aa" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                    <input name="data" optional="false">Data to print</input>
                    <extensions>
                        <oga:settings>
                            <oga:property key="dataTemplate"><![CDATA[
#h1("$DATA")
]]></oga:property>
                            <oga:property key="showText"><![CDATA[true]]></oga:property>
                            <oga:property key="showTable"><![CDATA[false]]></oga:property>
                            <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                        </oga:settings>
                        <oga:meta x="481" y="437">
                            <oga:default for="buffer" type="java.lang.String">Report Template</oga:default>
                            <oga:default for="append" type="java.lang.Boolean">true</oga:default>
                        </oga:meta>
                    </extensions>
                </node>
                <link dest="6be9cf3f68b64e43" destField="parameters" source="444d7ec1" sourceField="obj"/>
                <link dest="16a1b6aa" destField="data" source="6be9cf3f68b64e43" sourceField="reportTitle"/>
            </graph>
            <ogcn:published_input field="obj" name="parameters" ref="444d7ec1"/>
            <extensions>
                <oga:meta x="250" y="433"/>
            </extensions>
        </ogcn:macro>
        <node id="61e6ae5ee8ed4084" type="class:ca.phon.app.opgraph.nodes.table.ResultsToTableNode">
            <extensions>
                <oga:settings>
                    <oga:property key="includeMetadata"><![CDATA[true]]></oga:property>
                    <oga:property key="includeTierInfo"><![CDATA[true]]></oga:property>
                    <oga:property key="includeSpeakerInfo"><![CDATA[true]]></oga:property>
                    <oga:property key="includeSessionInfo"><![CDATA[true]]></oga:property>
                </oga:settings>
                <oga:meta x="559" y="134"/>
            </extensions>
        </node>
        <node id="46ae9c22" name="Partition Table" type="class:ca.phon.app.opgraph.nodes.table.TableScriptNode">
            <output name="trueTable" type="ca.phon.query.report.datasource.DefaultTableDataSource">Table of rows from input table which match filter</output>
            <output name="falseTable" type="ca.phon.query.report.datasource.DefaultTableDataSource">Table of rows from output table which do not match the filter</output>
            <extensions>
                <oga:settings>
                    <oga:property key="filters.column.exactMatch"><![CDATA[true]]></oga:property>
                    <oga:property key="filters.column.filterType"><![CDATA[Plain text]]></oga:property>
                    <oga:property key="columnName"><![CDATA[Orthography]]></oga:property>
                    <oga:property key="__script"><![CDATA[/*
 * Phon - An open source tool for research in phonology.
 * Copyright (C) 2005 - 201, Gregory Hedlund <ghedlund@mun.ca> and Yvan Rose <yrose@mun.ca>
 * Dept of Linguistics, Memorial University <https://phon.ca>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

 /**
  * Partition Table.js
  *
  * Script for use with ca.phon.app.opgraph.nodes.table.TableScriptNode
  *
  * Partition table using a standard query filter and column name.
  */
var PatternFilter = require("lib/PatternFilter").PatternFilter;

var columnParamInfo = {
	"id": "columnName",
	"title": "Column Name",
	"def": "",
	"prompt": "Enter column name"
}

var filters = {
    "column": new PatternFilter("filters.column")
}

function setup_params(params) {
	var columnParam = new StringScriptParam(
		columnParamInfo.id,
		columnParamInfo.title,
		columnParamInfo.def);
	columnParam.setPrompt(columnParamInfo.prompt);
	params.add(columnParam);

	filters.column.param_setup(params);
}

// add custom inputs/outputs here
function init(inputs, outputs) {
	outputs.add("trueTable", "Table of rows from input table which match filter", false, DefaultTableDataSource);
	outputs.add("falseTable", "Table of rows from output table which do not match the filter", false, DefaultTableDataSource);
}

// run operation on table
function tableOp(context, table) {
	// find table column index
	col = table.getColumnIndex(columnName);
	if(col < 0)
		return; // column not found

	// create output tables
	trueTable = new DefaultTableDataSource();
	falseTable = new DefaultTableDataSource();
	for(c = 0; c < table.columnCount; c++) {
	    var colTitle = table.getColumnTitle(c);
	    trueTable.setColumnTitle(c, colTitle);
	    falseTable.setColumnTitle(c, colTitle);
	}

	for(row = 0; row < table.rowCount; row++) {
		rowData = table.getRow(row);
		rowMatches = filterRow(table, row, col);

		if(rowMatches == true) {
			trueTable.addRow(rowData);
		} else {
			falseTable.addRow(rowData);
		}
	}

	context.put("trueTable", trueTable);
	context.put("falseTable", falseTable);
}

function filterRow(table, row, col) {
	var value = table.getValueAt(row, col);
	if(value == null) return false;

	return filters.column.check_filter(value);
}
]]></oga:property>
                    <oga:property key="filters.column.allowOverlap"><![CDATA[false]]></oga:property>
                    <oga:property key="filters.column.caseSensitive"><![CDATA[false]]></oga:property>
                    <oga:property key="filters.column.filter"><![CDATA[yyy]]></oga:property>
                </oga:settings>
                <oga:meta x="745" y="127"/>
            </extensions>
        </node>
        <node id="d3211092b5054a20" name="Split Table by Speaker" type="class:ca.phon.app.opgraph.nodes.table.TableScriptNode">
            <output name="keySet" type="java.util.Set">Unique values from given column name</output>
            <output name="tableMap" type="java.util.Map">Map of key -&gt; table values</output>
            <extensions>
                <oga:settings>
                    <oga:property key="columnName"><![CDATA[Speaker]]></oga:property>
                    <oga:property key="__script"><![CDATA[/*
 * Phon - An open source tool for research in phonology.
 * Copyright (C) 2005 - 2017, Gregory Hedlund <ghedlund@mun.ca> and Yvan Rose <yrose@mun.ca>
 * Dept of Linguistics, Memorial University <https://phon.ca>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

 /**
  * Split Table.js
  *
  * Script for use with ca.phon.app.opgraph.nodes.table.TableScriptNode
  *
  * Split table based on column name.  Two outputs
  * are produced, a set of keys from the column used in the filter  and a
  * map of key -> table values.
  */

var columnParamInfo = {
	"id": "columnName",
	"title": "Column Name",
	"def": "",
	"prompt": "Enter column name"
}

function setup_params(params) {
	var columnParam = new StringScriptParam(
		columnParamInfo.id,
		columnParamInfo.title,
		columnParamInfo.def);
	columnParam.setPrompt(columnParamInfo.prompt);
	params.add(columnParam);
}

// add custom inputs/outputs here
function init(inputs, outputs) {
	outputs.add("keySet", "Unique values from given column name", false, java.util.Set);
	outputs.add("tableMap", "Map of key -> table values", false, java.util.Map);
}

/*
 * Create a new table with the same schema as the inputTable
 */
function setupTable(inputTable) {
    var table = new DefaultTableDataSource();
    for(c = 0; c < inputTable.columnCount; c++) {
	    var colTitle = inputTable.getColumnTitle(c);
	    table.setColumnTitle(c, colTitle);
	}
	return table;
}

// run operation on table
function tableOp(context, table) {
	// find table column index
	col = table.getColumnIndex(columnName);

	if(col < 0)
		return; // column not found

	var tableMap = new java.util.LinkedHashMap();

	for(row = 0; row < table.rowCount; row++) {
	    // use string value as row key
		var rowKey = Packages.ca.phon.formatter.FormatterUtil.format(table.getValueAt(row, col));

		var keyTable = tableMap.get(rowKey);
		if(keyTable == null) {
		    keyTable = setupTable(table);
		    tableMap.put(rowKey, keyTable);
		}
		keyTable.addRow(table.getRow(row));
	}

	context.put("keySet", tableMap.keySet());
	context.put("tableMap", tableMap);
}
]]></oga:property>
                </oga:settings>
                <oga:meta x="982" y="126"/>
            </extensions>
        </node>
        <node id="67dc55420a274067" name="Split Table by Speaker" type="class:ca.phon.app.opgraph.nodes.table.TableScriptNode">
            <output name="keySet" type="java.util.Set">Unique values from given column name</output>
            <output name="tableMap" type="java.util.Map">Map of key -&gt; table values</output>
            <extensions>
                <oga:settings>
                    <oga:property key="columnName"><![CDATA[Speaker]]></oga:property>
                    <oga:property key="__script"><![CDATA[/*
 * Phon - An open source tool for research in phonology.
 * Copyright (C) 2005 - 2017, Gregory Hedlund <ghedlund@mun.ca> and Yvan Rose <yrose@mun.ca>
 * Dept of Linguistics, Memorial University <https://phon.ca>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

 /**
  * Split Table.js
  *
  * Script for use with ca.phon.app.opgraph.nodes.table.TableScriptNode
  *
  * Split table based on column name.  Two outputs
  * are produced, a set of keys from the column used in the filter  and a
  * map of key -> table values.
  */

var columnParamInfo = {
	"id": "columnName",
	"title": "Column Name",
	"def": "",
	"prompt": "Enter column name"
}

function setup_params(params) {
	var columnParam = new StringScriptParam(
		columnParamInfo.id,
		columnParamInfo.title,
		columnParamInfo.def);
	columnParam.setPrompt(columnParamInfo.prompt);
	params.add(columnParam);
}

// add custom inputs/outputs here
function init(inputs, outputs) {
	outputs.add("keySet", "Unique values from given column name", false, java.util.Set);
	outputs.add("tableMap", "Map of key -> table values", false, java.util.Map);
}

/*
 * Create a new table with the same schema as the inputTable
 */
function setupTable(inputTable) {
    var table = new DefaultTableDataSource();
    for(c = 0; c < inputTable.columnCount; c++) {
	    var colTitle = inputTable.getColumnTitle(c);
	    table.setColumnTitle(c, colTitle);
	}
	return table;
}

// run operation on table
function tableOp(context, table) {
	// find table column index
	col = table.getColumnIndex(columnName);

	if(col < 0)
		return; // column not found

	var tableMap = new java.util.LinkedHashMap();

	for(row = 0; row < table.rowCount; row++) {
	    // use string value as row key
		var rowKey = Packages.ca.phon.formatter.FormatterUtil.format(table.getValueAt(row, col));

		var keyTable = tableMap.get(rowKey);
		if(keyTable == null) {
		    keyTable = setupTable(table);
		    tableMap.put(rowKey, keyTable);
		}
		keyTable.addRow(table.getRow(row));
	}

	context.put("keySet", tableMap.keySet());
	context.put("tableMap", tableMap);
}
]]></oga:property>
                </oga:settings>
                <oga:meta x="989" y="287"/>
            </extensions>
        </node>
        <ogcn:macro id="61208600" name="Vocalizations" type="ca.gedge.opgraph.nodes.reflect.IterableClassNode">
            <graph id="6dd90469">
                <node id="282a70f9" name="Current Object" type="class:ca.gedge.opgraph.nodes.reflect.ContextualItemClassNode">
                    <extensions>
                        <oga:settings>
                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ContextualItemClassNode.key"><![CDATA[currentValue]]></oga:property>
                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ContextualItemClassNode.declaredClass"><![CDATA[java.lang.Object]]></oga:property>
                        </oga:settings>
                        <oga:meta x="41" y="39"/>
                    </extensions>
                </node>
                <node id="af4cdc9a1efb4b6e" name="Table Map" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                    <extensions>
                        <oga:settings>
                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.util.Map]]></oga:property>
                        </oga:settings>
                        <oga:meta x="49" y="199"/>
                    </extensions>
                </node>
                <node id="64386b17" name="String#&lt;init&gt;(String)" type="class:ca.gedge.opgraph.nodes.reflect.ConstructorNode">
                    <extensions>
                        <oga:settings>
                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.classMember"><![CDATA[<init>(java.lang.String)]]></oga:property>
                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.declaredClass"><![CDATA[java.lang.String]]></oga:property>
                        </oga:settings>
                        <oga:meta x="57" y="313">
                            <oga:default for="arg1" type="java.lang.String">Vocalizations</oga:default>
                        </oga:meta>
                    </extensions>
                </node>
                <node id="5fc29abaa09040c1" name="To Participant Object" type="class:ca.gedge.opgraph.nodes.reflect.ObjectCastNode">
                    <extensions>
                        <oga:settings>
                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectCastNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                        </oga:settings>
                        <oga:meta x="237" y="45"/>
                    </extensions>
                </node>
                <node id="f9aea4b" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                    <input name="data" optional="false">Data to print</input>
                    <extensions>
                        <oga:settings>
                            <oga:property key="dataTemplate"><![CDATA[
#h2("$DATA")
]]></oga:property>
                            <oga:property key="showText"><![CDATA[true]]></oga:property>
                            <oga:property key="showTable"><![CDATA[false]]></oga:property>
                            <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                        </oga:settings>
                        <oga:meta x="341" y="281">
                            <oga:default for="buffer" type="java.lang.String">Report Template</oga:default>
                            <oga:default for="append" type="java.lang.Boolean">true</oga:default>
                        </oga:meta>
                    </extensions>
                </node>
                <ogcn:macro id="bbf482c5a66541f7" name="Get Table of Results For Speaker" type="ca.gedge.opgraph.nodes.general.MacroNode">
                    <graph id="d79c896">
                        <node id="5642bea05e5c4b06" name="Object#toString()" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                            <extensions>
                                <oga:settings>
                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[toString()]]></oga:property>
                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.Object]]></oga:property>
                                </oga:settings>
                                <oga:meta x="105" y="70"/>
                            </extensions>
                        </node>
                        <node id="57334ef9ad744f65" name="Map#get(Object)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                            <extensions>
                                <oga:settings>
                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[get(java.lang.Object)]]></oga:property>
                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.util.Map]]></oga:property>
                                </oga:settings>
                                <oga:meta x="296" y="73"/>
                            </extensions>
                        </node>
                        <node id="4df6ff3399a848c7" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                            <output name="exists" type="java.lang.Boolean">does table exist</output>
                            <output name="table" type="ca.phon.query.report.datasource.DefaultTableDataSource">table if exists, undefined otherwise</output>
                            <extensions>
                                <oga:settings>
                                    <oga:property key="__script"><![CDATA[
// setup input/output fields
function init(inputFields, outputFields) {
	inputFields.add("table", "");
	outputFields.add("exists", "does table exist", false, java.lang.Boolean);
	outputFields.add("table", "table if exists, undefined otherwise", false, Packages.ca.phon.query.report.datasource.DefaultTableDataSource);
}

function run(context) {
	var tableExists =
		(context.containsKey("table") && context.get("table") != null);
	context.put("exists", tableExists);
	context.put("table", context.get("table"));
}
]]></oga:property>
                                </oga:settings>
                                <oga:meta x="514" y="94"/>
                            </extensions>
                        </node>
                        <link dest="57334ef9ad744f65" destField="arg1" source="5642bea05e5c4b06" sourceField="value"/>
                        <link dest="4df6ff3399a848c7" destField="table" source="57334ef9ad744f65" sourceField="value"/>
                        <extensions>
                            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                        </extensions>
                    </graph>
                    <ogcn:published_input field="obj" name="speaker" ref="5642bea05e5c4b06"/>
                    <ogcn:published_input field="obj" name="tableMap" ref="57334ef9ad744f65"/>
                    <ogcn:published_output field="exists" name="exists" ref="4df6ff3399a848c7"/>
                    <ogcn:published_output field="table" name="table" ref="4df6ff3399a848c7"/>
                    <extensions>
                        <oga:meta x="477" y="101"/>
                    </extensions>
                </ogcn:macro>
                <ogcn:macro id="350c5a14" name="If Speaker Has Results" type="ca.gedge.opgraph.nodes.general.MacroNode">
                    <graph id="796d18f">
                        <node id="60a76f15" name="Table" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                            <extensions>
                                <oga:settings>
                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                </oga:settings>
                                <oga:meta x="47" y="126"/>
                            </extensions>
                        </node>
                        <node id="68d90fd6bd914ea2" name="Participant" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                            <extensions>
                                <oga:settings>
                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                </oga:settings>
                                <oga:meta x="48" y="335"/>
                            </extensions>
                        </node>
                        <node id="7f149b7d" name="Split Table by Session" type="class:ca.phon.app.opgraph.nodes.table.TableScriptNode">
                            <output name="keySet" type="java.util.Set">Unique values from given column name</output>
                            <output name="tableMap" type="java.util.Map">Map of key -&gt; table values</output>
                            <extensions>
                                <oga:settings>
                                    <oga:property key="columnName"><![CDATA[Session]]></oga:property>
                                    <oga:property key="__script"><![CDATA[/*
 * Phon - An open source tool for research in phonology.
 * Copyright (C) 2005 - 2017, Gregory Hedlund <ghedlund@mun.ca> and Yvan Rose <yrose@mun.ca>
 * Dept of Linguistics, Memorial University <https://phon.ca>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

 /**
  * Split Table.js
  *
  * Script for use with ca.phon.app.opgraph.nodes.table.TableScriptNode
  *
  * Split table based on column name.  Two outputs
  * are produced, a set of keys from the column used in the filter  and a
  * map of key -> table values.
  */

var columnParamInfo = {
	"id": "columnName",
	"title": "Column Name",
	"def": "",
	"prompt": "Enter column name"
}

function setup_params(params) {
	var columnParam = new StringScriptParam(
		columnParamInfo.id,
		columnParamInfo.title,
		columnParamInfo.def);
	columnParam.setPrompt(columnParamInfo.prompt);
	params.add(columnParam);
}

// add custom inputs/outputs here
function init(inputs, outputs) {
	outputs.add("keySet", "Unique values from given column name", false, java.util.Set);
	outputs.add("tableMap", "Map of key -> table values", false, java.util.Map);
}

/*
 * Create a new table with the same schema as the inputTable
 */
function setupTable(inputTable) {
    var table = new DefaultTableDataSource();
    for(c = 0; c < inputTable.columnCount; c++) {
	    var colTitle = inputTable.getColumnTitle(c);
	    table.setColumnTitle(c, colTitle);
	}
	return table;
}

// run operation on table
function tableOp(context, table) {
	// find table column index
	col = table.getColumnIndex(columnName);

	if(col < 0)
		return; // column not found

	var tableMap = new java.util.LinkedHashMap();

	for(row = 0; row < table.rowCount; row++) {
	    // use string value as row key
		var rowKey = Packages.ca.phon.formatter.FormatterUtil.format(table.getValueAt(row, col));

		var keyTable = tableMap.get(rowKey);
		if(keyTable == null) {
		    keyTable = setupTable(table);
		    tableMap.put(rowKey, keyTable);
		}
		keyTable.addRow(table.getRow(row));
	}

	context.put("keySet", tableMap.keySet());
	context.put("tableMap", tableMap);
}
]]></oga:property>
                                </oga:settings>
                                <oga:meta x="350" y="37"/>
                            </extensions>
                        </node>
                        <ogcn:macro id="5aee518f" name="Velleman Analysis" type="ca.gedge.opgraph.nodes.general.MacroNode">
                            <graph id="684fee68">
                                <node id="c81dda4" name="result total" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.lang.Integer]]></oga:property>
                                            <oga:property key="contextKey"/>
                                        </oga:settings>
                                        <oga:meta x="15" y="15"/>
                                    </extensions>
                                </node>
                                <node id="45508fae" name="speaker" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                        </oga:settings>
                                        <oga:meta x="13" y="116"/>
                                    </extensions>
                                </node>
                                <node id="578fcaef" name="table" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                            <oga:property key="contextKey"/>
                                        </oga:settings>
                                        <oga:meta x="11" y="437"/>
                                    </extensions>
                                </node>
                                <node id="7cbf1d09" name="tableMap" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.util.Map]]></oga:property>
                                        </oga:settings>
                                        <oga:meta x="15" y="578"/>
                                    </extensions>
                                </node>
                                <ogcn:macro id="71606628" name="Total" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                    <graph id="70118f79">
                                        <node id="61761de3" name="speaker" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="15" y="15"/>
                                            </extensions>
                                        </node>
                                        <node id="4413c5e1" name="tableMap" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.util.Map]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="15" y="308"/>
                                            </extensions>
                                        </node>
                                        <ogcn:macro id="9fb837e3dd39441b" name="Setup Buffer Name" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                            <graph id="54dc525e">
                                                <node id="890e53f198643a0" name="StringBuffer#&lt;init&gt;(String)" type="class:ca.gedge.opgraph.nodes.reflect.ConstructorNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.classMember"><![CDATA[<init>(java.lang.String)]]></oga:property>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="15" y="15">
                                                            <oga:default for="arg1" type="java.lang.String"/>
                                                        </oga:meta>
                                                    </extensions>
                                                </node>
                                                <node id="48913680b4364ec0" name="Participant" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="15" y="146"/>
                                                    </extensions>
                                                </node>
                                                <node id="e39e414a958c430d" name="StringBuffer#append(String)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[append(java.lang.String)]]></oga:property>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="256" y="15"/>
                                                    </extensions>
                                                </node>
                                                <node id="8e39f3647eb3497f" name="StringBuffer#toString()" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[toString()]]></oga:property>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="507" y="15"/>
                                                    </extensions>
                                                </node>
                                                <link dest="8e39f3647eb3497f" destField="obj" source="e39e414a958c430d" sourceField="value"/>
                                                <link dest="e39e414a958c430d" destField="obj" source="890e53f198643a0" sourceField="value"/>
                                                <link dest="e39e414a958c430d" destField="arg1" source="48913680b4364ec0" sourceField="name"/>
                                                <extensions>
                                                    <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                                </extensions>
                                            </graph>
                                            <ogcn:published_input field="obj" name="speaker" ref="48913680b4364ec0"/>
                                            <ogcn:published_input field="arg1" name="arg1" ref="890e53f198643a0"/>
                                            <ogcn:published_output field="value" name="value" ref="8e39f3647eb3497f"/>
                                            <extensions>
                                                <oga:meta x="205" y="15">
                                                    <oga:default for="arg1" type="java.lang.String">Total</oga:default>
                                                </oga:meta>
                                            </extensions>
                                        </ogcn:macro>
                                        <node id="4584344a" name="Create Totals Table" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                                            <input name="tableMap" optional="false"/>
                                            <output name="totalsTable" type="ca.phon.query.report.datasource.DefaultTableDataSource"/>
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	inputs.add("tableMap", "", false, false);

	outputs.add("totalsTable", "", false, Packages.ca.phon.query.report.datasource.DefaultTableDataSource);
}

function run(context) {
	var tableMap = context.get("tableMap");
	var totalsTable = new Packages.ca.phon.query.report.datasource.DefaultTableDataSource();

	totalsTable.setColumnTitle(0, "Session");
	totalsTable.setColumnTitle(1, "Count");

	var keySet = tableMap.keySet();
	var itr = keySet.iterator();
	var total = 0;
	while(itr.hasNext()) {
		var session = itr.next();
		var count = tableMap.get(session).rowCount;
		total += count;

		var rowData = [];
		rowData[0] = session;
		rowData[1] = new java.lang.Integer(count);

		totalsTable.addRow(rowData);
	}

	var rowData = [ "Total", new java.lang.Integer(total) ];
	totalsTable.addRow(rowData);

	context.put("totalsTable", totalsTable);
}
]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="159" y="308"/>
                                            </extensions>
                                        </node>
                                        <node id="5f701d30" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                            <input name="data" optional="false">Data to print</input>
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="dataTemplate"><![CDATA[$DATA]]></oga:property>
                                                    <oga:property key="showText"><![CDATA[false]]></oga:property>
                                                    <oga:property key="showTable"><![CDATA[true]]></oga:property>
                                                    <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="369" y="15"/>
                                            </extensions>
                                        </node>
                                        <ogcn:macro id="1db19bc0aaed4791" name="Add to Report Template" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                            <graph id="23c93e6a">
                                                <node id="d3163ab74e8e4042" name="Set Caption" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                    <input name="data" optional="false">Data to print</input>
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="dataTemplate"><![CDATA[
#set($caption = "<h3>Total : $DATA</h3>")
]]></oga:property>
                                                            <oga:property key="showText"><![CDATA[true]]></oga:property>
                                                            <oga:property key="showTable"><![CDATA[false]]></oga:property>
                                                            <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="51" y="48">
                                                            <oga:default for="buffer" type="java.lang.String">Report Template</oga:default>
                                                            <oga:default for="append" type="java.lang.Boolean">true</oga:default>
                                                        </oga:meta>
                                                    </extensions>
                                                </node>
                                                <node id="fb614350bf4b4317" name="Add to Template" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                    <input name="data" optional="false">Data to print</input>
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="dataTemplate"><![CDATA[
#set($tableName = "$DATA")
#if($tables.containsKey($tableName))
#set($table = $tables.get($tableName))
#printTableWithIdAndCaption( $table $tableName $caption [] )
#else
$caption

No Results
#end
]]></oga:property>
                                                            <oga:property key="showText"><![CDATA[true]]></oga:property>
                                                            <oga:property key="showTable"><![CDATA[false]]></oga:property>
                                                            <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="54" y="177">
                                                            <oga:default for="buffer" type="java.lang.String">Report Template</oga:default>
                                                            <oga:default for="append" type="java.lang.Boolean">true</oga:default>
                                                        </oga:meta>
                                                    </extensions>
                                                </node>
                                                <extensions>
                                                    <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                                </extensions>
                                            </graph>
                                            <ogcn:published_input field="data" name="speaker" ref="d3163ab74e8e4042"/>
                                            <ogcn:published_input field="data" name="bufferName" ref="fb614350bf4b4317"/>
                                            <extensions>
                                                <oga:meta x="528" y="15"/>
                                            </extensions>
                                        </ogcn:macro>
                                        <link dest="4584344a" destField="tableMap" source="4413c5e1" sourceField="obj"/>
                                        <link dest="5f701d30" destField="data" source="4584344a" sourceField="totalsTable"/>
                                        <link dest="1db19bc0aaed4791" destField="bufferName" source="5f701d30" sourceField="buffer"/>
                                        <link dest="5f701d30" destField="buffer" source="9fb837e3dd39441b" sourceField="value"/>
                                        <link dest="1db19bc0aaed4791" destField="speaker" source="61761de3" sourceField="obj"/>
                                        <link dest="9fb837e3dd39441b" destField="speaker" source="61761de3" sourceField="obj"/>
                                        <extensions>
                                            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                        </extensions>
                                    </graph>
                                    <ogcn:published_input field="obj" name="tableMap" ref="4413c5e1"/>
                                    <ogcn:published_input field="obj" name="speaker" ref="61761de3"/>
                                    <extensions>
                                        <oga:meta x="262" y="24"/>
                                    </extensions>
                                </ogcn:macro>
                                <ogcn:macro id="5c298b00" name="Listing" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                    <graph id="5c1cfbe6">
                                        <node id="77fcdc08" name="data" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="711" y="439"/>
                                            </extensions>
                                        </node>
                                        <node id="6907e174" name="speaker" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="711" y="439"/>
                                            </extensions>
                                        </node>
                                        <ogcn:macro id="2b7f7797b438469c" name="Setup Buffer Name" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                            <graph id="1ebe8aba">
                                                <node id="1246289b498f4209" name="StringBuffer#&lt;init&gt;(String)" type="class:ca.gedge.opgraph.nodes.reflect.ConstructorNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.classMember"><![CDATA[<init>(java.lang.String)]]></oga:property>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="15" y="15">
                                                            <oga:default for="arg1" type="java.lang.String"/>
                                                        </oga:meta>
                                                    </extensions>
                                                </node>
                                                <node id="9da44f96f0248dc" name="Participant" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="15" y="146"/>
                                                    </extensions>
                                                </node>
                                                <node id="53da17768cd7475c" name="StringBuffer#append(String)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[append(java.lang.String)]]></oga:property>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="256" y="15"/>
                                                    </extensions>
                                                </node>
                                                <node id="f622e05eda0e468f" name="StringBuffer#toString()" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[toString()]]></oga:property>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="507" y="15"/>
                                                    </extensions>
                                                </node>
                                                <link dest="f622e05eda0e468f" destField="obj" source="53da17768cd7475c" sourceField="value"/>
                                                <link dest="53da17768cd7475c" destField="obj" source="1246289b498f4209" sourceField="value"/>
                                                <link dest="53da17768cd7475c" destField="arg1" source="9da44f96f0248dc" sourceField="name"/>
                                                <extensions>
                                                    <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                                </extensions>
                                            </graph>
                                            <ogcn:published_input field="obj" name="speaker" ref="9da44f96f0248dc"/>
                                            <ogcn:published_input field="arg1" name="arg1" ref="1246289b498f4209"/>
                                            <ogcn:published_output field="value" name="value" ref="f622e05eda0e468f"/>
                                            <extensions>
                                                <oga:meta x="228" y="144">
                                                    <oga:default for="arg1" type="java.lang.String">Listing_</oga:default>
                                                </oga:meta>
                                            </extensions>
                                        </ogcn:macro>
                                        <node id="23037170" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                            <input name="data" optional="false">Data to print</input>
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="dataTemplate"><![CDATA[$DATA]]></oga:property>
                                                    <oga:property key="showText"><![CDATA[false]]></oga:property>
                                                    <oga:property key="showTable"><![CDATA[true]]></oga:property>
                                                    <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="398" y="145"/>
                                            </extensions>
                                        </node>
                                        <ogcn:macro id="984965bd195941b7" name="Add to Report Template" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                            <graph id="68e83979">
                                                <node id="d53cd18625e14d06" name="Set Caption" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                    <input name="data" optional="false">Data to print</input>
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="dataTemplate"><![CDATA[
#set($caption = "<h3>Listing : $DATA</h3>")
]]></oga:property>
                                                            <oga:property key="showText"><![CDATA[true]]></oga:property>
                                                            <oga:property key="showTable"><![CDATA[false]]></oga:property>
                                                            <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="50" y="48">
                                                            <oga:default for="buffer" type="java.lang.String">Report Template</oga:default>
                                                            <oga:default for="append" type="java.lang.Boolean">true</oga:default>
                                                        </oga:meta>
                                                    </extensions>
                                                </node>
                                                <node id="ad051d7bf6a741bd" name="Add to Template" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                    <input name="data" optional="false">Data to print</input>
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="dataTemplate"><![CDATA[
#set($tableName = "$DATA")
#if($tables.containsKey($tableName))
#set($table = $tables.get($tableName))
#printTableWithIdAndCaption( $table $tableName $caption ["Session", "Record #", "IPA Actual (Word)"] )
#else
$caption

No Results
#end
]]></oga:property>
                                                            <oga:property key="showText"><![CDATA[true]]></oga:property>
                                                            <oga:property key="showTable"><![CDATA[false]]></oga:property>
                                                            <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="54" y="177">
                                                            <oga:default for="buffer" type="java.lang.String">Report Template</oga:default>
                                                            <oga:default for="append" type="java.lang.Boolean">true</oga:default>
                                                        </oga:meta>
                                                    </extensions>
                                                </node>
                                                <extensions>
                                                    <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                                </extensions>
                                            </graph>
                                            <ogcn:published_input field="data" name="speaker" ref="d53cd18625e14d06"/>
                                            <ogcn:published_input field="data" name="bufferName" ref="ad051d7bf6a741bd"/>
                                            <extensions>
                                                <oga:meta x="577" y="165"/>
                                            </extensions>
                                        </ogcn:macro>
                                        <link dest="23037170" destField="buffer" source="2b7f7797b438469c" sourceField="value"/>
                                        <link dest="23037170" destField="data" source="77fcdc08" sourceField="obj"/>
                                        <link dest="2b7f7797b438469c" destField="speaker" source="6907e174" sourceField="obj"/>
                                        <link dest="984965bd195941b7" destField="bufferName" source="23037170" sourceField="buffer"/>
                                        <link dest="984965bd195941b7" destField="speaker" source="6907e174" sourceField="obj"/>
                                    </graph>
                                    <ogcn:published_input field="obj" name="data" ref="77fcdc08"/>
                                    <ogcn:published_input field="obj" name="speaker" ref="6907e174"/>
                                    <extensions>
                                        <oga:meta x="262" y="145"/>
                                    </extensions>
                                </ogcn:macro>
                                <ogcn:macro id="39f91ef7" name="Initial Consonants" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                    <graph id="23438003">
                                        <node id="2c5f289" name="result total" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.lang.Integer]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="15" y="15"/>
                                            </extensions>
                                        </node>
                                        <node id="1c7877d" name="speaker" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="15" y="146"/>
                                            </extensions>
                                        </node>
                                        <node id="4ceebc1" name="table" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="15" y="439"/>
                                            </extensions>
                                        </node>
                                        <node id="1bff2726" name="tableMap" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.util.Map]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="15" y="570"/>
                                            </extensions>
                                        </node>
                                        <ogcn:macro id="3fd5be49" name="Initial Consonants" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                            <graph id="1dbee95c">
                                                <node id="57fbc98f" name="speaker" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="15" y="15"/>
                                                    </extensions>
                                                </node>
                                                <node id="4582b1f9" name="table" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="15" y="308"/>
                                                    </extensions>
                                                </node>
                                                <node id="9cbcfc54f26c4cfa" name="Result Total" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.lang.Integer]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="45" y="443"/>
                                                    </extensions>
                                                </node>
                                                <ogcn:macro id="d0e4e5315d954c27" name="Setup Buffer Name" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                                    <graph id="7b9d6e6e">
                                                        <node id="2bad1d607024dae" name="StringBuffer#&lt;init&gt;(String)" type="class:ca.gedge.opgraph.nodes.reflect.ConstructorNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.classMember"><![CDATA[<init>(java.lang.String)]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="15" y="15">
                                                                    <oga:default for="arg1" type="java.lang.String"/>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <node id="15db6653a6294c18" name="Participant" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="15" y="146"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="d674f76e48834437" name="StringBuffer#append(String)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[append(java.lang.String)]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="256" y="15"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="353dcf36533c4ef9" name="StringBuffer#toString()" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[toString()]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="507" y="15"/>
                                                            </extensions>
                                                        </node>
                                                        <link dest="353dcf36533c4ef9" destField="obj" source="d674f76e48834437" sourceField="value"/>
                                                        <link dest="d674f76e48834437" destField="obj" source="2bad1d607024dae" sourceField="value"/>
                                                        <link dest="d674f76e48834437" destField="arg1" source="15db6653a6294c18" sourceField="name"/>
                                                        <extensions>
                                                            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                                        </extensions>
                                                    </graph>
                                                    <ogcn:published_input field="obj" name="speaker" ref="15db6653a6294c18"/>
                                                    <ogcn:published_input field="arg1" name="arg1" ref="2bad1d607024dae"/>
                                                    <ogcn:published_output field="value" name="value" ref="353dcf36533c4ef9"/>
                                                    <extensions>
                                                        <oga:meta x="321" y="68">
                                                            <oga:default for="arg1" type="java.lang.String">Initial Consonants_</oga:default>
                                                        </oga:meta>
                                                    </extensions>
                                                </ogcn:macro>
                                                <node id="1e4b8d36" name="Add Initial Consonant Column" type="class:ca.phon.app.opgraph.nodes.table.TableScriptNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="__script"><![CDATA[importClass(Packages.ca.phon.ipa.IPATranscriptBuilder)

function init(inputs, outputs) {

}

function tableOp(context, table) {
	var colIdx = table.columnCount;

	table.setColumnTitle(colIdx, "Initial C");

	for(var row = 0; row < table.rowCount; row++) {
		var rowData = table.getRow(row);
		var ipa = (new IPATranscriptBuilder()).append(table.getValueAt(row, "IPA Actual (Word)")).toIPATranscript();
		ipa = ipa.removePunctuation();

		var initialC = "";
		if(ipa.matches("^\\c.*")) {
			initialC = (new IPATranscriptBuilder()).append(ipa.elementAt(0)).toIPATranscript();
		}

		rowData[colIdx] = initialC;
	}
}
]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="300" y="238"/>
                                                    </extensions>
                                                </node>
                                                <node id="26edcb08" name="Partition Table" type="class:ca.phon.app.opgraph.nodes.table.TableScriptNode">
                                                    <output name="trueTable" type="ca.phon.query.report.datasource.DefaultTableDataSource">Table of rows from input table which match filter</output>
                                                    <output name="falseTable" type="ca.phon.query.report.datasource.DefaultTableDataSource">Table of rows from output table which do not match the filter</output>
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="filters.column.filterType"><![CDATA[Regular expression]]></oga:property>
                                                            <oga:property key="columnName"><![CDATA[Initial C]]></oga:property>
                                                            <oga:property key="__script"><![CDATA[/*
 * Phon - An open source tool for research in phonology.
 * Copyright (C) 2005 - 201, Gregory Hedlund <ghedlund@mun.ca> and Yvan Rose <yrose@mun.ca>
 * Dept of Linguistics, Memorial University <https://phon.ca>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

 /**
  * Partition Table.js
  *
  * Script for use with ca.phon.app.opgraph.nodes.table.TableScriptNode
  *
  * Partition table using a standard query filter and column name.
  */
var PatternFilter = require("lib/PatternFilter").PatternFilter;

var columnParamInfo = {
	"id": "columnName",
	"title": "Column Name",
	"def": "",
	"prompt": "Enter column name"
}

var filters = {
    "column": new PatternFilter("filters.column")
}

function setup_params(params) {
	var columnParam = new StringScriptParam(
		columnParamInfo.id,
		columnParamInfo.title,
		columnParamInfo.def);
	columnParam.setPrompt(columnParamInfo.prompt);
	params.add(columnParam);

	filters.column.param_setup(params);
}

// add custom inputs/outputs here
function init(inputs, outputs) {
	outputs.add("trueTable", "Table of rows from input table which match filter", false, DefaultTableDataSource);
	outputs.add("falseTable", "Table of rows from output table which do not match the filter", false, DefaultTableDataSource);
}

// run operation on table
function tableOp(context, table) {
	// find table column index
	col = table.getColumnIndex(columnName);
	if(col < 0)
		return; // column not found

	// create output tables
	trueTable = new DefaultTableDataSource();
	falseTable = new DefaultTableDataSource();
	for(c = 0; c < table.columnCount; c++) {
	    var colTitle = table.getColumnTitle(c);
	    trueTable.setColumnTitle(c, colTitle);
	    falseTable.setColumnTitle(c, colTitle);
	}

	for(row = 0; row < table.rowCount; row++) {
		rowData = table.getRow(row);
		rowMatches = filterRow(table, row, col);

		if(rowMatches == true) {
			trueTable.addRow(rowData);
		} else {
			falseTable.addRow(rowData);
		}
	}

	context.put("trueTable", trueTable);
	context.put("falseTable", falseTable);
}

function filterRow(table, row, col) {
	var value = table.getValueAt(row, col);
	if(value == null) return false;

	return filters.column.check_filter(value);
}
]]></oga:property>
                                                            <oga:property key="filters.column.filter"><![CDATA[.+]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="520" y="237"/>
                                                    </extensions>
                                                </node>
                                                <node id="157e22dd" type="class:ca.phon.app.opgraph.nodes.table.InventoryNode">
                                                    <extensions>
                                                        <opqry:inventoryoptions>
                                                            <opqry:column caseSensitive="false" column="Initial C" ignoreDiacritics="true"/>
                                                        </opqry:inventoryoptions>
                                                        <oga:settings/>
                                                        <oga:meta x="726" y="238"/>
                                                    </extensions>
                                                </node>
                                                <node id="5142a794" name="Add Frequency Column" type="class:ca.phon.app.opgraph.nodes.table.TableScriptNode">
                                                    <input name="total" optional="false"/>
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	inputs.add("total", "", false, false);
}

function tableOp(context, table) {
	var total = context.get("total");
	var colIdx = table.columnCount;
	table.setColumnTitle(colIdx, "%");

	for(var row = 0; row < table.rowCount; row++) {
		var rowData = table.getRow(row);
		var count = rowData[1];
		var freq = (count / total) * 100.0;

		rowData[2] = freq;
	}
}
]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="684" y="449"/>
                                                    </extensions>
                                                </node>
                                                <node id="397afdf3" type="class:ca.phon.app.opgraph.nodes.table.SortNode">
                                                    <extensions>
                                                        <opqry:sortoptions>
                                                            <opqry:sortBy column="Initial C" order="ascending" type="ipa"/>
                                                        </opqry:sortoptions>
                                                        <oga:settings/>
                                                        <oga:meta x="879" y="238"/>
                                                    </extensions>
                                                </node>
                                                <node id="7235e753" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                    <input name="data" optional="false">Data to print</input>
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="dataTemplate"><![CDATA[$DATA]]></oga:property>
                                                            <oga:property key="showText"><![CDATA[false]]></oga:property>
                                                            <oga:property key="showTable"><![CDATA[true]]></oga:property>
                                                            <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="715" y="75"/>
                                                    </extensions>
                                                </node>
                                                <ogcn:macro id="2ce1efd1b9734758" name="Add to Report Template" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                                    <graph id="3ecb5b94">
                                                        <node id="e2df1b41e4cd4602" name="Set Caption" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                            <input name="data" optional="false">Data to print</input>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="dataTemplate"><![CDATA[
#set($caption = "<h3>Initial Consonants : $DATA</h3>")
]]></oga:property>
                                                                    <oga:property key="showText"><![CDATA[true]]></oga:property>
                                                                    <oga:property key="showTable"><![CDATA[false]]></oga:property>
                                                                    <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="51" y="48">
                                                                    <oga:default for="buffer" type="java.lang.String">Report Template</oga:default>
                                                                    <oga:default for="append" type="java.lang.Boolean">true</oga:default>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <node id="15480cdd4d7c44ef" name="Add to Template" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                            <input name="data" optional="false">Data to print</input>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="dataTemplate"><![CDATA[
#set($tableName = "$DATA")
#if($tables.containsKey($tableName))
#set($table = $tables.get($tableName))
#printTableWithIdAndCaption( $table $tableName $caption [] )
#else
$caption

No Results
#end
]]></oga:property>
                                                                    <oga:property key="showText"><![CDATA[true]]></oga:property>
                                                                    <oga:property key="showTable"><![CDATA[false]]></oga:property>
                                                                    <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="54" y="177">
                                                                    <oga:default for="buffer" type="java.lang.String">Report Template</oga:default>
                                                                    <oga:default for="append" type="java.lang.Boolean">true</oga:default>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <extensions>
                                                            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                                        </extensions>
                                                    </graph>
                                                    <ogcn:published_input field="data" name="speaker" ref="e2df1b41e4cd4602"/>
                                                    <ogcn:published_input field="data" name="bufferName" ref="15480cdd4d7c44ef"/>
                                                    <extensions>
                                                        <oga:meta x="874" y="75"/>
                                                    </extensions>
                                                </ogcn:macro>
                                                <link dest="26edcb08" destField="table" source="1e4b8d36" sourceField="table"/>
                                                <link dest="d0e4e5315d954c27" destField="speaker" source="57fbc98f" sourceField="obj"/>
                                                <link dest="2ce1efd1b9734758" destField="speaker" source="57fbc98f" sourceField="obj"/>
                                                <link dest="7235e753" destField="data" source="397afdf3" sourceField="table"/>
                                                <link dest="2ce1efd1b9734758" destField="bufferName" source="7235e753" sourceField="buffer"/>
                                                <link dest="7235e753" destField="buffer" source="d0e4e5315d954c27" sourceField="value"/>
                                                <link dest="1e4b8d36" destField="table" source="4582b1f9" sourceField="obj"/>
                                                <link dest="5142a794" destField="total" source="9cbcfc54f26c4cfa" sourceField="obj"/>
                                                <link dest="157e22dd" destField="table" source="26edcb08" sourceField="trueTable"/>
                                                <link dest="5142a794" destField="table" source="157e22dd" sourceField="table"/>
                                                <link dest="397afdf3" destField="table" source="5142a794" sourceField="table"/>
                                                <extensions>
                                                    <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                                </extensions>
                                            </graph>
                                            <ogcn:published_input field="obj" name="speaker" ref="57fbc98f"/>
                                            <ogcn:published_input field="obj" name="table" ref="4582b1f9"/>
                                            <ogcn:published_input field="obj" name="result total" ref="9cbcfc54f26c4cfa"/>
                                            <extensions>
                                                <oga:meta x="273" y="29"/>
                                            </extensions>
                                        </ogcn:macro>
                                        <ogcn:macro id="37993d4121c64985" name="Initial Consonants (by Session)" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                            <graph id="15c4bd8b">
                                                <node id="cba87bdb9f4473f" name="speaker" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="15" y="15"/>
                                                    </extensions>
                                                </node>
                                                <node id="1fe296e468a143cc" name="table" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="15" y="308"/>
                                                    </extensions>
                                                </node>
                                                <node id="46f9c492e22b45b5" name="Map" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.util.Map]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="45" y="460"/>
                                                    </extensions>
                                                </node>
                                                <ogcn:macro id="3e38c47bc57c4820" name="Setup Buffer Name" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                                    <graph id="22a2732c">
                                                        <node id="36141faa30144b28" name="StringBuffer#&lt;init&gt;(String)" type="class:ca.gedge.opgraph.nodes.reflect.ConstructorNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.classMember"><![CDATA[<init>(java.lang.String)]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="15" y="15">
                                                                    <oga:default for="arg1" type="java.lang.String"/>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <node id="75b169e16a0b4649" name="Participant" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="15" y="146"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="d02558744eeb4bd9" name="StringBuffer#append(String)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[append(java.lang.String)]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="256" y="15"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="15a1e71b2584c30" name="StringBuffer#toString()" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[toString()]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="507" y="15"/>
                                                            </extensions>
                                                        </node>
                                                        <link dest="15a1e71b2584c30" destField="obj" source="d02558744eeb4bd9" sourceField="value"/>
                                                        <link dest="d02558744eeb4bd9" destField="obj" source="36141faa30144b28" sourceField="value"/>
                                                        <link dest="d02558744eeb4bd9" destField="arg1" source="75b169e16a0b4649" sourceField="name"/>
                                                        <extensions>
                                                            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                                        </extensions>
                                                    </graph>
                                                    <ogcn:published_input field="obj" name="speaker" ref="75b169e16a0b4649"/>
                                                    <ogcn:published_input field="arg1" name="arg1" ref="36141faa30144b28"/>
                                                    <ogcn:published_output field="value" name="value" ref="15a1e71b2584c30"/>
                                                    <extensions>
                                                        <oga:meta x="321" y="68">
                                                            <oga:default for="arg1" type="java.lang.String">Initial Consonants (by Session)_</oga:default>
                                                        </oga:meta>
                                                    </extensions>
                                                </ogcn:macro>
                                                <node id="575dcc9dac31425d" name="Add Initial Consonant Column" type="class:ca.phon.app.opgraph.nodes.table.TableScriptNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="__script"><![CDATA[importClass(Packages.ca.phon.ipa.IPATranscriptBuilder)

function init(inputs, outputs) {

}

function tableOp(context, table) {
	var colIdx = table.columnCount;

	table.setColumnTitle(colIdx, "Initial C");

	for(var row = 0; row < table.rowCount; row++) {
		var rowData = table.getRow(row);
		var ipa = (new IPATranscriptBuilder()).append(table.getValueAt(row, "IPA Actual (Word)")).toIPATranscript();
		ipa = ipa.removePunctuation();

		var initialC = "";
		if(ipa.matches("^\\c.*")) {
			initialC = (new IPATranscriptBuilder()).append(ipa.elementAt(0)).toIPATranscript();
		}

		rowData[colIdx] = initialC;
	}
}
]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="300" y="238"/>
                                                    </extensions>
                                                </node>
                                                <node id="d2d0e4adf72b455b" name="Partition Table" type="class:ca.phon.app.opgraph.nodes.table.TableScriptNode">
                                                    <output name="trueTable" type="ca.phon.query.report.datasource.DefaultTableDataSource">Table of rows from input table which match filter</output>
                                                    <output name="falseTable" type="ca.phon.query.report.datasource.DefaultTableDataSource">Table of rows from output table which do not match the filter</output>
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="filters.column.filterType"><![CDATA[Regular expression]]></oga:property>
                                                            <oga:property key="columnName"><![CDATA[Initial C]]></oga:property>
                                                            <oga:property key="__script"><![CDATA[/*
 * Phon - An open source tool for research in phonology.
 * Copyright (C) 2005 - 201, Gregory Hedlund <ghedlund@mun.ca> and Yvan Rose <yrose@mun.ca>
 * Dept of Linguistics, Memorial University <https://phon.ca>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

 /**
  * Partition Table.js
  *
  * Script for use with ca.phon.app.opgraph.nodes.table.TableScriptNode
  *
  * Partition table using a standard query filter and column name.
  */
var PatternFilter = require("lib/PatternFilter").PatternFilter;

var columnParamInfo = {
	"id": "columnName",
	"title": "Column Name",
	"def": "",
	"prompt": "Enter column name"
}

var filters = {
    "column": new PatternFilter("filters.column")
}

function setup_params(params) {
	var columnParam = new StringScriptParam(
		columnParamInfo.id,
		columnParamInfo.title,
		columnParamInfo.def);
	columnParam.setPrompt(columnParamInfo.prompt);
	params.add(columnParam);

	filters.column.param_setup(params);
}

// add custom inputs/outputs here
function init(inputs, outputs) {
	outputs.add("trueTable", "Table of rows from input table which match filter", false, DefaultTableDataSource);
	outputs.add("falseTable", "Table of rows from output table which do not match the filter", false, DefaultTableDataSource);
}

// run operation on table
function tableOp(context, table) {
	// find table column index
	col = table.getColumnIndex(columnName);
	if(col < 0)
		return; // column not found

	// create output tables
	trueTable = new DefaultTableDataSource();
	falseTable = new DefaultTableDataSource();
	for(c = 0; c < table.columnCount; c++) {
	    var colTitle = table.getColumnTitle(c);
	    trueTable.setColumnTitle(c, colTitle);
	    falseTable.setColumnTitle(c, colTitle);
	}

	for(row = 0; row < table.rowCount; row++) {
		rowData = table.getRow(row);
		rowMatches = filterRow(table, row, col);

		if(rowMatches == true) {
			trueTable.addRow(rowData);
		} else {
			falseTable.addRow(rowData);
		}
	}

	context.put("trueTable", trueTable);
	context.put("falseTable", falseTable);
}

function filterRow(table, row, col) {
	var value = table.getValueAt(row, col);
	if(value == null) return false;

	return filters.column.check_filter(value);
}
]]></oga:property>
                                                            <oga:property key="filters.column.filter"><![CDATA[.+]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="520" y="237"/>
                                                    </extensions>
                                                </node>
                                                <node id="e4b60d5da7634e1c" type="class:ca.phon.app.opgraph.nodes.table.InventoryNode">
                                                    <extensions>
                                                        <opqry:inventoryoptions>
                                                            <opqry:groupBy caseSensitive="false" column="Session" ignoreDiacritics="true"/>
                                                            <opqry:column caseSensitive="false" column="Initial C" ignoreDiacritics="true"/>
                                                        </opqry:inventoryoptions>
                                                        <oga:settings/>
                                                        <oga:meta x="726" y="238"/>
                                                    </extensions>
                                                </node>
                                                <node id="41dceaee2c4a46ae" name="Add Frequency Columns" type="class:ca.phon.app.opgraph.nodes.table.TableScriptNode">
                                                    <input name="tableMap" optional="false"/>
                                                    <output name="freqTable" type="ca.phon.query.report.datasource.DefaultTableDataSource"/>
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	inputs.add("tableMap", "", false, false);

	outputs.add("freqTable", "", false, Packages.ca.phon.query.report.datasource.DefaultTableDataSource);
}

function tableOp(context, table) {
	var tableMap = context.get("tableMap");
	var freqTable = new Packages.ca.phon.query.report.datasource.DefaultTableDataSource();

	// setup columns
	freqTable.setColumnTitle(0, table.getColumnTitle(0));

	var colIdx = 1;
	for(var col = 1; col < table.columnCount; col++) {
		freqTable.setColumnTitle(colIdx++, table.getColumnTitle(col));
		freqTable.setColumnTitle(colIdx++, "% " + table.getColumnTitle(col));
	}

	for(var row = 0; row < table.rowCount; row++) {
		var rowData = [];
		var tableData = table.getRow(row);

		rowData[0] = tableData[0];
		colIdx = 1;

		for(var col = 1; col < table.columnCount; col++) {
			var total = tableMap.get(table.getColumnTitle(col)).rowCount;
			var count = tableData[col];
			var freq = (count / total) * 100.0;

			rowData[colIdx++] = new java.lang.Integer(count);
			rowData[colIdx++] = freq;
		}

		freqTable.addRow(rowData);
	}

	context.put("freqTable", freqTable);
}
]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="684" y="449"/>
                                                    </extensions>
                                                </node>
                                                <node id="da71e3439700466e" type="class:ca.phon.app.opgraph.nodes.table.SortNode">
                                                    <extensions>
                                                        <opqry:sortoptions>
                                                            <opqry:sortBy column="Initial C" order="ascending" type="ipa"/>
                                                        </opqry:sortoptions>
                                                        <oga:settings/>
                                                        <oga:meta x="879" y="238"/>
                                                    </extensions>
                                                </node>
                                                <node id="6965f08f0a4b4299" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                    <input name="data" optional="false">Data to print</input>
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="dataTemplate"><![CDATA[$DATA]]></oga:property>
                                                            <oga:property key="showText"><![CDATA[false]]></oga:property>
                                                            <oga:property key="showTable"><![CDATA[true]]></oga:property>
                                                            <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="715" y="75"/>
                                                    </extensions>
                                                </node>
                                                <ogcn:macro id="2757403bb10d4c6a" name="Add to Report Template" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                                    <graph id="65274f19">
                                                        <node id="23fa7ff5b4ea43b2" name="Set Caption" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                            <input name="data" optional="false">Data to print</input>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="dataTemplate"><![CDATA[
#set($caption = "<h3>Initial Consonants (by Session) : $DATA</h3>")
]]></oga:property>
                                                                    <oga:property key="showText"><![CDATA[true]]></oga:property>
                                                                    <oga:property key="showTable"><![CDATA[false]]></oga:property>
                                                                    <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="51" y="48">
                                                                    <oga:default for="buffer" type="java.lang.String">Report Template</oga:default>
                                                                    <oga:default for="append" type="java.lang.Boolean">true</oga:default>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <node id="d59a8cafd1654e11" name="Add to Template" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                            <input name="data" optional="false">Data to print</input>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="dataTemplate"><![CDATA[
#set($tableName = "$DATA")
#if($tables.containsKey($tableName))
#set($table = $tables.get($tableName))
#printTableWithIdAndCaption( $table $tableName $caption [] )
#else
$caption

No Results
#end
]]></oga:property>
                                                                    <oga:property key="showText"><![CDATA[true]]></oga:property>
                                                                    <oga:property key="showTable"><![CDATA[false]]></oga:property>
                                                                    <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="54" y="177">
                                                                    <oga:default for="buffer" type="java.lang.String">Report Template</oga:default>
                                                                    <oga:default for="append" type="java.lang.Boolean">true</oga:default>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <extensions>
                                                            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                                        </extensions>
                                                    </graph>
                                                    <ogcn:published_input field="data" name="speaker" ref="23fa7ff5b4ea43b2"/>
                                                    <ogcn:published_input field="data" name="bufferName" ref="d59a8cafd1654e11"/>
                                                    <extensions>
                                                        <oga:meta x="874" y="75"/>
                                                    </extensions>
                                                </ogcn:macro>
                                                <link dest="d2d0e4adf72b455b" destField="table" source="575dcc9dac31425d" sourceField="table"/>
                                                <link dest="3e38c47bc57c4820" destField="speaker" source="cba87bdb9f4473f" sourceField="obj"/>
                                                <link dest="2757403bb10d4c6a" destField="speaker" source="cba87bdb9f4473f" sourceField="obj"/>
                                                <link dest="6965f08f0a4b4299" destField="data" source="da71e3439700466e" sourceField="table"/>
                                                <link dest="2757403bb10d4c6a" destField="bufferName" source="6965f08f0a4b4299" sourceField="buffer"/>
                                                <link dest="6965f08f0a4b4299" destField="buffer" source="3e38c47bc57c4820" sourceField="value"/>
                                                <link dest="575dcc9dac31425d" destField="table" source="1fe296e468a143cc" sourceField="obj"/>
                                                <link dest="e4b60d5da7634e1c" destField="table" source="d2d0e4adf72b455b" sourceField="trueTable"/>
                                                <link dest="41dceaee2c4a46ae" destField="table" source="e4b60d5da7634e1c" sourceField="table"/>
                                                <link dest="da71e3439700466e" destField="table" source="41dceaee2c4a46ae" sourceField="freqTable"/>
                                                <link dest="41dceaee2c4a46ae" destField="tableMap" source="46f9c492e22b45b5" sourceField="obj"/>
                                                <extensions>
                                                    <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                                </extensions>
                                            </graph>
                                            <ogcn:published_input field="obj" name="speaker" ref="cba87bdb9f4473f"/>
                                            <ogcn:published_input field="obj" name="table" ref="1fe296e468a143cc"/>
                                            <ogcn:published_input field="obj" name="tableMap" ref="46f9c492e22b45b5"/>
                                            <extensions>
                                                <oga:meta x="269" y="156"/>
                                            </extensions>
                                        </ogcn:macro>
                                        <link dest="37993d4121c64985" destField="tableMap" source="1bff2726" sourceField="obj"/>
                                        <link dest="37993d4121c64985" destField="speaker" source="1c7877d" sourceField="obj"/>
                                        <link dest="3fd5be49" destField="table" source="4ceebc1" sourceField="obj"/>
                                        <link dest="3fd5be49" destField="result total" source="2c5f289" sourceField="obj"/>
                                        <link dest="3fd5be49" destField="speaker" source="1c7877d" sourceField="obj"/>
                                        <link dest="37993d4121c64985" destField="table" source="4ceebc1" sourceField="obj"/>
                                    </graph>
                                    <ogcn:published_input field="obj" name="tableMap" ref="1bff2726"/>
                                    <ogcn:published_input field="obj" name="speaker" ref="1c7877d"/>
                                    <ogcn:published_input field="obj" name="table" ref="4ceebc1"/>
                                    <ogcn:published_input field="obj" name="result total" ref="2c5f289"/>
                                    <extensions>
                                        <oga:meta x="262" y="266"/>
                                    </extensions>
                                </ogcn:macro>
                                <ogcn:macro id="9bee85a827324705" name="Final Consonants" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                    <graph id="22855627">
                                        <node id="8b7626cd0a4a445b" name="result total" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.lang.Integer]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="15" y="15"/>
                                            </extensions>
                                        </node>
                                        <node id="dcaa3f64052e4667" name="speaker" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="15" y="146"/>
                                            </extensions>
                                        </node>
                                        <node id="be648f920a40a0" name="table" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="15" y="439"/>
                                            </extensions>
                                        </node>
                                        <node id="1e990fb5c17c4f92" name="tableMap" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.util.Map]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="15" y="570"/>
                                            </extensions>
                                        </node>
                                        <ogcn:macro id="47ab9f734c8d4a3b" name="Final Consonants" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                            <graph id="1b81a4f7">
                                                <node id="80e97d2a3c2241e1" name="speaker" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="15" y="15"/>
                                                    </extensions>
                                                </node>
                                                <node id="390d058f9a044b28" name="table" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="15" y="308"/>
                                                    </extensions>
                                                </node>
                                                <node id="d66b03aeddfb4c5c" name="Result Total" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.lang.Integer]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="45" y="443"/>
                                                    </extensions>
                                                </node>
                                                <ogcn:macro id="9652772da905453d" name="Setup Buffer Name" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                                    <graph id="18ccd8d6">
                                                        <node id="6920880660024a22" name="StringBuffer#&lt;init&gt;(String)" type="class:ca.gedge.opgraph.nodes.reflect.ConstructorNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.classMember"><![CDATA[<init>(java.lang.String)]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="15" y="15">
                                                                    <oga:default for="arg1" type="java.lang.String"/>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <node id="76b46236243a45a9" name="Participant" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="15" y="146"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="bb746653c425459c" name="StringBuffer#append(String)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[append(java.lang.String)]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="256" y="15"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="4da5c016f6f0427a" name="StringBuffer#toString()" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[toString()]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="507" y="15"/>
                                                            </extensions>
                                                        </node>
                                                        <link dest="4da5c016f6f0427a" destField="obj" source="bb746653c425459c" sourceField="value"/>
                                                        <link dest="bb746653c425459c" destField="obj" source="6920880660024a22" sourceField="value"/>
                                                        <link dest="bb746653c425459c" destField="arg1" source="76b46236243a45a9" sourceField="name"/>
                                                        <extensions>
                                                            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                                        </extensions>
                                                    </graph>
                                                    <ogcn:published_input field="obj" name="speaker" ref="76b46236243a45a9"/>
                                                    <ogcn:published_input field="arg1" name="arg1" ref="6920880660024a22"/>
                                                    <ogcn:published_output field="value" name="value" ref="4da5c016f6f0427a"/>
                                                    <extensions>
                                                        <oga:meta x="322" y="71">
                                                            <oga:default for="arg1" type="java.lang.String">Final Consonants_</oga:default>
                                                        </oga:meta>
                                                    </extensions>
                                                </ogcn:macro>
                                                <node id="83392f37c32b4f47" name="Add Final Consonant Column" type="class:ca.phon.app.opgraph.nodes.table.TableScriptNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="__script"><![CDATA[importClass(Packages.ca.phon.ipa.IPATranscriptBuilder)

function init(inputs, outputs) {

}

function tableOp(context, table) {
	var colIdx = table.columnCount;

	table.setColumnTitle(colIdx, "Final C");

	for(var row = 0; row < table.rowCount; row++) {
		var rowData = table.getRow(row);
		var ipa = (new IPATranscriptBuilder()).append(table.getValueAt(row, "IPA Actual (Word)")).toIPATranscript();
		ipa = ipa.removePunctuation();

		var finalC = "";
		if(ipa.matches(".*\\c$")) {
			finalC = (new IPATranscriptBuilder()).append(ipa.elementAt(ipa.length()-1)).toIPATranscript();
		}

		rowData[colIdx] = finalC;
	}
}
]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="300" y="238"/>
                                                    </extensions>
                                                </node>
                                                <node id="c8d9bf6512514970" name="Partition Table" type="class:ca.phon.app.opgraph.nodes.table.TableScriptNode">
                                                    <output name="trueTable" type="ca.phon.query.report.datasource.DefaultTableDataSource">Table of rows from input table which match filter</output>
                                                    <output name="falseTable" type="ca.phon.query.report.datasource.DefaultTableDataSource">Table of rows from output table which do not match the filter</output>
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="filters.column.exactMatch"><![CDATA[true]]></oga:property>
                                                            <oga:property key="filters.column.filterType"><![CDATA[Regular expression]]></oga:property>
                                                            <oga:property key="columnName"><![CDATA[Final C]]></oga:property>
                                                            <oga:property key="__script"><![CDATA[/*
 * Phon - An open source tool for research in phonology.
 * Copyright (C) 2005 - 201, Gregory Hedlund <ghedlund@mun.ca> and Yvan Rose <yrose@mun.ca>
 * Dept of Linguistics, Memorial University <https://phon.ca>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

 /**
  * Partition Table.js
  *
  * Script for use with ca.phon.app.opgraph.nodes.table.TableScriptNode
  *
  * Partition table using a standard query filter and column name.
  */
var PatternFilter = require("lib/PatternFilter").PatternFilter;

var columnParamInfo = {
	"id": "columnName",
	"title": "Column Name",
	"def": "",
	"prompt": "Enter column name"
}

var filters = {
    "column": new PatternFilter("filters.column")
}

function setup_params(params) {
	var columnParam = new StringScriptParam(
		columnParamInfo.id,
		columnParamInfo.title,
		columnParamInfo.def);
	columnParam.setPrompt(columnParamInfo.prompt);
	params.add(columnParam);

	filters.column.param_setup(params);
}

// add custom inputs/outputs here
function init(inputs, outputs) {
	outputs.add("trueTable", "Table of rows from input table which match filter", false, DefaultTableDataSource);
	outputs.add("falseTable", "Table of rows from output table which do not match the filter", false, DefaultTableDataSource);
}

// run operation on table
function tableOp(context, table) {
	// find table column index
	col = table.getColumnIndex(columnName);
	if(col < 0)
		return; // column not found

	// create output tables
	trueTable = new DefaultTableDataSource();
	falseTable = new DefaultTableDataSource();
	for(c = 0; c < table.columnCount; c++) {
	    var colTitle = table.getColumnTitle(c);
	    trueTable.setColumnTitle(c, colTitle);
	    falseTable.setColumnTitle(c, colTitle);
	}

	for(row = 0; row < table.rowCount; row++) {
		rowData = table.getRow(row);
		rowMatches = filterRow(table, row, col);

		if(rowMatches == true) {
			trueTable.addRow(rowData);
		} else {
			falseTable.addRow(rowData);
		}
	}

	context.put("trueTable", trueTable);
	context.put("falseTable", falseTable);
}

function filterRow(table, row, col) {
	var value = table.getValueAt(row, col);
	if(value == null) return false;

	return filters.column.check_filter(value);
}
]]></oga:property>
                                                            <oga:property key="filters.column.allowOverlap"><![CDATA[false]]></oga:property>
                                                            <oga:property key="filters.column.caseSensitive"><![CDATA[false]]></oga:property>
                                                            <oga:property key="filters.column.filter"><![CDATA[.+]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="519" y="234"/>
                                                    </extensions>
                                                </node>
                                                <node id="19c21fe28f584032" type="class:ca.phon.app.opgraph.nodes.table.InventoryNode">
                                                    <extensions>
                                                        <opqry:inventoryoptions>
                                                            <opqry:column caseSensitive="false" column="Final C" ignoreDiacritics="true"/>
                                                        </opqry:inventoryoptions>
                                                        <oga:settings/>
                                                        <oga:meta x="726" y="238"/>
                                                    </extensions>
                                                </node>
                                                <node id="140e94fe8d404799" name="Add Frequency Column" type="class:ca.phon.app.opgraph.nodes.table.TableScriptNode">
                                                    <input name="total" optional="false"/>
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	inputs.add("total", "", false, false);
}

function tableOp(context, table) {
	var total = context.get("total");
	var colIdx = table.columnCount;
	table.setColumnTitle(colIdx, "%");

	for(var row = 0; row < table.rowCount; row++) {
		var rowData = table.getRow(row);
		var count = rowData[1];
		var freq = (count / total) * 100.0;

		rowData[2] = freq;
	}
}
]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="684" y="449"/>
                                                    </extensions>
                                                </node>
                                                <node id="af085cd0ea414e90" type="class:ca.phon.app.opgraph.nodes.table.SortNode">
                                                    <extensions>
                                                        <opqry:sortoptions>
                                                            <opqry:sortBy column="Final C" order="ascending" type="ipa"/>
                                                        </opqry:sortoptions>
                                                        <oga:settings/>
                                                        <oga:meta x="879" y="238"/>
                                                    </extensions>
                                                </node>
                                                <node id="941aba68558e4eda" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                    <input name="data" optional="false">Data to print</input>
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="dataTemplate"><![CDATA[$DATA]]></oga:property>
                                                            <oga:property key="showText"><![CDATA[false]]></oga:property>
                                                            <oga:property key="showTable"><![CDATA[true]]></oga:property>
                                                            <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="715" y="75"/>
                                                    </extensions>
                                                </node>
                                                <ogcn:macro id="967e25fed06a45d5" name="Add to Report Template" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                                    <graph id="40bd21a5">
                                                        <node id="32755b70291d4792" name="Set Caption" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                            <input name="data" optional="false">Data to print</input>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="dataTemplate"><![CDATA[
#set($caption = "<h3>Final Consonants : $DATA</h3>")
]]></oga:property>
                                                                    <oga:property key="showText"><![CDATA[true]]></oga:property>
                                                                    <oga:property key="showTable"><![CDATA[false]]></oga:property>
                                                                    <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="51" y="48">
                                                                    <oga:default for="buffer" type="java.lang.String">Report Template</oga:default>
                                                                    <oga:default for="append" type="java.lang.Boolean">true</oga:default>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <node id="79475fce80924888" name="Add to Template" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                            <input name="data" optional="false">Data to print</input>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="dataTemplate"><![CDATA[
#set($tableName = "$DATA")
#if($tables.containsKey($tableName))
#set($table = $tables.get($tableName))
#printTableWithIdAndCaption( $table $tableName $caption [] )
#else
$caption

No Results
#end
]]></oga:property>
                                                                    <oga:property key="showText"><![CDATA[true]]></oga:property>
                                                                    <oga:property key="showTable"><![CDATA[false]]></oga:property>
                                                                    <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="54" y="177">
                                                                    <oga:default for="buffer" type="java.lang.String">Report Template</oga:default>
                                                                    <oga:default for="append" type="java.lang.Boolean">true</oga:default>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <extensions>
                                                            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                                        </extensions>
                                                    </graph>
                                                    <ogcn:published_input field="data" name="speaker" ref="32755b70291d4792"/>
                                                    <ogcn:published_input field="data" name="bufferName" ref="79475fce80924888"/>
                                                    <extensions>
                                                        <oga:meta x="874" y="75"/>
                                                    </extensions>
                                                </ogcn:macro>
                                                <link dest="9652772da905453d" destField="speaker" source="80e97d2a3c2241e1" sourceField="obj"/>
                                                <link dest="967e25fed06a45d5" destField="speaker" source="80e97d2a3c2241e1" sourceField="obj"/>
                                                <link dest="941aba68558e4eda" destField="data" source="af085cd0ea414e90" sourceField="table"/>
                                                <link dest="967e25fed06a45d5" destField="bufferName" source="941aba68558e4eda" sourceField="buffer"/>
                                                <link dest="941aba68558e4eda" destField="buffer" source="9652772da905453d" sourceField="value"/>
                                                <link dest="83392f37c32b4f47" destField="table" source="390d058f9a044b28" sourceField="obj"/>
                                                <link dest="140e94fe8d404799" destField="total" source="d66b03aeddfb4c5c" sourceField="obj"/>
                                                <link dest="140e94fe8d404799" destField="table" source="19c21fe28f584032" sourceField="table"/>
                                                <link dest="af085cd0ea414e90" destField="table" source="140e94fe8d404799" sourceField="table"/>
                                                <link dest="c8d9bf6512514970" destField="table" source="83392f37c32b4f47" sourceField="table"/>
                                                <link dest="19c21fe28f584032" destField="table" source="c8d9bf6512514970" sourceField="trueTable"/>
                                                <extensions>
                                                    <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                                </extensions>
                                            </graph>
                                            <ogcn:published_input field="obj" name="speaker" ref="80e97d2a3c2241e1"/>
                                            <ogcn:published_input field="obj" name="table" ref="390d058f9a044b28"/>
                                            <ogcn:published_input field="obj" name="result total" ref="d66b03aeddfb4c5c"/>
                                            <extensions>
                                                <oga:meta x="236" y="42"/>
                                            </extensions>
                                        </ogcn:macro>
                                        <ogcn:macro id="a2bb4201f25d43e2" name="Final Consonants (by Session)" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                            <graph id="1f173d8e">
                                                <node id="16d6d864e68f4401" name="speaker" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="15" y="15"/>
                                                    </extensions>
                                                </node>
                                                <node id="36f52067ce1f4419" name="table" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="15" y="308"/>
                                                    </extensions>
                                                </node>
                                                <node id="22cef0b692324782" name="Map" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.util.Map]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="45" y="460"/>
                                                    </extensions>
                                                </node>
                                                <ogcn:macro id="f95553da65fe4df7" name="Setup Buffer Name" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                                    <graph id="60523a9b">
                                                        <node id="2649c5d0d2574530" name="StringBuffer#&lt;init&gt;(String)" type="class:ca.gedge.opgraph.nodes.reflect.ConstructorNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.classMember"><![CDATA[<init>(java.lang.String)]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="15" y="15">
                                                                    <oga:default for="arg1" type="java.lang.String"/>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <node id="45d523a15fdf4a20" name="Participant" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="15" y="146"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="8898987594734735" name="StringBuffer#append(String)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[append(java.lang.String)]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="256" y="15"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="f3f0737d626d42b2" name="StringBuffer#toString()" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[toString()]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="507" y="15"/>
                                                            </extensions>
                                                        </node>
                                                        <link dest="f3f0737d626d42b2" destField="obj" source="8898987594734735" sourceField="value"/>
                                                        <link dest="8898987594734735" destField="obj" source="2649c5d0d2574530" sourceField="value"/>
                                                        <link dest="8898987594734735" destField="arg1" source="45d523a15fdf4a20" sourceField="name"/>
                                                        <extensions>
                                                            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                                        </extensions>
                                                    </graph>
                                                    <ogcn:published_input field="obj" name="speaker" ref="45d523a15fdf4a20"/>
                                                    <ogcn:published_input field="arg1" name="arg1" ref="2649c5d0d2574530"/>
                                                    <ogcn:published_output field="value" name="value" ref="f3f0737d626d42b2"/>
                                                    <extensions>
                                                        <oga:meta x="321" y="68">
                                                            <oga:default for="arg1" type="java.lang.String">Final Consonants (by Session)_</oga:default>
                                                        </oga:meta>
                                                    </extensions>
                                                </ogcn:macro>
                                                <node id="a2fc327ba656458f" name="Add Final Consonant Column" type="class:ca.phon.app.opgraph.nodes.table.TableScriptNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="__script"><![CDATA[importClass(Packages.ca.phon.ipa.IPATranscriptBuilder)

function init(inputs, outputs) {

}

function tableOp(context, table) {
	var colIdx = table.columnCount;

	table.setColumnTitle(colIdx, "Final C");

	for(var row = 0; row < table.rowCount; row++) {
		var rowData = table.getRow(row);
		var ipa = (new IPATranscriptBuilder()).append(table.getValueAt(row, "IPA Actual (Word)")).toIPATranscript();
		ipa = ipa.removePunctuation();

		var finalC = "";
		if(ipa.matches(".*\\c$")) {
			finalC = (new IPATranscriptBuilder()).append(ipa.elementAt(ipa.length()-1)).toIPATranscript();
		}

		rowData[colIdx] = finalC;
	}
}
]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="300" y="238"/>
                                                    </extensions>
                                                </node>
                                                <node id="eb8416e76b304213" name="Partition Table" type="class:ca.phon.app.opgraph.nodes.table.TableScriptNode">
                                                    <output name="trueTable" type="ca.phon.query.report.datasource.DefaultTableDataSource">Table of rows from input table which match filter</output>
                                                    <output name="falseTable" type="ca.phon.query.report.datasource.DefaultTableDataSource">Table of rows from output table which do not match the filter</output>
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="filters.column.exactMatch"><![CDATA[true]]></oga:property>
                                                            <oga:property key="filters.column.filterType"><![CDATA[Regular expression]]></oga:property>
                                                            <oga:property key="columnName"><![CDATA[Final C]]></oga:property>
                                                            <oga:property key="__script"><![CDATA[/*
 * Phon - An open source tool for research in phonology.
 * Copyright (C) 2005 - 201, Gregory Hedlund <ghedlund@mun.ca> and Yvan Rose <yrose@mun.ca>
 * Dept of Linguistics, Memorial University <https://phon.ca>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

 /**
  * Partition Table.js
  *
  * Script for use with ca.phon.app.opgraph.nodes.table.TableScriptNode
  *
  * Partition table using a standard query filter and column name.
  */
var PatternFilter = require("lib/PatternFilter").PatternFilter;

var columnParamInfo = {
	"id": "columnName",
	"title": "Column Name",
	"def": "",
	"prompt": "Enter column name"
}

var filters = {
    "column": new PatternFilter("filters.column")
}

function setup_params(params) {
	var columnParam = new StringScriptParam(
		columnParamInfo.id,
		columnParamInfo.title,
		columnParamInfo.def);
	columnParam.setPrompt(columnParamInfo.prompt);
	params.add(columnParam);

	filters.column.param_setup(params);
}

// add custom inputs/outputs here
function init(inputs, outputs) {
	outputs.add("trueTable", "Table of rows from input table which match filter", false, DefaultTableDataSource);
	outputs.add("falseTable", "Table of rows from output table which do not match the filter", false, DefaultTableDataSource);
}

// run operation on table
function tableOp(context, table) {
	// find table column index
	col = table.getColumnIndex(columnName);
	if(col < 0)
		return; // column not found

	// create output tables
	trueTable = new DefaultTableDataSource();
	falseTable = new DefaultTableDataSource();
	for(c = 0; c < table.columnCount; c++) {
	    var colTitle = table.getColumnTitle(c);
	    trueTable.setColumnTitle(c, colTitle);
	    falseTable.setColumnTitle(c, colTitle);
	}

	for(row = 0; row < table.rowCount; row++) {
		rowData = table.getRow(row);
		rowMatches = filterRow(table, row, col);

		if(rowMatches == true) {
			trueTable.addRow(rowData);
		} else {
			falseTable.addRow(rowData);
		}
	}

	context.put("trueTable", trueTable);
	context.put("falseTable", falseTable);
}

function filterRow(table, row, col) {
	var value = table.getValueAt(row, col);
	if(value == null) return false;

	return filters.column.check_filter(value);
}
]]></oga:property>
                                                            <oga:property key="filters.column.allowOverlap"><![CDATA[false]]></oga:property>
                                                            <oga:property key="filters.column.caseSensitive"><![CDATA[false]]></oga:property>
                                                            <oga:property key="filters.column.filter"><![CDATA[.+]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="519" y="242"/>
                                                    </extensions>
                                                </node>
                                                <node id="93d898e7d3974832" type="class:ca.phon.app.opgraph.nodes.table.InventoryNode">
                                                    <extensions>
                                                        <opqry:inventoryoptions>
                                                            <opqry:groupBy caseSensitive="false" column="Session" ignoreDiacritics="true"/>
                                                            <opqry:column caseSensitive="false" column="Final C" ignoreDiacritics="true"/>
                                                        </opqry:inventoryoptions>
                                                        <oga:settings/>
                                                        <oga:meta x="726" y="238"/>
                                                    </extensions>
                                                </node>
                                                <node id="2f70db5025ff4e1c" name="Add Frequency Columns" type="class:ca.phon.app.opgraph.nodes.table.TableScriptNode">
                                                    <input name="tableMap" optional="false"/>
                                                    <output name="freqTable" type="ca.phon.query.report.datasource.DefaultTableDataSource"/>
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	inputs.add("tableMap", "", false, false);

	outputs.add("freqTable", "", false, Packages.ca.phon.query.report.datasource.DefaultTableDataSource);
}

function tableOp(context, table) {
	var tableMap = context.get("tableMap");
	var freqTable = new Packages.ca.phon.query.report.datasource.DefaultTableDataSource();

	// setup columns
	freqTable.setColumnTitle(0, table.getColumnTitle(0));

	var colIdx = 1;
	for(var col = 1; col < table.columnCount; col++) {
		freqTable.setColumnTitle(colIdx++, table.getColumnTitle(col));
		freqTable.setColumnTitle(colIdx++, "% " + table.getColumnTitle(col));
	}

	for(var row = 0; row < table.rowCount; row++) {
		var rowData = [];
		var tableData = table.getRow(row);

		rowData[0] = tableData[0];
		colIdx = 1;

		for(var col = 1; col < table.columnCount; col++) {
			var total = tableMap.get(table.getColumnTitle(col)).rowCount;
			var count = tableData[col];
			var freq = (count / total) * 100.0;

			rowData[colIdx++] = new java.lang.Integer(count);
			rowData[colIdx++] = freq;
		}

		freqTable.addRow(rowData);
	}

	context.put("freqTable", freqTable);
}
]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="684" y="449"/>
                                                    </extensions>
                                                </node>
                                                <node id="a41037cab06c49d9" type="class:ca.phon.app.opgraph.nodes.table.SortNode">
                                                    <extensions>
                                                        <opqry:sortoptions>
                                                            <opqry:sortBy column="Final C" order="ascending" type="ipa"/>
                                                        </opqry:sortoptions>
                                                        <oga:settings/>
                                                        <oga:meta x="879" y="238"/>
                                                    </extensions>
                                                </node>
                                                <node id="21dcf03bfb1149fa" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                    <input name="data" optional="false">Data to print</input>
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="dataTemplate"><![CDATA[$DATA]]></oga:property>
                                                            <oga:property key="showText"><![CDATA[false]]></oga:property>
                                                            <oga:property key="showTable"><![CDATA[true]]></oga:property>
                                                            <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="715" y="75"/>
                                                    </extensions>
                                                </node>
                                                <ogcn:macro id="84bcd69765fa42b7" name="Add to Report Template" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                                    <graph id="15d7399a">
                                                        <node id="5cf269c3c60d42fe" name="Set Caption" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                            <input name="data" optional="false">Data to print</input>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="dataTemplate"><![CDATA[
#set($caption = "<h3>Final Consonants (by Session) : $DATA</h3>")
]]></oga:property>
                                                                    <oga:property key="showText"><![CDATA[true]]></oga:property>
                                                                    <oga:property key="showTable"><![CDATA[false]]></oga:property>
                                                                    <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="51" y="48">
                                                                    <oga:default for="buffer" type="java.lang.String">Report Template</oga:default>
                                                                    <oga:default for="append" type="java.lang.Boolean">true</oga:default>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <node id="5eafac57c0664949" name="Add to Template" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                            <input name="data" optional="false">Data to print</input>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="dataTemplate"><![CDATA[
#set($tableName = "$DATA")
#if($tables.containsKey($tableName))
#set($table = $tables.get($tableName))
#printTableWithIdAndCaption( $table $tableName $caption [] )
#else
$caption

No Results
#end
]]></oga:property>
                                                                    <oga:property key="showText"><![CDATA[true]]></oga:property>
                                                                    <oga:property key="showTable"><![CDATA[false]]></oga:property>
                                                                    <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="54" y="177">
                                                                    <oga:default for="buffer" type="java.lang.String">Report Template</oga:default>
                                                                    <oga:default for="append" type="java.lang.Boolean">true</oga:default>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <extensions>
                                                            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                                        </extensions>
                                                    </graph>
                                                    <ogcn:published_input field="data" name="speaker" ref="5cf269c3c60d42fe"/>
                                                    <ogcn:published_input field="data" name="bufferName" ref="5eafac57c0664949"/>
                                                    <extensions>
                                                        <oga:meta x="874" y="75"/>
                                                    </extensions>
                                                </ogcn:macro>
                                                <link dest="f95553da65fe4df7" destField="speaker" source="16d6d864e68f4401" sourceField="obj"/>
                                                <link dest="84bcd69765fa42b7" destField="speaker" source="16d6d864e68f4401" sourceField="obj"/>
                                                <link dest="21dcf03bfb1149fa" destField="data" source="a41037cab06c49d9" sourceField="table"/>
                                                <link dest="84bcd69765fa42b7" destField="bufferName" source="21dcf03bfb1149fa" sourceField="buffer"/>
                                                <link dest="21dcf03bfb1149fa" destField="buffer" source="f95553da65fe4df7" sourceField="value"/>
                                                <link dest="a2fc327ba656458f" destField="table" source="36f52067ce1f4419" sourceField="obj"/>
                                                <link dest="2f70db5025ff4e1c" destField="table" source="93d898e7d3974832" sourceField="table"/>
                                                <link dest="a41037cab06c49d9" destField="table" source="2f70db5025ff4e1c" sourceField="freqTable"/>
                                                <link dest="2f70db5025ff4e1c" destField="tableMap" source="22cef0b692324782" sourceField="obj"/>
                                                <link dest="eb8416e76b304213" destField="table" source="a2fc327ba656458f" sourceField="table"/>
                                                <link dest="93d898e7d3974832" destField="table" source="eb8416e76b304213" sourceField="trueTable"/>
                                                <extensions>
                                                    <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                                </extensions>
                                            </graph>
                                            <ogcn:published_input field="obj" name="speaker" ref="16d6d864e68f4401"/>
                                            <ogcn:published_input field="obj" name="table" ref="36f52067ce1f4419"/>
                                            <ogcn:published_input field="obj" name="tableMap" ref="22cef0b692324782"/>
                                            <extensions>
                                                <oga:meta x="245" y="184"/>
                                            </extensions>
                                        </ogcn:macro>
                                        <link dest="a2bb4201f25d43e2" destField="tableMap" source="1e990fb5c17c4f92" sourceField="obj"/>
                                        <link dest="a2bb4201f25d43e2" destField="speaker" source="dcaa3f64052e4667" sourceField="obj"/>
                                        <link dest="47ab9f734c8d4a3b" destField="table" source="be648f920a40a0" sourceField="obj"/>
                                        <link dest="47ab9f734c8d4a3b" destField="result total" source="8b7626cd0a4a445b" sourceField="obj"/>
                                        <link dest="47ab9f734c8d4a3b" destField="speaker" source="dcaa3f64052e4667" sourceField="obj"/>
                                        <link dest="a2bb4201f25d43e2" destField="table" source="be648f920a40a0" sourceField="obj"/>
                                        <extensions>
                                            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                        </extensions>
                                    </graph>
                                    <ogcn:published_input field="obj" name="tableMap" ref="1e990fb5c17c4f92"/>
                                    <ogcn:published_input field="obj" name="speaker" ref="dcaa3f64052e4667"/>
                                    <ogcn:published_input field="obj" name="table" ref="be648f920a40a0"/>
                                    <ogcn:published_input field="obj" name="result total" ref="8b7626cd0a4a445b"/>
                                    <extensions>
                                        <oga:meta x="262" y="427"/>
                                    </extensions>
                                </ogcn:macro>
                                <ogcn:macro id="9dee81f2bd624468" name="Vowels" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                    <graph id="5e661aa9">
                                        <node id="4286091421414cd3" name="table" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="15" y="15"/>
                                            </extensions>
                                        </node>
                                        <node id="f69bce99bd234bf6" name="Participant" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="15" y="160"/>
                                            </extensions>
                                        </node>
                                        <node id="6ac5430e4a2a4274" name="Create Vowel Table" type="class:ca.phon.app.opgraph.nodes.table.TableScriptNode">
                                            <output name="vowelTable" type="ca.phon.query.report.datasource.DefaultTableDataSource"/>
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="__script"><![CDATA[importClass(Packages.ca.phon.ipa.IPATranscriptBuilder)

function init(inputs, outputs) {
	outputs.add("vowelTable", "", false, Packages.ca.phon.query.report.datasource.DefaultTableDataSource);
}

function tableOp(context, table) {
	var vowelTable = new Packages.ca.phon.query.report.datasource.DefaultTableDataSource();

	// setup columns
	vowelTable.setColumnTitle(0, "Session");
	vowelTable.setColumnTitle(1, "Record");
	vowelTable.setColumnTitle(2, "Vowel");
	vowelTable.setColumnTitle(3, "Actual Syllabification (Word)");

	for(var row = 0; row < table.rowCount; row++) {
		var tableData = table.getRow(row);

		var actualSyllabification = table.getValueAt(row, "Actual Syllabification (Word)");
		var ipa = (new IPATranscriptBuilder()).append(actualSyllabification).toIPATranscript();
		var sylls = ipa.syllables();

		for(var syllIdx = 0; syllIdx < sylls.size(); syllIdx++) {
			var syll = sylls.get(syllIdx);
			var phonexPattern = Packages.ca.phon.phonex.PhonexPattern.compile(".:N+");
			var matcher = phonexPattern.matcher(syll);
			if(matcher.find()) {
				var nucleus = (new IPATranscriptBuilder()).append(matcher.group()).toIPATranscript();

				var rowData = [];
				rowData[0] = table.getValueAt(row, 0);
				rowData[1] = table.getValueAt(row, "Record #");
				rowData[2] = nucleus;
				rowData[3] = actualSyllabification;
				vowelTable.addRow(rowData);
			}
		}
	}

	context.put("vowelTable", vowelTable);
}
]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="209" y="48"/>
                                            </extensions>
                                        </node>
                                        <ogcn:macro id="b22af37adc0e4a9b" name="Vowels (Total)" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                            <graph id="7227caa6">
                                                <node id="598e44aa449b4309" name="obj" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="15" y="15"/>
                                                    </extensions>
                                                </node>
                                                <node id="30ce4f66bf8f4c6c" name="speaker" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="15" y="277"/>
                                                    </extensions>
                                                </node>
                                                <node id="cd1c7130d14a4351" type="class:ca.phon.app.opgraph.nodes.table.InventoryNode">
                                                    <extensions>
                                                        <opqry:inventoryoptions>
                                                            <opqry:column caseSensitive="false" column="Vowel" ignoreDiacritics="true"/>
                                                        </opqry:inventoryoptions>
                                                        <oga:settings/>
                                                        <oga:meta x="204" y="15"/>
                                                    </extensions>
                                                </node>
                                                <node id="10ea9b12e8f049b9" name="DefaultTableDataSource" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="204" y="146"/>
                                                    </extensions>
                                                </node>
                                                <ogcn:macro id="733c98b32c2e4d2d" name="Setup Buffer Name" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                                    <graph id="1bc58383">
                                                        <node id="7a87f8d8852147eb" name="StringBuffer#&lt;init&gt;(String)" type="class:ca.gedge.opgraph.nodes.reflect.ConstructorNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.classMember"><![CDATA[<init>(java.lang.String)]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="15" y="15">
                                                                    <oga:default for="arg1" type="java.lang.String"/>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <node id="59be75fa8daa44d2" name="Participant" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="15" y="146"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="52bd63948b164fab" name="StringBuffer#append(String)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[append(java.lang.String)]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="256" y="15"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="d986160dcbcf4d7e" name="StringBuffer#toString()" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[toString()]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="507" y="15"/>
                                                            </extensions>
                                                        </node>
                                                        <link dest="d986160dcbcf4d7e" destField="obj" source="52bd63948b164fab" sourceField="value"/>
                                                        <link dest="52bd63948b164fab" destField="obj" source="7a87f8d8852147eb" sourceField="value"/>
                                                        <link dest="52bd63948b164fab" destField="arg1" source="59be75fa8daa44d2" sourceField="name"/>
                                                        <extensions>
                                                            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                                        </extensions>
                                                    </graph>
                                                    <ogcn:published_input field="obj" name="speaker" ref="59be75fa8daa44d2"/>
                                                    <ogcn:published_input field="arg1" name="arg1" ref="7a87f8d8852147eb"/>
                                                    <ogcn:published_output field="value" name="value" ref="d986160dcbcf4d7e"/>
                                                    <extensions>
                                                        <oga:meta x="205" y="277">
                                                            <oga:default for="arg1" type="java.lang.String">Vowel Inventory_</oga:default>
                                                        </oga:meta>
                                                    </extensions>
                                                </ogcn:macro>
                                                <node id="1232952ac10d4297" name="Add Frequency Column" type="class:ca.phon.app.opgraph.nodes.table.TableScriptNode">
                                                    <input name="total" optional="false"/>
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	inputs.add("total", "", false, false);
}

function tableOp(context, table) {
	var total = context.get("total");
	var colIdx = table.columnCount;
	table.setColumnTitle(colIdx, "%");

	for(var row = 0; row < table.rowCount; row++) {
		var rowData = table.getRow(row);
		var count = rowData[1];
		var freq = (count / total) * 100.0;

		rowData[2] = freq;
	}
}
]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="357" y="15"/>
                                                    </extensions>
                                                </node>
                                                <node id="ba92fb2d0d3844d9" type="class:ca.phon.app.opgraph.nodes.table.SortNode">
                                                    <extensions>
                                                        <opqry:sortoptions>
                                                            <opqry:sortBy column="Vowel" order="ascending" type="plain"/>
                                                        </opqry:sortoptions>
                                                        <oga:settings/>
                                                        <oga:meta x="558" y="15"/>
                                                    </extensions>
                                                </node>
                                                <node id="b7ae094ebc7a48f4" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                    <input name="data" optional="false">Data to print</input>
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="dataTemplate"><![CDATA[$DATA]]></oga:property>
                                                            <oga:property key="showText"><![CDATA[false]]></oga:property>
                                                            <oga:property key="showTable"><![CDATA[true]]></oga:property>
                                                            <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="711" y="15"/>
                                                    </extensions>
                                                </node>
                                                <ogcn:macro id="7b2d6525577d4b08" name="Add to Report Template" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                                    <graph id="49a87103">
                                                        <node id="6c838b5323d24987" name="Set Caption" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                            <input name="data" optional="false">Data to print</input>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="dataTemplate"><![CDATA[
#set($caption = "<h3>Vowel Inventory : $DATA</h3>")
]]></oga:property>
                                                                    <oga:property key="showText"><![CDATA[true]]></oga:property>
                                                                    <oga:property key="showTable"><![CDATA[false]]></oga:property>
                                                                    <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="51" y="48">
                                                                    <oga:default for="buffer" type="java.lang.String">Report Template</oga:default>
                                                                    <oga:default for="append" type="java.lang.Boolean">true</oga:default>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <node id="bd289cc636ca423f" name="Add to Template" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                            <input name="data" optional="false">Data to print</input>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="dataTemplate"><![CDATA[
#set($tableName = "$DATA")
#if($tables.containsKey($tableName))
#set($table = $tables.get($tableName))
#printTableWithIdAndCaption( $table $tableName $caption [] )
#else
$caption

No Results
#end
]]></oga:property>
                                                                    <oga:property key="showText"><![CDATA[true]]></oga:property>
                                                                    <oga:property key="showTable"><![CDATA[false]]></oga:property>
                                                                    <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="54" y="177">
                                                                    <oga:default for="buffer" type="java.lang.String">Report Template</oga:default>
                                                                    <oga:default for="append" type="java.lang.Boolean">true</oga:default>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <extensions>
                                                            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                                        </extensions>
                                                    </graph>
                                                    <ogcn:published_input field="data" name="speaker" ref="6c838b5323d24987"/>
                                                    <ogcn:published_input field="data" name="bufferName" ref="bd289cc636ca423f"/>
                                                    <extensions>
                                                        <oga:meta x="868" y="14"/>
                                                    </extensions>
                                                </ogcn:macro>
                                                <link dest="ba92fb2d0d3844d9" destField="table" source="1232952ac10d4297" sourceField="table"/>
                                                <link dest="b7ae094ebc7a48f4" destField="data" source="ba92fb2d0d3844d9" sourceField="table"/>
                                                <link dest="733c98b32c2e4d2d" destField="speaker" source="30ce4f66bf8f4c6c" sourceField="obj"/>
                                                <link dest="7b2d6525577d4b08" destField="speaker" source="30ce4f66bf8f4c6c" sourceField="obj"/>
                                                <link dest="1232952ac10d4297" destField="total" source="10ea9b12e8f049b9" sourceField="rowCount"/>
                                                <link dest="10ea9b12e8f049b9" destField="obj" source="598e44aa449b4309" sourceField="obj"/>
                                                <link dest="b7ae094ebc7a48f4" destField="buffer" source="733c98b32c2e4d2d" sourceField="value"/>
                                                <link dest="7b2d6525577d4b08" destField="bufferName" source="b7ae094ebc7a48f4" sourceField="buffer"/>
                                                <link dest="1232952ac10d4297" destField="table" source="cd1c7130d14a4351" sourceField="table"/>
                                                <link dest="cd1c7130d14a4351" destField="table" source="598e44aa449b4309" sourceField="obj"/>
                                            </graph>
                                            <ogcn:published_input field="obj" name="speaker" ref="30ce4f66bf8f4c6c"/>
                                            <ogcn:published_input field="obj" name="obj" ref="598e44aa449b4309"/>
                                            <extensions>
                                                <oga:meta x="445" y="50"/>
                                            </extensions>
                                        </ogcn:macro>
                                        <ogcn:macro id="65bf101fb2f14ead" name="Vowels (by Session)" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                            <graph id="384c60c3">
                                                <node id="76e8171f93824e4d" name="table" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="15" y="15"/>
                                                    </extensions>
                                                </node>
                                                <node id="453fc2350efc478e" name="speaker" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="15" y="277"/>
                                                    </extensions>
                                                </node>
                                                <node id="e8096b1c415d4b71" type="class:ca.phon.app.opgraph.nodes.table.InventoryNode">
                                                    <extensions>
                                                        <opqry:inventoryoptions>
                                                            <opqry:groupBy caseSensitive="false" column="Session" ignoreDiacritics="true"/>
                                                            <opqry:column caseSensitive="false" column="Vowel" ignoreDiacritics="true"/>
                                                        </opqry:inventoryoptions>
                                                        <oga:settings/>
                                                        <oga:meta x="204" y="15"/>
                                                    </extensions>
                                                </node>
                                                <node id="b65dd07081f94f95" name="Split Table" type="class:ca.phon.app.opgraph.nodes.table.TableScriptNode">
                                                    <output name="keySet" type="java.util.Set">Unique values from given column name</output>
                                                    <output name="tableMap" type="java.util.Map">Map of key -&gt; table values</output>
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="columnName"><![CDATA[Session]]></oga:property>
                                                            <oga:property key="__script"><![CDATA[/*
 * Phon - An open source tool for research in phonology.
 * Copyright (C) 2005 - 2017, Gregory Hedlund <ghedlund@mun.ca> and Yvan Rose <yrose@mun.ca>
 * Dept of Linguistics, Memorial University <https://phon.ca>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

 /**
  * Split Table.js
  *
  * Script for use with ca.phon.app.opgraph.nodes.table.TableScriptNode
  *
  * Split table based on column name.  Two outputs
  * are produced, a set of keys from the column used in the filter  and a
  * map of key -> table values.
  */

var columnParamInfo = {
	"id": "columnName",
	"title": "Column Name",
	"def": "",
	"prompt": "Enter column name"
}

function setup_params(params) {
	var columnParam = new StringScriptParam(
		columnParamInfo.id,
		columnParamInfo.title,
		columnParamInfo.def);
	columnParam.setPrompt(columnParamInfo.prompt);
	params.add(columnParam);
}

// add custom inputs/outputs here
function init(inputs, outputs) {
	outputs.add("keySet", "Unique values from given column name", false, java.util.Set);
	outputs.add("tableMap", "Map of key -> table values", false, java.util.Map);
}

/*
 * Create a new table with the same schema as the inputTable
 */
function setupTable(inputTable) {
    var table = new DefaultTableDataSource();
    for(c = 0; c < inputTable.columnCount; c++) {
	    var colTitle = inputTable.getColumnTitle(c);
	    table.setColumnTitle(c, colTitle);
	}
	return table;
}

// run operation on table
function tableOp(context, table) {
	// find table column index
	col = table.getColumnIndex(columnName);

	if(col < 0)
		return; // column not found

	var tableMap = new java.util.LinkedHashMap();

	for(row = 0; row < table.rowCount; row++) {
	    // use string value as row key
		var rowKey = Packages.ca.phon.formatter.FormatterUtil.format(table.getValueAt(row, col));

		var keyTable = tableMap.get(rowKey);
		if(keyTable == null) {
		    keyTable = setupTable(table);
		    tableMap.put(rowKey, keyTable);
		}
		keyTable.addRow(table.getRow(row));
	}

	context.put("keySet", tableMap.keySet());
	context.put("tableMap", tableMap);
}
]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="204" y="146"/>
                                                    </extensions>
                                                </node>
                                                <ogcn:macro id="a84edd9fd9184180" name="Setup Buffer Name" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                                    <graph id="5e9267e6">
                                                        <node id="d9ed09013a49449c" name="StringBuffer#&lt;init&gt;(String)" type="class:ca.gedge.opgraph.nodes.reflect.ConstructorNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.classMember"><![CDATA[<init>(java.lang.String)]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="15" y="15">
                                                                    <oga:default for="arg1" type="java.lang.String"/>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <node id="23d7e1fdd6874eb9" name="Participant" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="15" y="146"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="fab81f0030e3406b" name="StringBuffer#append(String)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[append(java.lang.String)]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="256" y="15"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="ae004a49d79a4085" name="StringBuffer#toString()" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[toString()]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="507" y="15"/>
                                                            </extensions>
                                                        </node>
                                                        <link dest="ae004a49d79a4085" destField="obj" source="fab81f0030e3406b" sourceField="value"/>
                                                        <link dest="fab81f0030e3406b" destField="obj" source="d9ed09013a49449c" sourceField="value"/>
                                                        <link dest="fab81f0030e3406b" destField="arg1" source="23d7e1fdd6874eb9" sourceField="name"/>
                                                        <extensions>
                                                            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                                        </extensions>
                                                    </graph>
                                                    <ogcn:published_input field="obj" name="speaker" ref="23d7e1fdd6874eb9"/>
                                                    <ogcn:published_input field="arg1" name="arg1" ref="d9ed09013a49449c"/>
                                                    <ogcn:published_output field="value" name="value" ref="ae004a49d79a4085"/>
                                                    <extensions>
                                                        <oga:meta x="205" y="277">
                                                            <oga:default for="arg1" type="java.lang.String">Vowel Inventory (by Session)_</oga:default>
                                                        </oga:meta>
                                                    </extensions>
                                                </ogcn:macro>
                                                <node id="35abd40b9b9f4fb0" name="Add Frequency Columns" type="class:ca.phon.app.opgraph.nodes.table.TableScriptNode">
                                                    <input name="tableMap" optional="false"/>
                                                    <output name="freqTable" type="ca.phon.query.report.datasource.DefaultTableDataSource"/>
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	inputs.add("tableMap", "", false, false);

	outputs.add("freqTable", "", false, Packages.ca.phon.query.report.datasource.DefaultTableDataSource);
}

function tableOp(context, table) {
	var tableMap = context.get("tableMap");
	var freqTable = new Packages.ca.phon.query.report.datasource.DefaultTableDataSource();

	// setup columns
	freqTable.setColumnTitle(0, table.getColumnTitle(0));

	var colIdx = 1;
	for(var col = 1; col < table.columnCount; col++) {
		freqTable.setColumnTitle(colIdx++, table.getColumnTitle(col));
		freqTable.setColumnTitle(colIdx++, "% " + table.getColumnTitle(col));
	}

	for(var row = 0; row < table.rowCount; row++) {
		var rowData = [];
		var tableData = table.getRow(row);

		rowData[0] = tableData[0];
		colIdx = 1;

		for(var col = 1; col < table.columnCount; col++) {
			var total = tableMap.get(table.getColumnTitle(col)).rowCount;
			var count = tableData[col];
			var freq = (count / total) * 100.0;

			rowData[colIdx++] = new java.lang.Integer(count);
			rowData[colIdx++] = freq;
		}

		freqTable.addRow(rowData);
	}

	context.put("freqTable", freqTable);
}
]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="362" y="15"/>
                                                    </extensions>
                                                </node>
                                                <node id="f25fd64007f74beb" type="class:ca.phon.app.opgraph.nodes.table.SortNode">
                                                    <extensions>
                                                        <opqry:sortoptions>
                                                            <opqry:sortBy column="Vowel" order="ascending" type="plain"/>
                                                        </opqry:sortoptions>
                                                        <oga:settings/>
                                                        <oga:meta x="558" y="15"/>
                                                    </extensions>
                                                </node>
                                                <node id="a7876fffb3de4666" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                    <input name="data" optional="false">Data to print</input>
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="dataTemplate"><![CDATA[$DATA]]></oga:property>
                                                            <oga:property key="showText"><![CDATA[false]]></oga:property>
                                                            <oga:property key="showTable"><![CDATA[true]]></oga:property>
                                                            <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="711" y="15"/>
                                                    </extensions>
                                                </node>
                                                <ogcn:macro id="2e9d54b2ee794331" name="Add to Report Template" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                                    <graph id="45fe627d">
                                                        <node id="62e290107bd64979" name="Set Caption" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                            <input name="data" optional="false">Data to print</input>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="dataTemplate"><![CDATA[
#set($caption = "<h3>Vowel Inventory (by Session) : $DATA</h3>")
]]></oga:property>
                                                                    <oga:property key="showText"><![CDATA[true]]></oga:property>
                                                                    <oga:property key="showTable"><![CDATA[false]]></oga:property>
                                                                    <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="51" y="48">
                                                                    <oga:default for="buffer" type="java.lang.String">Report Template</oga:default>
                                                                    <oga:default for="append" type="java.lang.Boolean">true</oga:default>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <node id="426b2500e544331" name="Add to Template" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                            <input name="data" optional="false">Data to print</input>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="dataTemplate"><![CDATA[
#set($tableName = "$DATA")
#if($tables.containsKey($tableName))
#set($table = $tables.get($tableName))
#printTableWithIdAndCaption( $table $tableName $caption [] )
#else
$caption

No Results
#end
]]></oga:property>
                                                                    <oga:property key="showText"><![CDATA[true]]></oga:property>
                                                                    <oga:property key="showTable"><![CDATA[false]]></oga:property>
                                                                    <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="54" y="177">
                                                                    <oga:default for="buffer" type="java.lang.String">Report Template</oga:default>
                                                                    <oga:default for="append" type="java.lang.Boolean">true</oga:default>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <extensions>
                                                            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                                        </extensions>
                                                    </graph>
                                                    <ogcn:published_input field="data" name="speaker" ref="62e290107bd64979"/>
                                                    <ogcn:published_input field="data" name="bufferName" ref="426b2500e544331"/>
                                                    <extensions>
                                                        <oga:meta x="870" y="15"/>
                                                    </extensions>
                                                </ogcn:macro>
                                                <link dest="a7876fffb3de4666" destField="data" source="f25fd64007f74beb" sourceField="table"/>
                                                <link dest="a84edd9fd9184180" destField="speaker" source="453fc2350efc478e" sourceField="obj"/>
                                                <link dest="2e9d54b2ee794331" destField="speaker" source="453fc2350efc478e" sourceField="obj"/>
                                                <link dest="a7876fffb3de4666" destField="buffer" source="a84edd9fd9184180" sourceField="value"/>
                                                <link dest="2e9d54b2ee794331" destField="bufferName" source="a7876fffb3de4666" sourceField="buffer"/>
                                                <link dest="e8096b1c415d4b71" destField="table" source="76e8171f93824e4d" sourceField="obj"/>
                                                <link dest="b65dd07081f94f95" destField="table" source="76e8171f93824e4d" sourceField="obj"/>
                                                <link dest="35abd40b9b9f4fb0" destField="tableMap" source="b65dd07081f94f95" sourceField="tableMap"/>
                                                <link dest="35abd40b9b9f4fb0" destField="table" source="e8096b1c415d4b71" sourceField="table"/>
                                                <link dest="f25fd64007f74beb" destField="table" source="35abd40b9b9f4fb0" sourceField="freqTable"/>
                                                <extensions>
                                                    <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                                </extensions>
                                            </graph>
                                            <ogcn:published_input field="obj" name="speaker" ref="453fc2350efc478e"/>
                                            <ogcn:published_input field="obj" name="obj" ref="76e8171f93824e4d"/>
                                            <extensions>
                                                <oga:meta x="450" y="173"/>
                                            </extensions>
                                        </ogcn:macro>
                                        <link dest="6ac5430e4a2a4274" destField="table" source="4286091421414cd3" sourceField="obj"/>
                                        <link dest="b22af37adc0e4a9b" destField="speaker" source="f69bce99bd234bf6" sourceField="obj"/>
                                        <link dest="65bf101fb2f14ead" destField="speaker" source="f69bce99bd234bf6" sourceField="obj"/>
                                        <link dest="65bf101fb2f14ead" destField="obj" source="6ac5430e4a2a4274" sourceField="vowelTable"/>
                                        <link dest="b22af37adc0e4a9b" destField="obj" source="6ac5430e4a2a4274" sourceField="vowelTable"/>
                                        <extensions>
                                            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                        </extensions>
                                    </graph>
                                    <ogcn:published_input field="obj" name="table" ref="4286091421414cd3"/>
                                    <ogcn:published_input field="obj" name="obj" ref="f69bce99bd234bf6"/>
                                    <extensions>
                                        <oga:meta x="262" y="588"/>
                                    </extensions>
                                </ogcn:macro>
                                <ogcn:macro id="fbb7c1ceae774d2a" name="Vocalization Structure" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                    <graph id="1cfdd46d">
                                        <node id="82c3c022a6c244ba" name="table" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="15" y="15"/>
                                            </extensions>
                                        </node>
                                        <node id="d3c301bd634242c2" name="Participant" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="15" y="160"/>
                                            </extensions>
                                        </node>
                                        <node id="9c5ea98b7d7541ee" name="Add Structure Column" type="class:ca.phon.app.opgraph.nodes.table.TableScriptNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="__script"><![CDATA[importClass(Packages.ca.phon.ipa.IPATranscriptBuilder)

function init(inputs, outputs) {
}

function getStructure(ipa) {
	var structure = "";

	for(var i = 0; i < ipa.length(); i++) {
		var ele = ipa.elementAt(i);

		if(ele.featureSet.hasFeature("glottal")) {
			structure += "H";
		} else if(ele.featureSet.hasFeature("glide")) {
			structure += "G";
		} else if(ele.featureSet.hasFeature("c")) {
			structure += "C";
		} else if(ele.featureSet.hasFeature("v")) {
			structure += "V";
		} else {
			structure += ele.toString();
		}
	}

	return structure;
}

function tableOp(context, table) {
	var colIdx = table.columnCount;
	table.setColumnTitle(colIdx, "Structure");

	for(var row = 0; row < table.rowCount; row++) {
		var tableData = table.getRow(row);

		var actualSyllabification = table.getValueAt(row, "Actual Syllabification (Word)");
		var ipa = (new IPATranscriptBuilder()).append(actualSyllabification).toIPATranscript();

		tableData[colIdx] = getStructure(ipa);
	}
}
]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="209" y="48"/>
                                            </extensions>
                                        </node>
                                        <ogcn:macro id="d6dcaea1e62046f7" name="Strucutres (Total)" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                            <graph id="6130a653">
                                                <node id="7d0ef2fe71254e04" name="TableDataSource" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.TableDataSource]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="19" y="17"/>
                                                    </extensions>
                                                </node>
                                                <node id="5c8fc34cf2af4389" name="speaker" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="15" y="277"/>
                                                    </extensions>
                                                </node>
                                                <node id="a12598f7c4e34dcc" type="class:ca.phon.app.opgraph.nodes.table.InventoryNode">
                                                    <extensions>
                                                        <opqry:inventoryoptions>
                                                            <opqry:column caseSensitive="false" column="Structure" ignoreDiacritics="true"/>
                                                        </opqry:inventoryoptions>
                                                        <oga:settings/>
                                                        <oga:meta x="204" y="15"/>
                                                    </extensions>
                                                </node>
                                                <ogcn:macro id="771d9807b4946a1" name="Setup Buffer Name" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                                    <graph id="d959300">
                                                        <node id="2d3cee440e084941" name="StringBuffer#&lt;init&gt;(String)" type="class:ca.gedge.opgraph.nodes.reflect.ConstructorNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.classMember"><![CDATA[<init>(java.lang.String)]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="15" y="15">
                                                                    <oga:default for="arg1" type="java.lang.String"/>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <node id="b2076b125f5f46e9" name="Participant" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="15" y="146"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="3d6454dbd8164002" name="StringBuffer#append(String)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[append(java.lang.String)]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="256" y="15"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="eea155121c344e5b" name="StringBuffer#toString()" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[toString()]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="507" y="15"/>
                                                            </extensions>
                                                        </node>
                                                        <link dest="eea155121c344e5b" destField="obj" source="3d6454dbd8164002" sourceField="value"/>
                                                        <link dest="3d6454dbd8164002" destField="obj" source="2d3cee440e084941" sourceField="value"/>
                                                        <link dest="3d6454dbd8164002" destField="arg1" source="b2076b125f5f46e9" sourceField="name"/>
                                                        <extensions>
                                                            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                                        </extensions>
                                                    </graph>
                                                    <ogcn:published_input field="obj" name="speaker" ref="b2076b125f5f46e9"/>
                                                    <ogcn:published_input field="arg1" name="arg1" ref="2d3cee440e084941"/>
                                                    <ogcn:published_output field="value" name="value" ref="eea155121c344e5b"/>
                                                    <extensions>
                                                        <oga:meta x="205" y="277">
                                                            <oga:default for="arg1" type="java.lang.String">Vocalization Structure_</oga:default>
                                                        </oga:meta>
                                                    </extensions>
                                                </ogcn:macro>
                                                <node id="8ecf968b16c24594" name="Add Frequency Column" type="class:ca.phon.app.opgraph.nodes.table.TableScriptNode">
                                                    <input name="total" optional="false"/>
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	inputs.add("total", "", false, false);
}

function tableOp(context, table) {
	var total = context.get("total");
	var colIdx = table.columnCount;
	table.setColumnTitle(colIdx, "%");

	for(var row = 0; row < table.rowCount; row++) {
		var rowData = table.getRow(row);
		var count = rowData[1];
		var freq = (count / total) * 100.0;

		rowData[2] = freq;
	}
}
]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="357" y="15"/>
                                                    </extensions>
                                                </node>
                                                <node id="33ee13c79ef4cc3" type="class:ca.phon.app.opgraph.nodes.table.SortNode">
                                                    <extensions>
                                                        <opqry:sortoptions>
                                                            <opqry:sortBy column="Structure" order="ascending" type="plain"/>
                                                        </opqry:sortoptions>
                                                        <oga:settings/>
                                                        <oga:meta x="558" y="15"/>
                                                    </extensions>
                                                </node>
                                                <node id="177756b09f2c4e9c" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                    <input name="data" optional="false">Data to print</input>
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="dataTemplate"><![CDATA[$DATA]]></oga:property>
                                                            <oga:property key="showText"><![CDATA[false]]></oga:property>
                                                            <oga:property key="showTable"><![CDATA[true]]></oga:property>
                                                            <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="711" y="15"/>
                                                    </extensions>
                                                </node>
                                                <ogcn:macro id="6083f3b1fec0421a" name="Add to Report Template" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                                    <graph id="69a6bba5">
                                                        <node id="fc87f3a92fe4bdf" name="Set Caption" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                            <input name="data" optional="false">Data to print</input>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="dataTemplate"><![CDATA[
#set($caption = "<h3>Vocalization Structure : $DATA</h3>")
]]></oga:property>
                                                                    <oga:property key="showText"><![CDATA[true]]></oga:property>
                                                                    <oga:property key="showTable"><![CDATA[false]]></oga:property>
                                                                    <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="51" y="48">
                                                                    <oga:default for="buffer" type="java.lang.String">Report Template</oga:default>
                                                                    <oga:default for="append" type="java.lang.Boolean">true</oga:default>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <node id="ca9f4a047b4c47aa" name="Add to Template" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                            <input name="data" optional="false">Data to print</input>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="dataTemplate"><![CDATA[
#set($tableName = "$DATA")
#if($tables.containsKey($tableName))
#set($table = $tables.get($tableName))
#printTableWithIdAndCaption( $table $tableName $caption [] )
#else
$caption

No Results
#end
]]></oga:property>
                                                                    <oga:property key="showText"><![CDATA[true]]></oga:property>
                                                                    <oga:property key="showTable"><![CDATA[false]]></oga:property>
                                                                    <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="54" y="177">
                                                                    <oga:default for="buffer" type="java.lang.String">Report Template</oga:default>
                                                                    <oga:default for="append" type="java.lang.Boolean">true</oga:default>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <extensions>
                                                            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                                        </extensions>
                                                    </graph>
                                                    <ogcn:published_input field="data" name="speaker" ref="fc87f3a92fe4bdf"/>
                                                    <ogcn:published_input field="data" name="bufferName" ref="ca9f4a047b4c47aa"/>
                                                    <extensions>
                                                        <oga:meta x="868" y="14"/>
                                                    </extensions>
                                                </ogcn:macro>
                                                <link dest="33ee13c79ef4cc3" destField="table" source="8ecf968b16c24594" sourceField="table"/>
                                                <link dest="177756b09f2c4e9c" destField="data" source="33ee13c79ef4cc3" sourceField="table"/>
                                                <link dest="771d9807b4946a1" destField="speaker" source="5c8fc34cf2af4389" sourceField="obj"/>
                                                <link dest="6083f3b1fec0421a" destField="speaker" source="5c8fc34cf2af4389" sourceField="obj"/>
                                                <link dest="177756b09f2c4e9c" destField="buffer" source="771d9807b4946a1" sourceField="value"/>
                                                <link dest="6083f3b1fec0421a" destField="bufferName" source="177756b09f2c4e9c" sourceField="buffer"/>
                                                <link dest="8ecf968b16c24594" destField="table" source="a12598f7c4e34dcc" sourceField="table"/>
                                                <link dest="8ecf968b16c24594" destField="total" source="7d0ef2fe71254e04" sourceField="rowCount"/>
                                                <link dest="a12598f7c4e34dcc" destField="table" source="7d0ef2fe71254e04" sourceField="obj"/>
                                                <extensions>
                                                    <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                                </extensions>
                                            </graph>
                                            <ogcn:published_input field="obj" name="speaker" ref="5c8fc34cf2af4389"/>
                                            <ogcn:published_input field="obj" name="obj" ref="7d0ef2fe71254e04"/>
                                            <extensions>
                                                <oga:meta x="445" y="50"/>
                                            </extensions>
                                        </ogcn:macro>
                                        <ogcn:macro id="458fd744de5a4a6a" name="Strucutres (by Session)" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                            <graph id="79e9432e">
                                                <node id="b1a785f5231a4cf2" name="TableDataSource" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.TableDataSource]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="7" y="26"/>
                                                    </extensions>
                                                </node>
                                                <node id="9b93f7a2752f43bd" name="speaker" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="15" y="277"/>
                                                    </extensions>
                                                </node>
                                                <node id="d622557e1ee74372" type="class:ca.phon.app.opgraph.nodes.table.InventoryNode">
                                                    <extensions>
                                                        <opqry:inventoryoptions>
                                                            <opqry:groupBy caseSensitive="false" column="Session" ignoreDiacritics="true"/>
                                                            <opqry:column caseSensitive="false" column="Structure" ignoreDiacritics="true"/>
                                                        </opqry:inventoryoptions>
                                                        <oga:settings/>
                                                        <oga:meta x="204" y="15"/>
                                                    </extensions>
                                                </node>
                                                <node id="cc5ba6cc895f4fec" name="Split Table" type="class:ca.phon.app.opgraph.nodes.table.TableScriptNode">
                                                    <output name="keySet" type="java.util.Set">Unique values from given column name</output>
                                                    <output name="tableMap" type="java.util.Map">Map of key -&gt; table values</output>
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="columnName"><![CDATA[Session]]></oga:property>
                                                            <oga:property key="__script"><![CDATA[/*
 * Phon - An open source tool for research in phonology.
 * Copyright (C) 2005 - 2017, Gregory Hedlund <ghedlund@mun.ca> and Yvan Rose <yrose@mun.ca>
 * Dept of Linguistics, Memorial University <https://phon.ca>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

 /**
  * Split Table.js
  *
  * Script for use with ca.phon.app.opgraph.nodes.table.TableScriptNode
  *
  * Split table based on column name.  Two outputs
  * are produced, a set of keys from the column used in the filter  and a
  * map of key -> table values.
  */

var columnParamInfo = {
	"id": "columnName",
	"title": "Column Name",
	"def": "",
	"prompt": "Enter column name"
}

function setup_params(params) {
	var columnParam = new StringScriptParam(
		columnParamInfo.id,
		columnParamInfo.title,
		columnParamInfo.def);
	columnParam.setPrompt(columnParamInfo.prompt);
	params.add(columnParam);
}

// add custom inputs/outputs here
function init(inputs, outputs) {
	outputs.add("keySet", "Unique values from given column name", false, java.util.Set);
	outputs.add("tableMap", "Map of key -> table values", false, java.util.Map);
}

/*
 * Create a new table with the same schema as the inputTable
 */
function setupTable(inputTable) {
    var table = new DefaultTableDataSource();
    for(c = 0; c < inputTable.columnCount; c++) {
	    var colTitle = inputTable.getColumnTitle(c);
	    table.setColumnTitle(c, colTitle);
	}
	return table;
}

// run operation on table
function tableOp(context, table) {
	// find table column index
	col = table.getColumnIndex(columnName);

	if(col < 0)
		return; // column not found

	var tableMap = new java.util.LinkedHashMap();

	for(row = 0; row < table.rowCount; row++) {
	    // use string value as row key
		var rowKey = Packages.ca.phon.formatter.FormatterUtil.format(table.getValueAt(row, col));

		var keyTable = tableMap.get(rowKey);
		if(keyTable == null) {
		    keyTable = setupTable(table);
		    tableMap.put(rowKey, keyTable);
		}
		keyTable.addRow(table.getRow(row));
	}

	context.put("keySet", tableMap.keySet());
	context.put("tableMap", tableMap);
}
]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="204" y="146"/>
                                                    </extensions>
                                                </node>
                                                <ogcn:macro id="ce3a7de449dd4232" name="Setup Buffer Name" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                                    <graph id="40ebda33">
                                                        <node id="c61173250dd4a3d" name="StringBuffer#&lt;init&gt;(String)" type="class:ca.gedge.opgraph.nodes.reflect.ConstructorNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.classMember"><![CDATA[<init>(java.lang.String)]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="15" y="15">
                                                                    <oga:default for="arg1" type="java.lang.String"/>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <node id="d9b6501b1e694091" name="Participant" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="15" y="146"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="d5562c4a97484642" name="StringBuffer#append(String)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[append(java.lang.String)]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="256" y="15"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="d2b59e7842d247e4" name="StringBuffer#toString()" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[toString()]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="507" y="15"/>
                                                            </extensions>
                                                        </node>
                                                        <link dest="d2b59e7842d247e4" destField="obj" source="d5562c4a97484642" sourceField="value"/>
                                                        <link dest="d5562c4a97484642" destField="obj" source="c61173250dd4a3d" sourceField="value"/>
                                                        <link dest="d5562c4a97484642" destField="arg1" source="d9b6501b1e694091" sourceField="name"/>
                                                        <extensions>
                                                            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                                        </extensions>
                                                    </graph>
                                                    <ogcn:published_input field="obj" name="speaker" ref="d9b6501b1e694091"/>
                                                    <ogcn:published_input field="arg1" name="arg1" ref="c61173250dd4a3d"/>
                                                    <ogcn:published_output field="value" name="value" ref="d2b59e7842d247e4"/>
                                                    <extensions>
                                                        <oga:meta x="205" y="277">
                                                            <oga:default for="arg1" type="java.lang.String">Vocalization Structure (by Session)_</oga:default>
                                                        </oga:meta>
                                                    </extensions>
                                                </ogcn:macro>
                                                <node id="d579bb6fd1f1483a" name="Add Frequency Columns" type="class:ca.phon.app.opgraph.nodes.table.TableScriptNode">
                                                    <input name="tableMap" optional="false"/>
                                                    <output name="freqTable" type="ca.phon.query.report.datasource.DefaultTableDataSource"/>
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	inputs.add("tableMap", "", false, false);

	outputs.add("freqTable", "", false, Packages.ca.phon.query.report.datasource.DefaultTableDataSource);
}

function tableOp(context, table) {
	var tableMap = context.get("tableMap");
	var freqTable = new Packages.ca.phon.query.report.datasource.DefaultTableDataSource();

	// setup columns
	freqTable.setColumnTitle(0, table.getColumnTitle(0));

	var colIdx = 1;
	for(var col = 1; col < table.columnCount; col++) {
		freqTable.setColumnTitle(colIdx++, table.getColumnTitle(col));
		freqTable.setColumnTitle(colIdx++, "% " + table.getColumnTitle(col));
	}

	for(var row = 0; row < table.rowCount; row++) {
		var rowData = [];
		var tableData = table.getRow(row);

		rowData[0] = tableData[0];
		colIdx = 1;

		for(var col = 1; col < table.columnCount; col++) {
			var total = tableMap.get(table.getColumnTitle(col)).rowCount;
			var count = tableData[col];
			var freq = (count / total) * 100.0;

			rowData[colIdx++] = new java.lang.Integer(count);
			rowData[colIdx++] = freq;
		}

		freqTable.addRow(rowData);
	}

	context.put("freqTable", freqTable);
}
]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="362" y="15"/>
                                                    </extensions>
                                                </node>
                                                <node id="c7bf51c1114b4074" type="class:ca.phon.app.opgraph.nodes.table.SortNode">
                                                    <extensions>
                                                        <opqry:sortoptions>
                                                            <opqry:sortBy column="Structure" order="ascending" type="plain"/>
                                                        </opqry:sortoptions>
                                                        <oga:settings/>
                                                        <oga:meta x="558" y="15"/>
                                                    </extensions>
                                                </node>
                                                <node id="7237bf01dd524687" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                    <input name="data" optional="false">Data to print</input>
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="dataTemplate"><![CDATA[$DATA]]></oga:property>
                                                            <oga:property key="showText"><![CDATA[false]]></oga:property>
                                                            <oga:property key="showTable"><![CDATA[true]]></oga:property>
                                                            <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="711" y="15"/>
                                                    </extensions>
                                                </node>
                                                <ogcn:macro id="56a985fdb892459c" name="Add to Report Template" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                                    <graph id="319faf8e">
                                                        <node id="2d6b3fb1015c40b3" name="Set Caption" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                            <input name="data" optional="false">Data to print</input>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="dataTemplate"><![CDATA[
#set($caption = "<h3>Vocalization Structure (by Session) : $DATA</h3>")
]]></oga:property>
                                                                    <oga:property key="showText"><![CDATA[true]]></oga:property>
                                                                    <oga:property key="showTable"><![CDATA[false]]></oga:property>
                                                                    <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="51" y="48">
                                                                    <oga:default for="buffer" type="java.lang.String">Report Template</oga:default>
                                                                    <oga:default for="append" type="java.lang.Boolean">true</oga:default>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <node id="cb868c6669664f33" name="Add to Template" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                            <input name="data" optional="false">Data to print</input>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="dataTemplate"><![CDATA[
#set($tableName = "$DATA")
#if($tables.containsKey($tableName))
#set($table = $tables.get($tableName))
#printTableWithIdAndCaption( $table $tableName $caption [] )
#else
$caption

No Results
#end
]]></oga:property>
                                                                    <oga:property key="showText"><![CDATA[true]]></oga:property>
                                                                    <oga:property key="showTable"><![CDATA[false]]></oga:property>
                                                                    <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="54" y="177">
                                                                    <oga:default for="buffer" type="java.lang.String">Report Template</oga:default>
                                                                    <oga:default for="append" type="java.lang.Boolean">true</oga:default>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <extensions>
                                                            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                                        </extensions>
                                                    </graph>
                                                    <ogcn:published_input field="data" name="speaker" ref="2d6b3fb1015c40b3"/>
                                                    <ogcn:published_input field="data" name="bufferName" ref="cb868c6669664f33"/>
                                                    <extensions>
                                                        <oga:meta x="870" y="15"/>
                                                    </extensions>
                                                </ogcn:macro>
                                                <link dest="7237bf01dd524687" destField="data" source="c7bf51c1114b4074" sourceField="table"/>
                                                <link dest="ce3a7de449dd4232" destField="speaker" source="9b93f7a2752f43bd" sourceField="obj"/>
                                                <link dest="56a985fdb892459c" destField="speaker" source="9b93f7a2752f43bd" sourceField="obj"/>
                                                <link dest="7237bf01dd524687" destField="buffer" source="ce3a7de449dd4232" sourceField="value"/>
                                                <link dest="56a985fdb892459c" destField="bufferName" source="7237bf01dd524687" sourceField="buffer"/>
                                                <link dest="d579bb6fd1f1483a" destField="tableMap" source="cc5ba6cc895f4fec" sourceField="tableMap"/>
                                                <link dest="d579bb6fd1f1483a" destField="table" source="d622557e1ee74372" sourceField="table"/>
                                                <link dest="c7bf51c1114b4074" destField="table" source="d579bb6fd1f1483a" sourceField="freqTable"/>
                                                <link dest="d622557e1ee74372" destField="table" source="b1a785f5231a4cf2" sourceField="obj"/>
                                                <link dest="cc5ba6cc895f4fec" destField="table" source="b1a785f5231a4cf2" sourceField="obj"/>
                                                <extensions>
                                                    <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                                </extensions>
                                            </graph>
                                            <ogcn:published_input field="obj" name="speaker" ref="9b93f7a2752f43bd"/>
                                            <ogcn:published_input field="obj" name="obj" ref="b1a785f5231a4cf2"/>
                                            <extensions>
                                                <oga:meta x="450" y="173"/>
                                            </extensions>
                                        </ogcn:macro>
                                        <link dest="9c5ea98b7d7541ee" destField="table" source="82c3c022a6c244ba" sourceField="obj"/>
                                        <link dest="d6dcaea1e62046f7" destField="speaker" source="d3c301bd634242c2" sourceField="obj"/>
                                        <link dest="458fd744de5a4a6a" destField="speaker" source="d3c301bd634242c2" sourceField="obj"/>
                                        <link dest="d6dcaea1e62046f7" destField="obj" source="9c5ea98b7d7541ee" sourceField="table"/>
                                        <link dest="458fd744de5a4a6a" destField="obj" source="9c5ea98b7d7541ee" sourceField="table"/>
                                        <extensions>
                                            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                        </extensions>
                                    </graph>
                                    <ogcn:published_input field="obj" name="table" ref="82c3c022a6c244ba"/>
                                    <ogcn:published_input field="obj" name="obj" ref="d3c301bd634242c2"/>
                                    <extensions>
                                        <oga:meta x="268" y="709"/>
                                    </extensions>
                                </ogcn:macro>
                                <ogcn:macro id="35376622" name="Syllable Structure" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                    <graph id="29a8a51c">
                                        <node id="47c22615" name="table" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="15" y="15"/>
                                            </extensions>
                                        </node>
                                        <node id="cf6050cb379e46e4" name="Participant" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="15" y="160"/>
                                            </extensions>
                                        </node>
                                        <node id="45faec77" name="Create Syllable Table" type="class:ca.phon.app.opgraph.nodes.table.TableScriptNode">
                                            <output name="syllTable" type="ca.phon.query.report.datasource.DefaultTableDataSource"/>
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="__script"><![CDATA[importClass(Packages.ca.phon.ipa.IPATranscriptBuilder)

function init(inputs, outputs) {
	outputs.add("syllTable", "", false, Packages.ca.phon.query.report.datasource.DefaultTableDataSource);
}

function getStructure(ipa) {
	var structure = "";

	for(var i = 0; i < ipa.length(); i++) {
		var ele = ipa.elementAt(i);

		if(ele.featureSet.hasFeature("glottal")) {
			structure += "H";
		} else if(ele.featureSet.hasFeature("glide")) {
			structure += "G";
		} else if(ele.featureSet.hasFeature("c")) {
			structure += "C";
		} else if(ele.featureSet.hasFeature("v")) {
			structure += "V";
		} else {
			structure += ele.toString();
		}
	}

	return structure;
}

function tableOp(context, table) {
	var syllTable = new Packages.ca.phon.query.report.datasource.DefaultTableDataSource();

	// setup columns
	syllTable.setColumnTitle(0, "Session");
	syllTable.setColumnTitle(1, "Record");
	syllTable.setColumnTitle(2, "Syllable");
	syllTable.setColumnTitle(3, "Structure");

	for(var row = 0; row < table.rowCount; row++) {
		var tableData = table.getRow(row);

		var ipa = (new IPATranscriptBuilder()).append(table.getValueAt(row, "Actual Syllabification (Word)")).toIPATranscript();
		var sylls = ipa.syllables();


		for(var syllIdx = 0; syllIdx < sylls.size(); syllIdx++) {
			var syll = sylls.get(syllIdx);

			var rowData = [];
			rowData[0] = table.getValueAt(row, 0);
			rowData[1] = table.getValueAt(row, "Record #");
			rowData[2] = syll;
			rowData[3] = getStructure(syll);
			syllTable.addRow(rowData);
		}
	}

	context.put("syllTable", syllTable);
}
]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="275" y="21"/>
                                            </extensions>
                                        </node>
                                        <ogcn:macro id="3c1623ed" name="Syllable Strucutre (Total)" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                            <graph id="da3dabc">
                                                <node id="77c929c0" name="obj" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="15" y="15"/>
                                                    </extensions>
                                                </node>
                                                <node id="1f50f0d1" name="speaker" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                                            <oga:property key="contextKey"/>
                                                        </oga:settings>
                                                        <oga:meta x="16" y="172"/>
                                                    </extensions>
                                                </node>
                                                <node id="197b49e3" type="class:ca.phon.app.opgraph.nodes.table.InventoryNode">
                                                    <extensions>
                                                        <opqry:inventoryoptions>
                                                            <opqry:column caseSensitive="false" column="Structure" ignoreDiacritics="true"/>
                                                        </opqry:inventoryoptions>
                                                        <oga:settings/>
                                                        <oga:meta x="241" y="24"/>
                                                    </extensions>
                                                </node>
                                                <node id="1a8e8504" name="DefaultTableDataSource" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                                            <oga:property key="contextKey"/>
                                                        </oga:settings>
                                                        <oga:meta x="244" y="151"/>
                                                    </extensions>
                                                </node>
                                                <ogcn:macro id="22295b99a85b41d8" name="Setup Buffer Name" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                                    <graph id="37cc6b35">
                                                        <node id="a42d55557e4145d9" name="StringBuffer#&lt;init&gt;(String)" type="class:ca.gedge.opgraph.nodes.reflect.ConstructorNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.classMember"><![CDATA[<init>(java.lang.String)]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="15" y="15">
                                                                    <oga:default for="arg1" type="java.lang.String"/>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <node id="4cda613c85bf4515" name="Participant" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="15" y="146"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="fd5d7ffcb2f24ee9" name="StringBuffer#append(String)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[append(java.lang.String)]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="256" y="15"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="c2912363c64643ec" name="StringBuffer#toString()" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[toString()]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="507" y="15"/>
                                                            </extensions>
                                                        </node>
                                                        <link dest="c2912363c64643ec" destField="obj" source="fd5d7ffcb2f24ee9" sourceField="value"/>
                                                        <link dest="fd5d7ffcb2f24ee9" destField="obj" source="a42d55557e4145d9" sourceField="value"/>
                                                        <link dest="fd5d7ffcb2f24ee9" destField="arg1" source="4cda613c85bf4515" sourceField="name"/>
                                                        <extensions>
                                                            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                                        </extensions>
                                                    </graph>
                                                    <ogcn:published_input field="obj" name="speaker" ref="4cda613c85bf4515"/>
                                                    <ogcn:published_input field="arg1" name="arg1" ref="a42d55557e4145d9"/>
                                                    <ogcn:published_output field="value" name="value" ref="c2912363c64643ec"/>
                                                    <extensions>
                                                        <oga:meta x="651" y="151">
                                                            <oga:default for="arg1" type="java.lang.String">Syllable Structure_</oga:default>
                                                        </oga:meta>
                                                    </extensions>
                                                </ogcn:macro>
                                                <node id="a8e35bac8bd74fce" name="Add Frequency Column" type="class:ca.phon.app.opgraph.nodes.table.TableScriptNode">
                                                    <input name="total" optional="false"/>
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	inputs.add("total", "", false, false);
}

function tableOp(context, table) {
	var total = context.get("total");
	var colIdx = table.columnCount;
	table.setColumnTitle(colIdx, "%");

	for(var row = 0; row < table.rowCount; row++) {
		var rowData = table.getRow(row);
		var count = rowData[1];
		var freq = (count / total) * 100.0;

		rowData[2] = freq;
	}
}
]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="417" y="15"/>
                                                    </extensions>
                                                </node>
                                                <node id="784b6f83" type="class:ca.phon.app.opgraph.nodes.table.SortNode">
                                                    <extensions>
                                                        <opqry:sortoptions>
                                                            <opqry:sortBy column="Structure" order="ascending" type="plain"/>
                                                        </opqry:sortoptions>
                                                        <oga:settings/>
                                                        <oga:meta x="652" y="15"/>
                                                    </extensions>
                                                </node>
                                                <node id="11874384" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                    <input name="data" optional="false">Data to print</input>
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="dataTemplate"><![CDATA[$DATA]]></oga:property>
                                                            <oga:property key="showText"><![CDATA[false]]></oga:property>
                                                            <oga:property key="showTable"><![CDATA[true]]></oga:property>
                                                            <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="827" y="15"/>
                                                    </extensions>
                                                </node>
                                                <ogcn:macro id="7808a1862cb14e24" name="Add to Report Template" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                                    <graph id="254865a4">
                                                        <node id="e78ab7126a704199" name="Set Caption" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                            <input name="data" optional="false">Data to print</input>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="dataTemplate"><![CDATA[
#set($caption = "<h3>Syllable Structure : $DATA</h3>")
]]></oga:property>
                                                                    <oga:property key="showText"><![CDATA[true]]></oga:property>
                                                                    <oga:property key="showTable"><![CDATA[false]]></oga:property>
                                                                    <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="51" y="48">
                                                                    <oga:default for="buffer" type="java.lang.String">Report Template</oga:default>
                                                                    <oga:default for="append" type="java.lang.Boolean">true</oga:default>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <node id="f9e6b51722254bc9" name="Add to Template" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                            <input name="data" optional="false">Data to print</input>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="dataTemplate"><![CDATA[
#set($tableName = "$DATA")
#if($tables.containsKey($tableName))
#set($table = $tables.get($tableName))
#printTableWithIdAndCaption( $table $tableName $caption [] )
#else
$caption

No Results
#end
]]></oga:property>
                                                                    <oga:property key="showText"><![CDATA[true]]></oga:property>
                                                                    <oga:property key="showTable"><![CDATA[false]]></oga:property>
                                                                    <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="54" y="177">
                                                                    <oga:default for="buffer" type="java.lang.String">Report Template</oga:default>
                                                                    <oga:default for="append" type="java.lang.Boolean">true</oga:default>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <extensions>
                                                            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                                        </extensions>
                                                    </graph>
                                                    <ogcn:published_input field="data" name="speaker" ref="e78ab7126a704199"/>
                                                    <ogcn:published_input field="data" name="bufferName" ref="f9e6b51722254bc9"/>
                                                    <extensions>
                                                        <oga:meta x="1018" y="15"/>
                                                    </extensions>
                                                </ogcn:macro>
                                                <link dest="784b6f83" destField="table" source="a8e35bac8bd74fce" sourceField="table"/>
                                                <link dest="11874384" destField="data" source="784b6f83" sourceField="table"/>
                                                <link dest="22295b99a85b41d8" destField="speaker" source="1f50f0d1" sourceField="obj"/>
                                                <link dest="7808a1862cb14e24" destField="speaker" source="1f50f0d1" sourceField="obj"/>
                                                <link dest="a8e35bac8bd74fce" destField="total" source="1a8e8504" sourceField="rowCount"/>
                                                <link dest="1a8e8504" destField="obj" source="77c929c0" sourceField="obj"/>
                                                <link dest="11874384" destField="buffer" source="22295b99a85b41d8" sourceField="value"/>
                                                <link dest="7808a1862cb14e24" destField="bufferName" source="11874384" sourceField="buffer"/>
                                                <link dest="a8e35bac8bd74fce" destField="table" source="197b49e3" sourceField="table"/>
                                                <link dest="197b49e3" destField="table" source="77c929c0" sourceField="obj"/>
                                                <extensions>
                                                    <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                                </extensions>
                                            </graph>
                                            <ogcn:published_input field="obj" name="speaker" ref="1f50f0d1"/>
                                            <ogcn:published_input field="obj" name="obj" ref="77c929c0"/>
                                            <extensions>
                                                <oga:meta x="557" y="29"/>
                                            </extensions>
                                        </ogcn:macro>
                                        <ogcn:macro id="304f07bd533d4538" name="Syllable Strucutre (by Session)" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                            <graph id="79187204">
                                                <node id="4c22960fe18b4e7c" name="table" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="15" y="15"/>
                                                    </extensions>
                                                </node>
                                                <node id="34a75653eea64d15" name="speaker" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="15" y="390"/>
                                                    </extensions>
                                                </node>
                                                <node id="9b7b38075b0b44fc" type="class:ca.phon.app.opgraph.nodes.table.InventoryNode">
                                                    <extensions>
                                                        <opqry:inventoryoptions>
                                                            <opqry:groupBy caseSensitive="false" column="Session" ignoreDiacritics="true"/>
                                                            <opqry:column caseSensitive="false" column="Structure" ignoreDiacritics="true"/>
                                                        </opqry:inventoryoptions>
                                                        <oga:settings/>
                                                        <oga:meta x="204" y="15"/>
                                                    </extensions>
                                                </node>
                                                <node id="7c90b8bc" name="Split Table" type="class:ca.phon.app.opgraph.nodes.table.TableScriptNode">
                                                    <output name="keySet" type="java.util.Set">Unique values from given column name</output>
                                                    <output name="tableMap" type="java.util.Map">Map of key -&gt; table values</output>
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="columnName"><![CDATA[Session]]></oga:property>
                                                            <oga:property key="__script"><![CDATA[/*
 * Phon - An open source tool for research in phonology.
 * Copyright (C) 2005 - 2017, Gregory Hedlund <ghedlund@mun.ca> and Yvan Rose <yrose@mun.ca>
 * Dept of Linguistics, Memorial University <https://phon.ca>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

 /**
  * Split Table.js
  *
  * Script for use with ca.phon.app.opgraph.nodes.table.TableScriptNode
  *
  * Split table based on column name.  Two outputs
  * are produced, a set of keys from the column used in the filter  and a
  * map of key -> table values.
  */

var columnParamInfo = {
	"id": "columnName",
	"title": "Column Name",
	"def": "",
	"prompt": "Enter column name"
}

function setup_params(params) {
	var columnParam = new StringScriptParam(
		columnParamInfo.id,
		columnParamInfo.title,
		columnParamInfo.def);
	columnParam.setPrompt(columnParamInfo.prompt);
	params.add(columnParam);
}

// add custom inputs/outputs here
function init(inputs, outputs) {
	outputs.add("keySet", "Unique values from given column name", false, java.util.Set);
	outputs.add("tableMap", "Map of key -> table values", false, java.util.Map);
}

/*
 * Create a new table with the same schema as the inputTable
 */
function setupTable(inputTable) {
    var table = new DefaultTableDataSource();
    for(c = 0; c < inputTable.columnCount; c++) {
	    var colTitle = inputTable.getColumnTitle(c);
	    table.setColumnTitle(c, colTitle);
	}
	return table;
}

// run operation on table
function tableOp(context, table) {
	// find table column index
	col = table.getColumnIndex(columnName);

	if(col < 0)
		return; // column not found

	var tableMap = new java.util.LinkedHashMap();

	for(row = 0; row < table.rowCount; row++) {
	    // use string value as row key
		var rowKey = Packages.ca.phon.formatter.FormatterUtil.format(table.getValueAt(row, col));

		var keyTable = tableMap.get(rowKey);
		if(keyTable == null) {
		    keyTable = setupTable(table);
		    tableMap.put(rowKey, keyTable);
		}
		keyTable.addRow(table.getRow(row));
	}

	context.put("keySet", tableMap.keySet());
	context.put("tableMap", tableMap);
}
]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="148" y="168"/>
                                                    </extensions>
                                                </node>
                                                <ogcn:macro id="a2012897bda44f8" name="Setup Buffer Name" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                                    <graph id="1c6a2107">
                                                        <node id="e0004fc6644d405e" name="StringBuffer#&lt;init&gt;(String)" type="class:ca.gedge.opgraph.nodes.reflect.ConstructorNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.classMember"><![CDATA[<init>(java.lang.String)]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="15" y="15">
                                                                    <oga:default for="arg1" type="java.lang.String"/>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <node id="15291fa43e874202" name="Participant" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="15" y="146"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="d95498c8bf064f1e" name="StringBuffer#append(String)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[append(java.lang.String)]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="256" y="15"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="3c933f56c09043ef" name="StringBuffer#toString()" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[toString()]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="507" y="15"/>
                                                            </extensions>
                                                        </node>
                                                        <link dest="3c933f56c09043ef" destField="obj" source="d95498c8bf064f1e" sourceField="value"/>
                                                        <link dest="d95498c8bf064f1e" destField="obj" source="e0004fc6644d405e" sourceField="value"/>
                                                        <link dest="d95498c8bf064f1e" destField="arg1" source="15291fa43e874202" sourceField="name"/>
                                                        <extensions>
                                                            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                                        </extensions>
                                                    </graph>
                                                    <ogcn:published_input field="obj" name="speaker" ref="15291fa43e874202"/>
                                                    <ogcn:published_input field="arg1" name="arg1" ref="e0004fc6644d405e"/>
                                                    <ogcn:published_output field="value" name="value" ref="3c933f56c09043ef"/>
                                                    <extensions>
                                                        <oga:meta x="205" y="390">
                                                            <oga:default for="arg1" type="java.lang.String">Syllable Structure (by Session)_</oga:default>
                                                        </oga:meta>
                                                    </extensions>
                                                </ogcn:macro>
                                                <node id="c37e4ce7fc204887" name="Add Frequency Columns" type="class:ca.phon.app.opgraph.nodes.table.TableScriptNode">
                                                    <input name="tableMap" optional="false"/>
                                                    <output name="freqTable" type="ca.phon.query.report.datasource.DefaultTableDataSource"/>
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	inputs.add("tableMap", "", false, false);

	outputs.add("freqTable", "", false, Packages.ca.phon.query.report.datasource.DefaultTableDataSource);
}

function tableOp(context, table) {
	var tableMap = context.get("tableMap");
	var freqTable = new Packages.ca.phon.query.report.datasource.DefaultTableDataSource();

	// setup columns
	freqTable.setColumnTitle(0, table.getColumnTitle(0));

	var colIdx = 1;
	for(var col = 1; col < table.columnCount; col++) {
		freqTable.setColumnTitle(colIdx++, table.getColumnTitle(col));
		freqTable.setColumnTitle(colIdx++, "% " + table.getColumnTitle(col));
	}

	for(var row = 0; row < table.rowCount; row++) {
		var rowData = [];
		var tableData = table.getRow(row);

		rowData[0] = tableData[0];
		colIdx = 1;

		for(var col = 1; col < table.columnCount; col++) {
			var total = tableMap.get(table.getColumnTitle(col)).rowCount;
			var count = tableData[col];
			var freq = (count / total) * 100.0;

			rowData[colIdx++] = new java.lang.Integer(count);
			rowData[colIdx++] = freq;
		}

		freqTable.addRow(rowData);
	}

	context.put("freqTable", freqTable);
}
]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="357" y="36"/>
                                                    </extensions>
                                                </node>
                                                <node id="9df2519ebf114209" type="class:ca.phon.app.opgraph.nodes.table.SortNode">
                                                    <extensions>
                                                        <opqry:sortoptions>
                                                            <opqry:sortBy column="Structure" order="ascending" type="plain"/>
                                                        </opqry:sortoptions>
                                                        <oga:settings/>
                                                        <oga:meta x="558" y="15"/>
                                                    </extensions>
                                                </node>
                                                <node id="46e57ad97cd24932" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                    <input name="data" optional="false">Data to print</input>
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="dataTemplate"><![CDATA[$DATA]]></oga:property>
                                                            <oga:property key="showText"><![CDATA[false]]></oga:property>
                                                            <oga:property key="showTable"><![CDATA[true]]></oga:property>
                                                            <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="711" y="15"/>
                                                    </extensions>
                                                </node>
                                                <ogcn:macro id="361d5011baab480f" name="Add to Report Template" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                                    <graph id="45e80c0b">
                                                        <node id="4c45fbec63184847" name="Set Caption" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                            <input name="data" optional="false">Data to print</input>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="dataTemplate"><![CDATA[
#set($caption = "<h3>Syllable Structure (by Session) : $DATA</h3>")
]]></oga:property>
                                                                    <oga:property key="showText"><![CDATA[true]]></oga:property>
                                                                    <oga:property key="showTable"><![CDATA[false]]></oga:property>
                                                                    <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="51" y="48">
                                                                    <oga:default for="buffer" type="java.lang.String">Report Template</oga:default>
                                                                    <oga:default for="append" type="java.lang.Boolean">true</oga:default>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <node id="7bb1cf0a3fe54122" name="Add to Template" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                            <input name="data" optional="false">Data to print</input>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="dataTemplate"><![CDATA[
#set($tableName = "$DATA")
#if($tables.containsKey($tableName))
#set($table = $tables.get($tableName))
#printTableWithIdAndCaption( $table $tableName $caption [] )
#else
$caption

No Results
#end
]]></oga:property>
                                                                    <oga:property key="showText"><![CDATA[true]]></oga:property>
                                                                    <oga:property key="showTable"><![CDATA[false]]></oga:property>
                                                                    <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="54" y="177">
                                                                    <oga:default for="buffer" type="java.lang.String">Report Template</oga:default>
                                                                    <oga:default for="append" type="java.lang.Boolean">true</oga:default>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <extensions>
                                                            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                                        </extensions>
                                                    </graph>
                                                    <ogcn:published_input field="data" name="speaker" ref="4c45fbec63184847"/>
                                                    <ogcn:published_input field="data" name="bufferName" ref="7bb1cf0a3fe54122"/>
                                                    <extensions>
                                                        <oga:meta x="791" y="203"/>
                                                    </extensions>
                                                </ogcn:macro>
                                                <link dest="46e57ad97cd24932" destField="data" source="9df2519ebf114209" sourceField="table"/>
                                                <link dest="a2012897bda44f8" destField="speaker" source="34a75653eea64d15" sourceField="obj"/>
                                                <link dest="361d5011baab480f" destField="speaker" source="34a75653eea64d15" sourceField="obj"/>
                                                <link dest="46e57ad97cd24932" destField="buffer" source="a2012897bda44f8" sourceField="value"/>
                                                <link dest="361d5011baab480f" destField="bufferName" source="46e57ad97cd24932" sourceField="buffer"/>
                                                <link dest="9b7b38075b0b44fc" destField="table" source="4c22960fe18b4e7c" sourceField="obj"/>
                                                <link dest="7c90b8bc" destField="table" source="4c22960fe18b4e7c" sourceField="obj"/>
                                                <link dest="c37e4ce7fc204887" destField="tableMap" source="7c90b8bc" sourceField="tableMap"/>
                                                <link dest="c37e4ce7fc204887" destField="table" source="9b7b38075b0b44fc" sourceField="table"/>
                                                <link dest="9df2519ebf114209" destField="table" source="c37e4ce7fc204887" sourceField="freqTable"/>
                                                <extensions>
                                                    <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                                </extensions>
                                            </graph>
                                            <ogcn:published_input field="obj" name="speaker" ref="34a75653eea64d15"/>
                                            <ogcn:published_input field="obj" name="obj" ref="4c22960fe18b4e7c"/>
                                            <extensions>
                                                <oga:meta x="561" y="145"/>
                                            </extensions>
                                        </ogcn:macro>
                                        <link dest="45faec77" destField="table" source="47c22615" sourceField="obj"/>
                                        <link dest="3c1623ed" destField="obj" source="45faec77" sourceField="syllTable"/>
                                        <link dest="3c1623ed" destField="speaker" source="cf6050cb379e46e4" sourceField="obj"/>
                                        <link dest="304f07bd533d4538" destField="obj" source="45faec77" sourceField="syllTable"/>
                                        <link dest="304f07bd533d4538" destField="speaker" source="cf6050cb379e46e4" sourceField="obj"/>
                                        <extensions>
                                            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                        </extensions>
                                    </graph>
                                    <ogcn:published_input field="obj" name="table" ref="47c22615"/>
                                    <ogcn:published_input field="obj" name="obj" ref="cf6050cb379e46e4"/>
                                    <extensions>
                                        <oga:meta x="262" y="830"/>
                                    </extensions>
                                </ogcn:macro>
                                <ogcn:macro id="c3a5d71d15704c6f" name="Mean Babble Level" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                    <graph id="61d52457">
                                        <node id="f2b0e896f7884dea" name="table" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="15" y="15"/>
                                            </extensions>
                                        </node>
                                        <node id="b9a7aaa10d754522" name="Participant" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="15" y="160"/>
                                            </extensions>
                                        </node>
                                        <node id="117b1f6cbc42428c" name="Add Mean Babble Level" type="class:ca.phon.app.opgraph.nodes.table.TableScriptNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="__script"><![CDATA[importClass(Packages.ca.phon.ipa.IPATranscriptBuilder)

var placeFeatures = [
	"{labial, -dental}",
	"{labial, dental}",
	"{dental}",
	"{alveolar}",
	"{alveopalatal}",
	"{lateral}",
	"{retroflex}",
	"{palatal}",
	"{velar}",
	"{uvular}",
	"{pharyngeal}",
	"{laryngeal}"
];

var mannerFeatures = [
	"{stop, -nasal}",
	"{fricative}",
	"{affricate}",
	"{nasal}",
	"{liquid, lateral}",
	"{rhotic}",
	"{glide}",
	"{vowel}"
];

function init(inputs, outputs) {
}

function getFeatures(featureArray, ele) {
	var retVal = "\u2205";

	for(var i = 0; i < featureArray.length; i++) {
		var features = featureArray[i];
		var transcript = (new IPATranscriptBuilder()).append(ele).toIPATranscript();
		if(transcript.matches(features)) {
			retVal = features;
			break;
		}
	}

	return retVal;
}

// return a set of consonant types {place+manner}
function getConsonantTypes(ipa) {
	var retVal = new java.util.HashSet();
	var phonex = "[^\\v{glide}{glottal}]";
	var phones = ipa.removePunctuation();

	var phonexPattern = Packages.ca.phon.phonex.PhonexPattern.compile(phonex);
	var matcher = phonexPattern.matcher(phones);

	while(matcher.find()) {
		var match = (new IPATranscriptBuilder()).append(matcher.group()).toIPATranscript();

		if(match.length() > 0) {
			var ele = match.elementAt(0);

			var pf = getFeatures(placeFeatures, ele);
			var mf = getFeatures(mannerFeatures, ele);

			var type = pf + " + " + mf;
			retVal.add(type);
		}
	}

	return retVal;
}

function getMeanBabbleLevel(ipa) {
	var consonantTypes = getConsonantTypes(ipa);

	if(consonantTypes.size() == 0) {
		return 1;
	} else if(consonantTypes.size() == 1) {
		return 2;
	} else {
		return 3;
	}
}

function tableOp(context, table) {
	var colIdx = table.columnCount;
	table.setColumnTitle(colIdx, "Mean Babble Level");

	for(var row = 0; row < table.rowCount; row++) {
		var tableData = table.getRow(row);

		var actualSyllabification = table.getValueAt(row, "Actual Syllabification (Word)");
		var ipa = (new IPATranscriptBuilder()).append(actualSyllabification).toIPATranscript();

		tableData[colIdx] = getMeanBabbleLevel(ipa);
	}
}
]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="209" y="48"/>
                                            </extensions>
                                        </node>
                                        <ogcn:macro id="e59f22e93c0416a" name="Mean Babble Level (Total)" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                            <graph id="17dcda9c">
                                                <node id="536cd64980e047a7" name="TableDataSource" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.TableDataSource]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="19" y="17"/>
                                                    </extensions>
                                                </node>
                                                <node id="262b6ee690c24433" name="speaker" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="15" y="277"/>
                                                    </extensions>
                                                </node>
                                                <node id="9c4f740ed27b4b8d" type="class:ca.phon.app.opgraph.nodes.table.InventoryNode">
                                                    <extensions>
                                                        <opqry:inventoryoptions>
                                                            <opqry:column caseSensitive="false" column="Mean Babble Level" ignoreDiacritics="true"/>
                                                        </opqry:inventoryoptions>
                                                        <oga:settings/>
                                                        <oga:meta x="204" y="15"/>
                                                    </extensions>
                                                </node>
                                                <ogcn:macro id="2556c0ad40cf4438" name="Setup Buffer Name" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                                    <graph id="7961bc92">
                                                        <node id="3856b9f26f9c415d" name="StringBuffer#&lt;init&gt;(String)" type="class:ca.gedge.opgraph.nodes.reflect.ConstructorNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.classMember"><![CDATA[<init>(java.lang.String)]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="15" y="15">
                                                                    <oga:default for="arg1" type="java.lang.String"/>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <node id="19e09741c5154cc3" name="Participant" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="15" y="146"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="854df8b4a9ba47b4" name="StringBuffer#append(String)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[append(java.lang.String)]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="256" y="15"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="efa7d06fc2d741c5" name="StringBuffer#toString()" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[toString()]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="507" y="15"/>
                                                            </extensions>
                                                        </node>
                                                        <link dest="efa7d06fc2d741c5" destField="obj" source="854df8b4a9ba47b4" sourceField="value"/>
                                                        <link dest="854df8b4a9ba47b4" destField="obj" source="3856b9f26f9c415d" sourceField="value"/>
                                                        <link dest="854df8b4a9ba47b4" destField="arg1" source="19e09741c5154cc3" sourceField="name"/>
                                                        <extensions>
                                                            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                                        </extensions>
                                                    </graph>
                                                    <ogcn:published_input field="obj" name="speaker" ref="19e09741c5154cc3"/>
                                                    <ogcn:published_input field="arg1" name="arg1" ref="3856b9f26f9c415d"/>
                                                    <ogcn:published_output field="value" name="value" ref="efa7d06fc2d741c5"/>
                                                    <extensions>
                                                        <oga:meta x="205" y="277">
                                                            <oga:default for="arg1" type="java.lang.String">Mean Babble Level_</oga:default>
                                                        </oga:meta>
                                                    </extensions>
                                                </ogcn:macro>
                                                <node id="f3b305518e5b4ac6" name="Add Frequency Column" type="class:ca.phon.app.opgraph.nodes.table.TableScriptNode">
                                                    <input name="total" optional="false"/>
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	inputs.add("total", "", false, false);
}

function tableOp(context, table) {
	var total = context.get("total");
	var colIdx = table.columnCount;
	table.setColumnTitle(colIdx, "%");

	for(var row = 0; row < table.rowCount; row++) {
		var rowData = table.getRow(row);
		var count = rowData[1];
		var freq = (count / total) * 100.0;

		rowData[2] = freq;
	}
}
]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="357" y="15"/>
                                                    </extensions>
                                                </node>
                                                <node id="2ab4cd6392f7428b" type="class:ca.phon.app.opgraph.nodes.table.SortNode">
                                                    <extensions>
                                                        <opqry:sortoptions>
                                                            <opqry:sortBy column="Mean Babble Level" order="ascending" type="plain"/>
                                                        </opqry:sortoptions>
                                                        <oga:settings/>
                                                        <oga:meta x="558" y="15"/>
                                                    </extensions>
                                                </node>
                                                <node id="582067365e304b7d" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                    <input name="data" optional="false">Data to print</input>
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="dataTemplate"><![CDATA[$DATA]]></oga:property>
                                                            <oga:property key="showText"><![CDATA[false]]></oga:property>
                                                            <oga:property key="showTable"><![CDATA[true]]></oga:property>
                                                            <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="711" y="15"/>
                                                    </extensions>
                                                </node>
                                                <ogcn:macro id="315090dcaacc4332" name="Add to Report Template" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                                    <graph id="54c5fd69">
                                                        <node id="75a7bebd3699496b" name="Set Caption" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                            <input name="data" optional="false">Data to print</input>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="dataTemplate"><![CDATA[
#set($caption = "<h3>Mean Babble Level : $DATA</h3>")
]]></oga:property>
                                                                    <oga:property key="showText"><![CDATA[true]]></oga:property>
                                                                    <oga:property key="showTable"><![CDATA[false]]></oga:property>
                                                                    <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="51" y="48">
                                                                    <oga:default for="buffer" type="java.lang.String">Report Template</oga:default>
                                                                    <oga:default for="append" type="java.lang.Boolean">true</oga:default>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <node id="9fe3420948a44d16" name="Add to Template" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                            <input name="data" optional="false">Data to print</input>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="dataTemplate"><![CDATA[
#set($tableName = "$DATA")
#if($tables.containsKey($tableName))
#set($table = $tables.get($tableName))
#printTableWithIdAndCaption( $table $tableName $caption [] )
#else
$caption

No Results
#end
]]></oga:property>
                                                                    <oga:property key="showText"><![CDATA[true]]></oga:property>
                                                                    <oga:property key="showTable"><![CDATA[false]]></oga:property>
                                                                    <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="54" y="177">
                                                                    <oga:default for="buffer" type="java.lang.String">Report Template</oga:default>
                                                                    <oga:default for="append" type="java.lang.Boolean">true</oga:default>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <extensions>
                                                            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                                        </extensions>
                                                    </graph>
                                                    <ogcn:published_input field="data" name="speaker" ref="75a7bebd3699496b"/>
                                                    <ogcn:published_input field="data" name="bufferName" ref="9fe3420948a44d16"/>
                                                    <extensions>
                                                        <oga:meta x="868" y="14"/>
                                                    </extensions>
                                                </ogcn:macro>
                                                <link dest="2ab4cd6392f7428b" destField="table" source="f3b305518e5b4ac6" sourceField="table"/>
                                                <link dest="582067365e304b7d" destField="data" source="2ab4cd6392f7428b" sourceField="table"/>
                                                <link dest="2556c0ad40cf4438" destField="speaker" source="262b6ee690c24433" sourceField="obj"/>
                                                <link dest="315090dcaacc4332" destField="speaker" source="262b6ee690c24433" sourceField="obj"/>
                                                <link dest="582067365e304b7d" destField="buffer" source="2556c0ad40cf4438" sourceField="value"/>
                                                <link dest="315090dcaacc4332" destField="bufferName" source="582067365e304b7d" sourceField="buffer"/>
                                                <link dest="f3b305518e5b4ac6" destField="table" source="9c4f740ed27b4b8d" sourceField="table"/>
                                                <link dest="f3b305518e5b4ac6" destField="total" source="536cd64980e047a7" sourceField="rowCount"/>
                                                <link dest="9c4f740ed27b4b8d" destField="table" source="536cd64980e047a7" sourceField="obj"/>
                                                <extensions>
                                                    <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                                </extensions>
                                            </graph>
                                            <ogcn:published_input field="obj" name="speaker" ref="262b6ee690c24433"/>
                                            <ogcn:published_input field="obj" name="obj" ref="536cd64980e047a7"/>
                                            <extensions>
                                                <oga:meta x="445" y="50"/>
                                            </extensions>
                                        </ogcn:macro>
                                        <ogcn:macro id="455c63934e7b460c" name="Mean Babble Level (by Session)" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                            <graph id="4485f9c8">
                                                <node id="c5954c4c2e8242f3" name="TableDataSource" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.TableDataSource]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="7" y="26"/>
                                                    </extensions>
                                                </node>
                                                <node id="e5d4044eae2b4148" name="speaker" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="15" y="277"/>
                                                    </extensions>
                                                </node>
                                                <node id="26d8074f11a4469e" type="class:ca.phon.app.opgraph.nodes.table.InventoryNode">
                                                    <extensions>
                                                        <opqry:inventoryoptions>
                                                            <opqry:groupBy caseSensitive="false" column="Session" ignoreDiacritics="true"/>
                                                            <opqry:column caseSensitive="false" column="Mean Babble Level" ignoreDiacritics="true"/>
                                                        </opqry:inventoryoptions>
                                                        <oga:settings/>
                                                        <oga:meta x="204" y="15"/>
                                                    </extensions>
                                                </node>
                                                <node id="8bf24634c804fef" name="Split Table" type="class:ca.phon.app.opgraph.nodes.table.TableScriptNode">
                                                    <output name="keySet" type="java.util.Set">Unique values from given column name</output>
                                                    <output name="tableMap" type="java.util.Map">Map of key -&gt; table values</output>
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="columnName"><![CDATA[Session]]></oga:property>
                                                            <oga:property key="__script"><![CDATA[/*
 * Phon - An open source tool for research in phonology.
 * Copyright (C) 2005 - 2017, Gregory Hedlund <ghedlund@mun.ca> and Yvan Rose <yrose@mun.ca>
 * Dept of Linguistics, Memorial University <https://phon.ca>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

 /**
  * Split Table.js
  *
  * Script for use with ca.phon.app.opgraph.nodes.table.TableScriptNode
  *
  * Split table based on column name.  Two outputs
  * are produced, a set of keys from the column used in the filter  and a
  * map of key -> table values.
  */

var columnParamInfo = {
	"id": "columnName",
	"title": "Column Name",
	"def": "",
	"prompt": "Enter column name"
}

function setup_params(params) {
	var columnParam = new StringScriptParam(
		columnParamInfo.id,
		columnParamInfo.title,
		columnParamInfo.def);
	columnParam.setPrompt(columnParamInfo.prompt);
	params.add(columnParam);
}

// add custom inputs/outputs here
function init(inputs, outputs) {
	outputs.add("keySet", "Unique values from given column name", false, java.util.Set);
	outputs.add("tableMap", "Map of key -> table values", false, java.util.Map);
}

/*
 * Create a new table with the same schema as the inputTable
 */
function setupTable(inputTable) {
    var table = new DefaultTableDataSource();
    for(c = 0; c < inputTable.columnCount; c++) {
	    var colTitle = inputTable.getColumnTitle(c);
	    table.setColumnTitle(c, colTitle);
	}
	return table;
}

// run operation on table
function tableOp(context, table) {
	// find table column index
	col = table.getColumnIndex(columnName);

	if(col < 0)
		return; // column not found

	var tableMap = new java.util.LinkedHashMap();

	for(row = 0; row < table.rowCount; row++) {
	    // use string value as row key
		var rowKey = Packages.ca.phon.formatter.FormatterUtil.format(table.getValueAt(row, col));

		var keyTable = tableMap.get(rowKey);
		if(keyTable == null) {
		    keyTable = setupTable(table);
		    tableMap.put(rowKey, keyTable);
		}
		keyTable.addRow(table.getRow(row));
	}

	context.put("keySet", tableMap.keySet());
	context.put("tableMap", tableMap);
}
]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="204" y="146"/>
                                                    </extensions>
                                                </node>
                                                <ogcn:macro id="fea3c514af3e46b1" name="Setup Buffer Name" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                                    <graph id="121a3d30">
                                                        <node id="d00a9320f7404b4d" name="StringBuffer#&lt;init&gt;(String)" type="class:ca.gedge.opgraph.nodes.reflect.ConstructorNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.classMember"><![CDATA[<init>(java.lang.String)]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="15" y="15">
                                                                    <oga:default for="arg1" type="java.lang.String"/>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <node id="459bc03c75704994" name="Participant" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="15" y="146"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="725b7b87a124e56" name="StringBuffer#append(String)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[append(java.lang.String)]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="256" y="15"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="337fd6eb26684299" name="StringBuffer#toString()" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[toString()]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="507" y="15"/>
                                                            </extensions>
                                                        </node>
                                                        <link dest="337fd6eb26684299" destField="obj" source="725b7b87a124e56" sourceField="value"/>
                                                        <link dest="725b7b87a124e56" destField="obj" source="d00a9320f7404b4d" sourceField="value"/>
                                                        <link dest="725b7b87a124e56" destField="arg1" source="459bc03c75704994" sourceField="name"/>
                                                        <extensions>
                                                            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                                        </extensions>
                                                    </graph>
                                                    <ogcn:published_input field="obj" name="speaker" ref="459bc03c75704994"/>
                                                    <ogcn:published_input field="arg1" name="arg1" ref="d00a9320f7404b4d"/>
                                                    <ogcn:published_output field="value" name="value" ref="337fd6eb26684299"/>
                                                    <extensions>
                                                        <oga:meta x="205" y="277">
                                                            <oga:default for="arg1" type="java.lang.String">Mean Babble Level (by Session)_</oga:default>
                                                        </oga:meta>
                                                    </extensions>
                                                </ogcn:macro>
                                                <node id="ec5c9a7ddce147ce" name="Add Frequency Columns" type="class:ca.phon.app.opgraph.nodes.table.TableScriptNode">
                                                    <input name="tableMap" optional="false"/>
                                                    <output name="freqTable" type="ca.phon.query.report.datasource.DefaultTableDataSource"/>
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	inputs.add("tableMap", "", false, false);

	outputs.add("freqTable", "", false, Packages.ca.phon.query.report.datasource.DefaultTableDataSource);
}

function tableOp(context, table) {
	var tableMap = context.get("tableMap");
	var freqTable = new Packages.ca.phon.query.report.datasource.DefaultTableDataSource();

	// setup columns
	freqTable.setColumnTitle(0, table.getColumnTitle(0));

	var colIdx = 1;
	for(var col = 1; col < table.columnCount; col++) {
		freqTable.setColumnTitle(colIdx++, table.getColumnTitle(col));
		freqTable.setColumnTitle(colIdx++, "% " + table.getColumnTitle(col));
	}

	for(var row = 0; row < table.rowCount; row++) {
		var rowData = [];
		var tableData = table.getRow(row);

		rowData[0] = tableData[0];
		colIdx = 1;

		for(var col = 1; col < table.columnCount; col++) {
			var total = tableMap.get(table.getColumnTitle(col)).rowCount;
			var count = tableData[col];
			var freq = (count / total) * 100.0;

			rowData[colIdx++] = new java.lang.Integer(count);
			rowData[colIdx++] = freq;
		}

		freqTable.addRow(rowData);
	}

	context.put("freqTable", freqTable);
}
]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="362" y="15"/>
                                                    </extensions>
                                                </node>
                                                <node id="adb22cd51e934885" type="class:ca.phon.app.opgraph.nodes.table.SortNode">
                                                    <extensions>
                                                        <opqry:sortoptions>
                                                            <opqry:sortBy column="Mean Babble Level" order="ascending" type="plain"/>
                                                        </opqry:sortoptions>
                                                        <oga:settings/>
                                                        <oga:meta x="558" y="15"/>
                                                    </extensions>
                                                </node>
                                                <node id="e25649dd23b3479f" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                    <input name="data" optional="false">Data to print</input>
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="dataTemplate"><![CDATA[$DATA]]></oga:property>
                                                            <oga:property key="showText"><![CDATA[false]]></oga:property>
                                                            <oga:property key="showTable"><![CDATA[true]]></oga:property>
                                                            <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="711" y="15"/>
                                                    </extensions>
                                                </node>
                                                <ogcn:macro id="eee148baf194879" name="Add to Report Template" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                                    <graph id="6447457c">
                                                        <node id="3ef220df55d3454e" name="Set Caption" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                            <input name="data" optional="false">Data to print</input>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="dataTemplate"><![CDATA[
#set($caption = "<h3>Mean Babble Level (by Session) : $DATA</h3>")
]]></oga:property>
                                                                    <oga:property key="showText"><![CDATA[true]]></oga:property>
                                                                    <oga:property key="showTable"><![CDATA[false]]></oga:property>
                                                                    <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="51" y="48">
                                                                    <oga:default for="buffer" type="java.lang.String">Report Template</oga:default>
                                                                    <oga:default for="append" type="java.lang.Boolean">true</oga:default>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <node id="afddd18f666945ab" name="Add to Template" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                            <input name="data" optional="false">Data to print</input>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="dataTemplate"><![CDATA[
#set($tableName = "$DATA")
#if($tables.containsKey($tableName))
#set($table = $tables.get($tableName))
#printTableWithIdAndCaption( $table $tableName $caption [] )
#else
$caption

No Results
#end
]]></oga:property>
                                                                    <oga:property key="showText"><![CDATA[true]]></oga:property>
                                                                    <oga:property key="showTable"><![CDATA[false]]></oga:property>
                                                                    <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="54" y="177">
                                                                    <oga:default for="buffer" type="java.lang.String">Report Template</oga:default>
                                                                    <oga:default for="append" type="java.lang.Boolean">true</oga:default>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <extensions>
                                                            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                                        </extensions>
                                                    </graph>
                                                    <ogcn:published_input field="data" name="speaker" ref="3ef220df55d3454e"/>
                                                    <ogcn:published_input field="data" name="bufferName" ref="afddd18f666945ab"/>
                                                    <extensions>
                                                        <oga:meta x="870" y="15"/>
                                                    </extensions>
                                                </ogcn:macro>
                                                <link dest="e25649dd23b3479f" destField="data" source="adb22cd51e934885" sourceField="table"/>
                                                <link dest="fea3c514af3e46b1" destField="speaker" source="e5d4044eae2b4148" sourceField="obj"/>
                                                <link dest="eee148baf194879" destField="speaker" source="e5d4044eae2b4148" sourceField="obj"/>
                                                <link dest="e25649dd23b3479f" destField="buffer" source="fea3c514af3e46b1" sourceField="value"/>
                                                <link dest="eee148baf194879" destField="bufferName" source="e25649dd23b3479f" sourceField="buffer"/>
                                                <link dest="ec5c9a7ddce147ce" destField="tableMap" source="8bf24634c804fef" sourceField="tableMap"/>
                                                <link dest="ec5c9a7ddce147ce" destField="table" source="26d8074f11a4469e" sourceField="table"/>
                                                <link dest="adb22cd51e934885" destField="table" source="ec5c9a7ddce147ce" sourceField="freqTable"/>
                                                <link dest="26d8074f11a4469e" destField="table" source="c5954c4c2e8242f3" sourceField="obj"/>
                                                <link dest="8bf24634c804fef" destField="table" source="c5954c4c2e8242f3" sourceField="obj"/>
                                                <extensions>
                                                    <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                                </extensions>
                                            </graph>
                                            <ogcn:published_input field="obj" name="speaker" ref="e5d4044eae2b4148"/>
                                            <ogcn:published_input field="obj" name="obj" ref="c5954c4c2e8242f3"/>
                                            <extensions>
                                                <oga:meta x="450" y="173"/>
                                            </extensions>
                                        </ogcn:macro>
                                        <link dest="117b1f6cbc42428c" destField="table" source="f2b0e896f7884dea" sourceField="obj"/>
                                        <link dest="e59f22e93c0416a" destField="speaker" source="b9a7aaa10d754522" sourceField="obj"/>
                                        <link dest="455c63934e7b460c" destField="speaker" source="b9a7aaa10d754522" sourceField="obj"/>
                                        <link dest="e59f22e93c0416a" destField="obj" source="117b1f6cbc42428c" sourceField="table"/>
                                        <link dest="455c63934e7b460c" destField="obj" source="117b1f6cbc42428c" sourceField="table"/>
                                        <extensions>
                                            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                        </extensions>
                                    </graph>
                                    <ogcn:published_input field="obj" name="table" ref="f2b0e896f7884dea"/>
                                    <ogcn:published_input field="obj" name="obj" ref="b9a7aaa10d754522"/>
                                    <extensions>
                                        <oga:meta x="262" y="951"/>
                                    </extensions>
                                </ogcn:macro>
                                <link dest="39f91ef7" destField="speaker" source="45508fae" sourceField="obj"/>
                                <link dest="71606628" destField="tableMap" source="7cbf1d09" sourceField="obj"/>
                                <link dest="39f91ef7" destField="result total" source="c81dda4" sourceField="obj"/>
                                <link dest="39f91ef7" destField="table" source="578fcaef" sourceField="obj"/>
                                <link dest="71606628" destField="speaker" source="45508fae" sourceField="obj"/>
                                <link dest="39f91ef7" destField="tableMap" source="7cbf1d09" sourceField="obj"/>
                                <link dest="35376622" destField="obj" source="45508fae" sourceField="obj"/>
                                <link dest="35376622" destField="table" source="578fcaef" sourceField="obj"/>
                                <link dest="5c298b00" destField="speaker" source="45508fae" sourceField="obj"/>
                                <link dest="5c298b00" destField="data" source="578fcaef" sourceField="obj"/>
                                <link dest="9bee85a827324705" destField="tableMap" source="7cbf1d09" sourceField="obj"/>
                                <link dest="9bee85a827324705" destField="speaker" source="45508fae" sourceField="obj"/>
                                <link dest="9bee85a827324705" destField="table" source="578fcaef" sourceField="obj"/>
                                <link dest="9bee85a827324705" destField="result total" source="578fcaef" sourceField="rowCount"/>
                                <link dest="9dee81f2bd624468" destField="table" source="578fcaef" sourceField="obj"/>
                                <link dest="9dee81f2bd624468" destField="obj" source="45508fae" sourceField="obj"/>
                                <link dest="fbb7c1ceae774d2a" destField="table" source="578fcaef" sourceField="obj"/>
                                <link dest="fbb7c1ceae774d2a" destField="obj" source="45508fae" sourceField="obj"/>
                                <link dest="c3a5d71d15704c6f" destField="table" source="578fcaef" sourceField="obj"/>
                                <link dest="c3a5d71d15704c6f" destField="obj" source="45508fae" sourceField="obj"/>
                                <extensions>
                                    <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                </extensions>
                            </graph>
                            <ogcn:published_input field="obj" name="speaker" ref="45508fae"/>
                            <ogcn:published_input field="obj" name="table" ref="578fcaef"/>
                            <ogcn:published_input field="obj" name="tableMap" ref="7cbf1d09"/>
                            <ogcn:published_input field="obj" name="result total" ref="c81dda4"/>
                            <extensions>
                                <oga:meta x="625" y="65"/>
                            </extensions>
                        </ogcn:macro>
                        <link dest="7f149b7d" destField="table" source="60a76f15" sourceField="obj"/>
                        <link dest="5aee518f" destField="tableMap" source="7f149b7d" sourceField="tableMap"/>
                        <link dest="5aee518f" destField="result total" source="60a76f15" sourceField="rowCount"/>
                        <link dest="5aee518f" destField="table" source="60a76f15" sourceField="obj"/>
                        <link dest="5aee518f" destField="speaker" source="68d90fd6bd914ea2" sourceField="obj"/>
                        <extensions>
                            <oga:notes>
                                <oga:note color="0xffff96" height="795" title="Inputs" width="303" x="6" y="19"/>
                            </oga:notes>
                            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                        </extensions>
                    </graph>
                    <ogcn:published_input field="obj" name="tableMap" ref="60a76f15"/>
                    <ogcn:published_input field="obj" name="speaker" ref="68d90fd6bd914ea2"/>
                    <extensions>
                        <oga:meta x="775" y="115"/>
                    </extensions>
                </ogcn:macro>
                <link dest="bbf482c5a66541f7" destField="speaker" source="5fc29abaa09040c1" sourceField="obj"/>
                <link dest="bbf482c5a66541f7" destField="tableMap" source="af4cdc9a1efb4b6e" sourceField="obj"/>
                <link dest="5fc29abaa09040c1" destField="obj" source="282a70f9" sourceField="obj"/>
                <link dest="350c5a14" destField="tableMap" source="bbf482c5a66541f7" sourceField="table"/>
                <link dest="350c5a14" destField="enabled" source="bbf482c5a66541f7" sourceField="exists"/>
                <link dest="350c5a14" destField="speaker" source="5fc29abaa09040c1" sourceField="obj"/>
                <link dest="f9aea4b" destField="data" source="64386b17" sourceField="value"/>
                <extensions>
                    <oga:notes>
                        <oga:note color="0xffff96" height="673" title="Inputs" width="255" x="22" y="139"/>
                    </oga:notes>
                    <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                </extensions>
            </graph>
            <ogcn:published_input field="obj" name="obj" ref="af4cdc9a1efb4b6e"/>
            <ogcn:published_input field="arg1" name="arg1" ref="64386b17"/>
            <extensions>
                <oga:settings>
                    <oga:property key="ca.gedge.opgraph.nodes.reflect.IterableClassNode.className"><![CDATA[java.util.ArrayList]]></oga:property>
                </oga:settings>
                <oga:meta x="1125" y="129">
                    <oga:default for="arg1" type="java.lang.String">Vocalizations</oga:default>
                </oga:meta>
            </extensions>
        </ogcn:macro>
        <ogcn:macro id="5dcadfd293fc444b" name="Words" type="ca.gedge.opgraph.nodes.reflect.IterableClassNode">
            <graph id="4505d74b">
                <node id="c6ca3973b9a4681" name="Current Object" type="class:ca.gedge.opgraph.nodes.reflect.ContextualItemClassNode">
                    <extensions>
                        <oga:settings>
                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ContextualItemClassNode.key"><![CDATA[currentValue]]></oga:property>
                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ContextualItemClassNode.declaredClass"><![CDATA[java.lang.Object]]></oga:property>
                        </oga:settings>
                        <oga:meta x="41" y="39"/>
                    </extensions>
                </node>
                <node id="f70f3ab8ece24656" name="Table Map" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                    <extensions>
                        <oga:settings>
                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.util.Map]]></oga:property>
                        </oga:settings>
                        <oga:meta x="49" y="199"/>
                    </extensions>
                </node>
                <node id="b08bb3687c614edb" name="String#&lt;init&gt;(String)" type="class:ca.gedge.opgraph.nodes.reflect.ConstructorNode">
                    <extensions>
                        <oga:settings>
                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.classMember"><![CDATA[<init>(java.lang.String)]]></oga:property>
                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.declaredClass"><![CDATA[java.lang.String]]></oga:property>
                        </oga:settings>
                        <oga:meta x="78" y="302">
                            <oga:default for="arg1" type="java.lang.String">Words</oga:default>
                        </oga:meta>
                    </extensions>
                </node>
                <node id="9ef133c073f34fe7" name="To Participant Object" type="class:ca.gedge.opgraph.nodes.reflect.ObjectCastNode">
                    <extensions>
                        <oga:settings>
                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectCastNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                        </oga:settings>
                        <oga:meta x="237" y="45"/>
                    </extensions>
                </node>
                <node id="c816afbf8fbb4ddf" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                    <input name="data" optional="false">Data to print</input>
                    <extensions>
                        <oga:settings>
                            <oga:property key="dataTemplate"><![CDATA[
#h2("$DATA")
]]></oga:property>
                            <oga:property key="showText"><![CDATA[true]]></oga:property>
                            <oga:property key="showTable"><![CDATA[false]]></oga:property>
                            <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                        </oga:settings>
                        <oga:meta x="464" y="283">
                            <oga:default for="buffer" type="java.lang.String">Report Template</oga:default>
                            <oga:default for="append" type="java.lang.Boolean">true</oga:default>
                        </oga:meta>
                    </extensions>
                </node>
                <ogcn:macro id="c9704de2ca654250" name="Get Table of Results For Speaker" type="ca.gedge.opgraph.nodes.general.MacroNode">
                    <graph id="5409dc2d">
                        <node id="7ca4a63c958b450c" name="Object#toString()" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                            <extensions>
                                <oga:settings>
                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[toString()]]></oga:property>
                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.Object]]></oga:property>
                                </oga:settings>
                                <oga:meta x="105" y="70"/>
                            </extensions>
                        </node>
                        <node id="9ee1a25eea884ba1" name="Map#get(Object)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                            <extensions>
                                <oga:settings>
                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[get(java.lang.Object)]]></oga:property>
                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.util.Map]]></oga:property>
                                </oga:settings>
                                <oga:meta x="296" y="73"/>
                            </extensions>
                        </node>
                        <node id="df188f61c7224874" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                            <output name="exists" type="java.lang.Boolean">does table exist</output>
                            <output name="table" type="ca.phon.query.report.datasource.DefaultTableDataSource">table if exists, undefined otherwise</output>
                            <extensions>
                                <oga:settings>
                                    <oga:property key="__script"><![CDATA[
// setup input/output fields
function init(inputFields, outputFields) {
	inputFields.add("table", "");
	outputFields.add("exists", "does table exist", false, java.lang.Boolean);
	outputFields.add("table", "table if exists, undefined otherwise", false, Packages.ca.phon.query.report.datasource.DefaultTableDataSource);
}

function run(context) {
	var tableExists =
		(context.containsKey("table") && context.get("table") != null);
	context.put("exists", tableExists);
	context.put("table", context.get("table"));
}
]]></oga:property>
                                </oga:settings>
                                <oga:meta x="514" y="94"/>
                            </extensions>
                        </node>
                        <link dest="9ee1a25eea884ba1" destField="arg1" source="7ca4a63c958b450c" sourceField="value"/>
                        <link dest="df188f61c7224874" destField="table" source="9ee1a25eea884ba1" sourceField="value"/>
                        <extensions>
                            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                        </extensions>
                    </graph>
                    <ogcn:published_input field="obj" name="speaker" ref="7ca4a63c958b450c"/>
                    <ogcn:published_input field="obj" name="tableMap" ref="9ee1a25eea884ba1"/>
                    <ogcn:published_output field="exists" name="exists" ref="df188f61c7224874"/>
                    <ogcn:published_output field="table" name="table" ref="df188f61c7224874"/>
                    <extensions>
                        <oga:meta x="477" y="101"/>
                    </extensions>
                </ogcn:macro>
                <ogcn:macro id="d398fbf5bb384062" name="If Speaker Has Results" type="ca.gedge.opgraph.nodes.general.MacroNode">
                    <graph id="2d09e02a">
                        <node id="d8cd4d36cd854048" name="Table" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                            <extensions>
                                <oga:settings>
                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                </oga:settings>
                                <oga:meta x="47" y="126"/>
                            </extensions>
                        </node>
                        <node id="daca91ffe7994ca6" name="Participant" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                            <extensions>
                                <oga:settings>
                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                </oga:settings>
                                <oga:meta x="48" y="335"/>
                            </extensions>
                        </node>
                        <node id="210413a00354d53" name="Split Table by Session" type="class:ca.phon.app.opgraph.nodes.table.TableScriptNode">
                            <output name="keySet" type="java.util.Set">Unique values from given column name</output>
                            <output name="tableMap" type="java.util.Map">Map of key -&gt; table values</output>
                            <extensions>
                                <oga:settings>
                                    <oga:property key="columnName"><![CDATA[Session]]></oga:property>
                                    <oga:property key="__script"><![CDATA[/*
 * Phon - An open source tool for research in phonology.
 * Copyright (C) 2005 - 2017, Gregory Hedlund <ghedlund@mun.ca> and Yvan Rose <yrose@mun.ca>
 * Dept of Linguistics, Memorial University <https://phon.ca>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

 /**
  * Split Table.js
  *
  * Script for use with ca.phon.app.opgraph.nodes.table.TableScriptNode
  *
  * Split table based on column name.  Two outputs
  * are produced, a set of keys from the column used in the filter  and a
  * map of key -> table values.
  */

var columnParamInfo = {
	"id": "columnName",
	"title": "Column Name",
	"def": "",
	"prompt": "Enter column name"
}

function setup_params(params) {
	var columnParam = new StringScriptParam(
		columnParamInfo.id,
		columnParamInfo.title,
		columnParamInfo.def);
	columnParam.setPrompt(columnParamInfo.prompt);
	params.add(columnParam);
}

// add custom inputs/outputs here
function init(inputs, outputs) {
	outputs.add("keySet", "Unique values from given column name", false, java.util.Set);
	outputs.add("tableMap", "Map of key -> table values", false, java.util.Map);
}

/*
 * Create a new table with the same schema as the inputTable
 */
function setupTable(inputTable) {
    var table = new DefaultTableDataSource();
    for(c = 0; c < inputTable.columnCount; c++) {
	    var colTitle = inputTable.getColumnTitle(c);
	    table.setColumnTitle(c, colTitle);
	}
	return table;
}

// run operation on table
function tableOp(context, table) {
	// find table column index
	col = table.getColumnIndex(columnName);

	if(col < 0)
		return; // column not found

	var tableMap = new java.util.LinkedHashMap();

	for(row = 0; row < table.rowCount; row++) {
	    // use string value as row key
		var rowKey = Packages.ca.phon.formatter.FormatterUtil.format(table.getValueAt(row, col));

		var keyTable = tableMap.get(rowKey);
		if(keyTable == null) {
		    keyTable = setupTable(table);
		    tableMap.put(rowKey, keyTable);
		}
		keyTable.addRow(table.getRow(row));
	}

	context.put("keySet", tableMap.keySet());
	context.put("tableMap", tableMap);
}
]]></oga:property>
                                </oga:settings>
                                <oga:meta x="350" y="37"/>
                            </extensions>
                        </node>
                        <ogcn:macro id="c93bcac22d4c4174" name="Velleman Analysis" type="ca.gedge.opgraph.nodes.general.MacroNode">
                            <graph id="5fd08bb9">
                                <node id="d627ef0e20f44a59" name="result total" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.lang.Integer]]></oga:property>
                                        </oga:settings>
                                        <oga:meta x="15" y="15"/>
                                    </extensions>
                                </node>
                                <node id="e220c434a5dc4e49" name="speaker" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                        </oga:settings>
                                        <oga:meta x="13" y="105"/>
                                    </extensions>
                                </node>
                                <node id="851b03fbc2c949d1" name="table" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                        </oga:settings>
                                        <oga:meta x="11" y="392"/>
                                    </extensions>
                                </node>
                                <node id="c9f8bf3e770440a7" name="tableMap" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                    <extensions>
                                        <oga:settings>
                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.util.Map]]></oga:property>
                                        </oga:settings>
                                        <oga:meta x="15" y="534"/>
                                    </extensions>
                                </node>
                                <ogcn:macro id="9cebe3edfb544520" name="Total" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                    <graph id="4f6b3956">
                                        <node id="f13d2f2e9295488e" name="speaker" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="15" y="15"/>
                                            </extensions>
                                        </node>
                                        <node id="bcfd5ec00b204757" name="tableMap" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.util.Map]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="15" y="308"/>
                                            </extensions>
                                        </node>
                                        <ogcn:macro id="c6c7da14c624f76" name="Setup Buffer Name" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                            <graph id="20db47bb">
                                                <node id="f82cc80e4cc34494" name="StringBuffer#&lt;init&gt;(String)" type="class:ca.gedge.opgraph.nodes.reflect.ConstructorNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.classMember"><![CDATA[<init>(java.lang.String)]]></oga:property>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="15" y="15">
                                                            <oga:default for="arg1" type="java.lang.String"/>
                                                        </oga:meta>
                                                    </extensions>
                                                </node>
                                                <node id="18fcd697727e4e93" name="Participant" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="15" y="146"/>
                                                    </extensions>
                                                </node>
                                                <node id="9f49c1f2ec5d4550" name="StringBuffer#append(String)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[append(java.lang.String)]]></oga:property>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="256" y="15"/>
                                                    </extensions>
                                                </node>
                                                <node id="522c659117b34484" name="StringBuffer#toString()" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[toString()]]></oga:property>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="507" y="15"/>
                                                    </extensions>
                                                </node>
                                                <link dest="522c659117b34484" destField="obj" source="9f49c1f2ec5d4550" sourceField="value"/>
                                                <link dest="9f49c1f2ec5d4550" destField="obj" source="f82cc80e4cc34494" sourceField="value"/>
                                                <link dest="9f49c1f2ec5d4550" destField="arg1" source="18fcd697727e4e93" sourceField="name"/>
                                                <extensions>
                                                    <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                                </extensions>
                                            </graph>
                                            <ogcn:published_input field="obj" name="speaker" ref="18fcd697727e4e93"/>
                                            <ogcn:published_input field="arg1" name="arg1" ref="f82cc80e4cc34494"/>
                                            <ogcn:published_output field="value" name="value" ref="522c659117b34484"/>
                                            <extensions>
                                                <oga:meta x="205" y="15">
                                                    <oga:default for="arg1" type="java.lang.String">Total</oga:default>
                                                </oga:meta>
                                            </extensions>
                                        </ogcn:macro>
                                        <node id="4f341eaf83e14120" name="Create Totals Table" type="class:ca.phon.app.opgraph.nodes.PhonScriptNode">
                                            <input name="tableMap" optional="false"/>
                                            <output name="totalsTable" type="ca.phon.query.report.datasource.DefaultTableDataSource"/>
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	inputs.add("tableMap", "", false, false);

	outputs.add("totalsTable", "", false, Packages.ca.phon.query.report.datasource.DefaultTableDataSource);
}

function run(context) {
	var tableMap = context.get("tableMap");
	var totalsTable = new Packages.ca.phon.query.report.datasource.DefaultTableDataSource();

	totalsTable.setColumnTitle(0, "Session");
	totalsTable.setColumnTitle(1, "Count");

	var keySet = tableMap.keySet();
	var itr = keySet.iterator();
	var total = 0;
	while(itr.hasNext()) {
		var session = itr.next();
		var count = tableMap.get(session).rowCount;
		total += count;

		var rowData = [];
		rowData[0] = session;
		rowData[1] = new java.lang.Integer(count);

		totalsTable.addRow(rowData);
	}

	var rowData = [ "Total", new java.lang.Integer(total) ];
	totalsTable.addRow(rowData);

	context.put("totalsTable", totalsTable);
}
]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="159" y="308"/>
                                            </extensions>
                                        </node>
                                        <node id="340ec8baf6474bf9" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                            <input name="data" optional="false">Data to print</input>
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="dataTemplate"><![CDATA[$DATA]]></oga:property>
                                                    <oga:property key="showText"><![CDATA[false]]></oga:property>
                                                    <oga:property key="showTable"><![CDATA[true]]></oga:property>
                                                    <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="369" y="15"/>
                                            </extensions>
                                        </node>
                                        <ogcn:macro id="3378f2ec47c94279" name="Add to Report Template" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                            <graph id="100b1a13">
                                                <node id="6342c36f120a4628" name="Set Caption" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                    <input name="data" optional="false">Data to print</input>
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="dataTemplate"><![CDATA[
#set($caption = "<h3>Total : $DATA</h3>")
]]></oga:property>
                                                            <oga:property key="showText"><![CDATA[true]]></oga:property>
                                                            <oga:property key="showTable"><![CDATA[false]]></oga:property>
                                                            <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="51" y="48">
                                                            <oga:default for="buffer" type="java.lang.String">Report Template</oga:default>
                                                            <oga:default for="append" type="java.lang.Boolean">true</oga:default>
                                                        </oga:meta>
                                                    </extensions>
                                                </node>
                                                <node id="5a2f4df41954489b" name="Add to Template" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                    <input name="data" optional="false">Data to print</input>
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="dataTemplate"><![CDATA[
#set($tableName = "$DATA")
#if($tables.containsKey($tableName))
#set($table = $tables.get($tableName))
#printTableWithIdAndCaption( $table $tableName $caption [] )
#else
$caption

No Results
#end
]]></oga:property>
                                                            <oga:property key="showText"><![CDATA[true]]></oga:property>
                                                            <oga:property key="showTable"><![CDATA[false]]></oga:property>
                                                            <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="54" y="177">
                                                            <oga:default for="buffer" type="java.lang.String">Report Template</oga:default>
                                                            <oga:default for="append" type="java.lang.Boolean">true</oga:default>
                                                        </oga:meta>
                                                    </extensions>
                                                </node>
                                                <extensions>
                                                    <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                                </extensions>
                                            </graph>
                                            <ogcn:published_input field="data" name="speaker" ref="6342c36f120a4628"/>
                                            <ogcn:published_input field="data" name="bufferName" ref="5a2f4df41954489b"/>
                                            <extensions>
                                                <oga:meta x="528" y="15"/>
                                            </extensions>
                                        </ogcn:macro>
                                        <link dest="4f341eaf83e14120" destField="tableMap" source="bcfd5ec00b204757" sourceField="obj"/>
                                        <link dest="340ec8baf6474bf9" destField="data" source="4f341eaf83e14120" sourceField="totalsTable"/>
                                        <link dest="3378f2ec47c94279" destField="bufferName" source="340ec8baf6474bf9" sourceField="buffer"/>
                                        <link dest="340ec8baf6474bf9" destField="buffer" source="c6c7da14c624f76" sourceField="value"/>
                                        <link dest="3378f2ec47c94279" destField="speaker" source="f13d2f2e9295488e" sourceField="obj"/>
                                        <link dest="c6c7da14c624f76" destField="speaker" source="f13d2f2e9295488e" sourceField="obj"/>
                                        <extensions>
                                            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                        </extensions>
                                    </graph>
                                    <ogcn:published_input field="obj" name="tableMap" ref="bcfd5ec00b204757"/>
                                    <ogcn:published_input field="obj" name="speaker" ref="f13d2f2e9295488e"/>
                                    <extensions>
                                        <oga:meta x="262" y="24"/>
                                    </extensions>
                                </ogcn:macro>
                                <ogcn:macro id="79938a8481a14af6" name="Listing" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                    <graph id="6fee2f60">
                                        <node id="50f9249ba22e4159" name="data" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="711" y="439"/>
                                            </extensions>
                                        </node>
                                        <node id="facbec3764e842d5" name="speaker" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="711" y="439"/>
                                            </extensions>
                                        </node>
                                        <ogcn:macro id="82a6a0b111ee4f71" name="Setup Buffer Name" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                            <graph id="76b5b574">
                                                <node id="b1a72a92692346bc" name="StringBuffer#&lt;init&gt;(String)" type="class:ca.gedge.opgraph.nodes.reflect.ConstructorNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.classMember"><![CDATA[<init>(java.lang.String)]]></oga:property>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="15" y="15">
                                                            <oga:default for="arg1" type="java.lang.String"/>
                                                        </oga:meta>
                                                    </extensions>
                                                </node>
                                                <node id="a24483d0cbbd4bb1" name="Participant" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="15" y="146"/>
                                                    </extensions>
                                                </node>
                                                <node id="8dd72f8b99644919" name="StringBuffer#append(String)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[append(java.lang.String)]]></oga:property>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="256" y="15"/>
                                                    </extensions>
                                                </node>
                                                <node id="6feccce58ce34d93" name="StringBuffer#toString()" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[toString()]]></oga:property>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="507" y="15"/>
                                                    </extensions>
                                                </node>
                                                <link dest="6feccce58ce34d93" destField="obj" source="8dd72f8b99644919" sourceField="value"/>
                                                <link dest="8dd72f8b99644919" destField="obj" source="b1a72a92692346bc" sourceField="value"/>
                                                <link dest="8dd72f8b99644919" destField="arg1" source="a24483d0cbbd4bb1" sourceField="name"/>
                                                <extensions>
                                                    <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                                </extensions>
                                            </graph>
                                            <ogcn:published_input field="obj" name="speaker" ref="a24483d0cbbd4bb1"/>
                                            <ogcn:published_input field="arg1" name="arg1" ref="b1a72a92692346bc"/>
                                            <ogcn:published_output field="value" name="value" ref="6feccce58ce34d93"/>
                                            <extensions>
                                                <oga:meta x="228" y="144">
                                                    <oga:default for="arg1" type="java.lang.String">Listing_</oga:default>
                                                </oga:meta>
                                            </extensions>
                                        </ogcn:macro>
                                        <node id="719dde612dfc4338" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                            <input name="data" optional="false">Data to print</input>
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="dataTemplate"><![CDATA[$DATA]]></oga:property>
                                                    <oga:property key="showText"><![CDATA[false]]></oga:property>
                                                    <oga:property key="showTable"><![CDATA[true]]></oga:property>
                                                    <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="398" y="145"/>
                                            </extensions>
                                        </node>
                                        <ogcn:macro id="77bc60bdad254f4a" name="Add to Report Template" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                            <graph id="a391564">
                                                <node id="3162fe8e690b4e58" name="Set Caption" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                    <input name="data" optional="false">Data to print</input>
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="dataTemplate"><![CDATA[
#set($caption = "<h3>Listing : $DATA</h3>")
]]></oga:property>
                                                            <oga:property key="showText"><![CDATA[true]]></oga:property>
                                                            <oga:property key="showTable"><![CDATA[false]]></oga:property>
                                                            <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="50" y="48">
                                                            <oga:default for="buffer" type="java.lang.String">Report Template</oga:default>
                                                            <oga:default for="append" type="java.lang.Boolean">true</oga:default>
                                                        </oga:meta>
                                                    </extensions>
                                                </node>
                                                <node id="4353f46e1d50477f" name="Add to Template" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                    <input name="data" optional="false">Data to print</input>
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="dataTemplate"><![CDATA[
#set($tableName = "$DATA")
#if($tables.containsKey($tableName))
#set($table = $tables.get($tableName))
#printTableWithIdAndCaption( $table $tableName $caption ["Session", "Record #", "IPA Actual (Word)"] )
#else
$caption

No Results
#end
]]></oga:property>
                                                            <oga:property key="showText"><![CDATA[true]]></oga:property>
                                                            <oga:property key="showTable"><![CDATA[false]]></oga:property>
                                                            <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="54" y="177">
                                                            <oga:default for="buffer" type="java.lang.String">Report Template</oga:default>
                                                            <oga:default for="append" type="java.lang.Boolean">true</oga:default>
                                                        </oga:meta>
                                                    </extensions>
                                                </node>
                                                <extensions>
                                                    <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                                </extensions>
                                            </graph>
                                            <ogcn:published_input field="data" name="speaker" ref="3162fe8e690b4e58"/>
                                            <ogcn:published_input field="data" name="bufferName" ref="4353f46e1d50477f"/>
                                            <extensions>
                                                <oga:meta x="577" y="165"/>
                                            </extensions>
                                        </ogcn:macro>
                                        <link dest="719dde612dfc4338" destField="buffer" source="82a6a0b111ee4f71" sourceField="value"/>
                                        <link dest="719dde612dfc4338" destField="data" source="50f9249ba22e4159" sourceField="obj"/>
                                        <link dest="82a6a0b111ee4f71" destField="speaker" source="facbec3764e842d5" sourceField="obj"/>
                                        <link dest="77bc60bdad254f4a" destField="bufferName" source="719dde612dfc4338" sourceField="buffer"/>
                                        <link dest="77bc60bdad254f4a" destField="speaker" source="facbec3764e842d5" sourceField="obj"/>
                                    </graph>
                                    <ogcn:published_input field="obj" name="data" ref="50f9249ba22e4159"/>
                                    <ogcn:published_input field="obj" name="speaker" ref="facbec3764e842d5"/>
                                    <extensions>
                                        <oga:meta x="262" y="147"/>
                                    </extensions>
                                </ogcn:macro>
                                <ogcn:macro id="f6d359e6977e46a1" name="Initial Consonants" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                    <graph id="1fa91d45">
                                        <node id="30d711ac806546fd" name="result total" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.lang.Integer]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="15" y="15"/>
                                            </extensions>
                                        </node>
                                        <node id="3287d7c2d88a46e6" name="speaker" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="15" y="146"/>
                                            </extensions>
                                        </node>
                                        <node id="4949f22dac5c4ba2" name="table" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="15" y="439"/>
                                            </extensions>
                                        </node>
                                        <node id="f759a3bffdf14088" name="tableMap" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.util.Map]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="15" y="570"/>
                                            </extensions>
                                        </node>
                                        <ogcn:macro id="ddc57d4d5ad34955" name="Initial Consonants" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                            <graph id="72b35720">
                                                <node id="7adf4167e59b460e" name="speaker" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="15" y="15"/>
                                                    </extensions>
                                                </node>
                                                <node id="14605d47a104fd7" name="table" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="15" y="308"/>
                                                    </extensions>
                                                </node>
                                                <node id="39183c53213d4be0" name="Result Total" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.lang.Integer]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="45" y="443"/>
                                                    </extensions>
                                                </node>
                                                <ogcn:macro id="f2e89e1c5a1a4053" name="Setup Buffer Name" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                                    <graph id="235360f4">
                                                        <node id="9003b99573fa4e01" name="StringBuffer#&lt;init&gt;(String)" type="class:ca.gedge.opgraph.nodes.reflect.ConstructorNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.classMember"><![CDATA[<init>(java.lang.String)]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="15" y="15">
                                                                    <oga:default for="arg1" type="java.lang.String"/>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <node id="807c1119325b4c66" name="Participant" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="15" y="146"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="747db4866ed14dbd" name="StringBuffer#append(String)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[append(java.lang.String)]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="256" y="15"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="c3f75f0d6c1e4750" name="StringBuffer#toString()" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[toString()]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="507" y="15"/>
                                                            </extensions>
                                                        </node>
                                                        <link dest="c3f75f0d6c1e4750" destField="obj" source="747db4866ed14dbd" sourceField="value"/>
                                                        <link dest="747db4866ed14dbd" destField="obj" source="9003b99573fa4e01" sourceField="value"/>
                                                        <link dest="747db4866ed14dbd" destField="arg1" source="807c1119325b4c66" sourceField="name"/>
                                                        <extensions>
                                                            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                                        </extensions>
                                                    </graph>
                                                    <ogcn:published_input field="obj" name="speaker" ref="807c1119325b4c66"/>
                                                    <ogcn:published_input field="arg1" name="arg1" ref="9003b99573fa4e01"/>
                                                    <ogcn:published_output field="value" name="value" ref="c3f75f0d6c1e4750"/>
                                                    <extensions>
                                                        <oga:meta x="321" y="68">
                                                            <oga:default for="arg1" type="java.lang.String">Initial Consonants_</oga:default>
                                                        </oga:meta>
                                                    </extensions>
                                                </ogcn:macro>
                                                <node id="aa58526884684e92" name="Add Initial Consonant Column" type="class:ca.phon.app.opgraph.nodes.table.TableScriptNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="__script"><![CDATA[importClass(Packages.ca.phon.ipa.IPATranscriptBuilder)

function init(inputs, outputs) {

}

function tableOp(context, table) {
	var colIdx = table.columnCount;

	table.setColumnTitle(colIdx, "Initial C");

	for(var row = 0; row < table.rowCount; row++) {
		var rowData = table.getRow(row);
		var ipa = (new IPATranscriptBuilder()).append(table.getValueAt(row, "IPA Actual (Word)")).toIPATranscript();
		ipa = ipa.removePunctuation();

		var initialC = "";
		if(ipa.matches("^\\c.*")) {
			initialC = (new IPATranscriptBuilder()).append(ipa.elementAt(0)).toIPATranscript();
		}

		rowData[colIdx] = initialC;
	}
}
]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="300" y="238"/>
                                                    </extensions>
                                                </node>
                                                <node id="57a30efce5d34a60" name="Partition Table" type="class:ca.phon.app.opgraph.nodes.table.TableScriptNode">
                                                    <output name="trueTable" type="ca.phon.query.report.datasource.DefaultTableDataSource">Table of rows from input table which match filter</output>
                                                    <output name="falseTable" type="ca.phon.query.report.datasource.DefaultTableDataSource">Table of rows from output table which do not match the filter</output>
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="filters.column.filterType"><![CDATA[Regular expression]]></oga:property>
                                                            <oga:property key="columnName"><![CDATA[Initial C]]></oga:property>
                                                            <oga:property key="__script"><![CDATA[/*
 * Phon - An open source tool for research in phonology.
 * Copyright (C) 2005 - 201, Gregory Hedlund <ghedlund@mun.ca> and Yvan Rose <yrose@mun.ca>
 * Dept of Linguistics, Memorial University <https://phon.ca>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

 /**
  * Partition Table.js
  *
  * Script for use with ca.phon.app.opgraph.nodes.table.TableScriptNode
  *
  * Partition table using a standard query filter and column name.
  */
var PatternFilter = require("lib/PatternFilter").PatternFilter;

var columnParamInfo = {
	"id": "columnName",
	"title": "Column Name",
	"def": "",
	"prompt": "Enter column name"
}

var filters = {
    "column": new PatternFilter("filters.column")
}

function setup_params(params) {
	var columnParam = new StringScriptParam(
		columnParamInfo.id,
		columnParamInfo.title,
		columnParamInfo.def);
	columnParam.setPrompt(columnParamInfo.prompt);
	params.add(columnParam);

	filters.column.param_setup(params);
}

// add custom inputs/outputs here
function init(inputs, outputs) {
	outputs.add("trueTable", "Table of rows from input table which match filter", false, DefaultTableDataSource);
	outputs.add("falseTable", "Table of rows from output table which do not match the filter", false, DefaultTableDataSource);
}

// run operation on table
function tableOp(context, table) {
	// find table column index
	col = table.getColumnIndex(columnName);
	if(col < 0)
		return; // column not found

	// create output tables
	trueTable = new DefaultTableDataSource();
	falseTable = new DefaultTableDataSource();
	for(c = 0; c < table.columnCount; c++) {
	    var colTitle = table.getColumnTitle(c);
	    trueTable.setColumnTitle(c, colTitle);
	    falseTable.setColumnTitle(c, colTitle);
	}

	for(row = 0; row < table.rowCount; row++) {
		rowData = table.getRow(row);
		rowMatches = filterRow(table, row, col);

		if(rowMatches == true) {
			trueTable.addRow(rowData);
		} else {
			falseTable.addRow(rowData);
		}
	}

	context.put("trueTable", trueTable);
	context.put("falseTable", falseTable);
}

function filterRow(table, row, col) {
	var value = table.getValueAt(row, col);
	if(value == null) return false;

	return filters.column.check_filter(value);
}
]]></oga:property>
                                                            <oga:property key="filters.column.filter"><![CDATA[.+]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="520" y="237"/>
                                                    </extensions>
                                                </node>
                                                <node id="d368c66c4bd74b7b" type="class:ca.phon.app.opgraph.nodes.table.InventoryNode">
                                                    <extensions>
                                                        <opqry:inventoryoptions>
                                                            <opqry:column caseSensitive="false" column="Initial C" ignoreDiacritics="true"/>
                                                        </opqry:inventoryoptions>
                                                        <oga:settings/>
                                                        <oga:meta x="726" y="238"/>
                                                    </extensions>
                                                </node>
                                                <node id="ab78cb0703ed4078" name="Add Frequency Column" type="class:ca.phon.app.opgraph.nodes.table.TableScriptNode">
                                                    <input name="total" optional="false"/>
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	inputs.add("total", "", false, false);
}

function tableOp(context, table) {
	var total = context.get("total");
	var colIdx = table.columnCount;
	table.setColumnTitle(colIdx, "%");

	for(var row = 0; row < table.rowCount; row++) {
		var rowData = table.getRow(row);
		var count = rowData[1];
		var freq = (count / total) * 100.0;

		rowData[2] = freq;
	}
}
]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="684" y="449"/>
                                                    </extensions>
                                                </node>
                                                <node id="f47ff64746774214" type="class:ca.phon.app.opgraph.nodes.table.SortNode">
                                                    <extensions>
                                                        <opqry:sortoptions>
                                                            <opqry:sortBy column="Initial C" order="ascending" type="ipa"/>
                                                        </opqry:sortoptions>
                                                        <oga:settings/>
                                                        <oga:meta x="879" y="238"/>
                                                    </extensions>
                                                </node>
                                                <node id="b5d7b4c6398e4902" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                    <input name="data" optional="false">Data to print</input>
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="dataTemplate"><![CDATA[$DATA]]></oga:property>
                                                            <oga:property key="showText"><![CDATA[false]]></oga:property>
                                                            <oga:property key="showTable"><![CDATA[true]]></oga:property>
                                                            <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="715" y="75"/>
                                                    </extensions>
                                                </node>
                                                <ogcn:macro id="9a7c49bf56d444b1" name="Add to Report Template" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                                    <graph id="62c3ae5">
                                                        <node id="13150dcf3a3b4b68" name="Set Caption" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                            <input name="data" optional="false">Data to print</input>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="dataTemplate"><![CDATA[
#set($caption = "<h3>Initial Consonants : $DATA</h3>")
]]></oga:property>
                                                                    <oga:property key="showText"><![CDATA[true]]></oga:property>
                                                                    <oga:property key="showTable"><![CDATA[false]]></oga:property>
                                                                    <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="51" y="48">
                                                                    <oga:default for="buffer" type="java.lang.String">Report Template</oga:default>
                                                                    <oga:default for="append" type="java.lang.Boolean">true</oga:default>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <node id="88726e7fa6447df" name="Add to Template" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                            <input name="data" optional="false">Data to print</input>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="dataTemplate"><![CDATA[
#set($tableName = "$DATA")
#if($tables.containsKey($tableName))
#set($table = $tables.get($tableName))
#printTableWithIdAndCaption( $table $tableName $caption [] )
#else
$caption

No Results
#end
]]></oga:property>
                                                                    <oga:property key="showText"><![CDATA[true]]></oga:property>
                                                                    <oga:property key="showTable"><![CDATA[false]]></oga:property>
                                                                    <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="54" y="177">
                                                                    <oga:default for="buffer" type="java.lang.String">Report Template</oga:default>
                                                                    <oga:default for="append" type="java.lang.Boolean">true</oga:default>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <extensions>
                                                            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                                        </extensions>
                                                    </graph>
                                                    <ogcn:published_input field="data" name="speaker" ref="13150dcf3a3b4b68"/>
                                                    <ogcn:published_input field="data" name="bufferName" ref="88726e7fa6447df"/>
                                                    <extensions>
                                                        <oga:meta x="874" y="75"/>
                                                    </extensions>
                                                </ogcn:macro>
                                                <link dest="57a30efce5d34a60" destField="table" source="aa58526884684e92" sourceField="table"/>
                                                <link dest="f2e89e1c5a1a4053" destField="speaker" source="7adf4167e59b460e" sourceField="obj"/>
                                                <link dest="9a7c49bf56d444b1" destField="speaker" source="7adf4167e59b460e" sourceField="obj"/>
                                                <link dest="b5d7b4c6398e4902" destField="data" source="f47ff64746774214" sourceField="table"/>
                                                <link dest="9a7c49bf56d444b1" destField="bufferName" source="b5d7b4c6398e4902" sourceField="buffer"/>
                                                <link dest="b5d7b4c6398e4902" destField="buffer" source="f2e89e1c5a1a4053" sourceField="value"/>
                                                <link dest="aa58526884684e92" destField="table" source="14605d47a104fd7" sourceField="obj"/>
                                                <link dest="ab78cb0703ed4078" destField="total" source="39183c53213d4be0" sourceField="obj"/>
                                                <link dest="d368c66c4bd74b7b" destField="table" source="57a30efce5d34a60" sourceField="trueTable"/>
                                                <link dest="ab78cb0703ed4078" destField="table" source="d368c66c4bd74b7b" sourceField="table"/>
                                                <link dest="f47ff64746774214" destField="table" source="ab78cb0703ed4078" sourceField="table"/>
                                                <extensions>
                                                    <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                                </extensions>
                                            </graph>
                                            <ogcn:published_input field="obj" name="speaker" ref="7adf4167e59b460e"/>
                                            <ogcn:published_input field="obj" name="table" ref="14605d47a104fd7"/>
                                            <ogcn:published_input field="obj" name="result total" ref="39183c53213d4be0"/>
                                            <extensions>
                                                <oga:meta x="273" y="29"/>
                                            </extensions>
                                        </ogcn:macro>
                                        <ogcn:macro id="b92572d98d294037" name="Initial Consonants (by Session)" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                            <graph id="71f9a631">
                                                <node id="74285579c2404bc7" name="speaker" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="15" y="15"/>
                                                    </extensions>
                                                </node>
                                                <node id="84f318e879134937" name="table" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="15" y="308"/>
                                                    </extensions>
                                                </node>
                                                <node id="229db42ec85b407c" name="Map" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.util.Map]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="45" y="460"/>
                                                    </extensions>
                                                </node>
                                                <ogcn:macro id="a505b7172924469" name="Setup Buffer Name" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                                    <graph id="b82e4b2">
                                                        <node id="3012eff1768244ea" name="StringBuffer#&lt;init&gt;(String)" type="class:ca.gedge.opgraph.nodes.reflect.ConstructorNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.classMember"><![CDATA[<init>(java.lang.String)]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="15" y="15">
                                                                    <oga:default for="arg1" type="java.lang.String"/>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <node id="f6bdd1f3ea3c4b3e" name="Participant" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="15" y="146"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="cacf64112ada44fc" name="StringBuffer#append(String)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[append(java.lang.String)]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="256" y="15"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="33122b9ed7964d17" name="StringBuffer#toString()" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[toString()]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="507" y="15"/>
                                                            </extensions>
                                                        </node>
                                                        <link dest="33122b9ed7964d17" destField="obj" source="cacf64112ada44fc" sourceField="value"/>
                                                        <link dest="cacf64112ada44fc" destField="obj" source="3012eff1768244ea" sourceField="value"/>
                                                        <link dest="cacf64112ada44fc" destField="arg1" source="f6bdd1f3ea3c4b3e" sourceField="name"/>
                                                        <extensions>
                                                            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                                        </extensions>
                                                    </graph>
                                                    <ogcn:published_input field="obj" name="speaker" ref="f6bdd1f3ea3c4b3e"/>
                                                    <ogcn:published_input field="arg1" name="arg1" ref="3012eff1768244ea"/>
                                                    <ogcn:published_output field="value" name="value" ref="33122b9ed7964d17"/>
                                                    <extensions>
                                                        <oga:meta x="321" y="68">
                                                            <oga:default for="arg1" type="java.lang.String">Initial Consonants (by Session)_</oga:default>
                                                        </oga:meta>
                                                    </extensions>
                                                </ogcn:macro>
                                                <node id="9864b3a3eeba45c3" name="Add Initial Consonant Column" type="class:ca.phon.app.opgraph.nodes.table.TableScriptNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="__script"><![CDATA[importClass(Packages.ca.phon.ipa.IPATranscriptBuilder)

function init(inputs, outputs) {

}

function tableOp(context, table) {
	var colIdx = table.columnCount;

	table.setColumnTitle(colIdx, "Initial C");

	for(var row = 0; row < table.rowCount; row++) {
		var rowData = table.getRow(row);
		var ipa = (new IPATranscriptBuilder()).append(table.getValueAt(row, "IPA Actual (Word)")).toIPATranscript();
		ipa = ipa.removePunctuation();

		var initialC = "";
		if(ipa.matches("^\\c.*")) {
			initialC = (new IPATranscriptBuilder()).append(ipa.elementAt(0)).toIPATranscript();
		}

		rowData[colIdx] = initialC;
	}
}
]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="300" y="238"/>
                                                    </extensions>
                                                </node>
                                                <node id="c6ee8dffed6741ca" name="Partition Table" type="class:ca.phon.app.opgraph.nodes.table.TableScriptNode">
                                                    <output name="trueTable" type="ca.phon.query.report.datasource.DefaultTableDataSource">Table of rows from input table which match filter</output>
                                                    <output name="falseTable" type="ca.phon.query.report.datasource.DefaultTableDataSource">Table of rows from output table which do not match the filter</output>
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="filters.column.filterType"><![CDATA[Regular expression]]></oga:property>
                                                            <oga:property key="columnName"><![CDATA[Initial C]]></oga:property>
                                                            <oga:property key="__script"><![CDATA[/*
 * Phon - An open source tool for research in phonology.
 * Copyright (C) 2005 - 201, Gregory Hedlund <ghedlund@mun.ca> and Yvan Rose <yrose@mun.ca>
 * Dept of Linguistics, Memorial University <https://phon.ca>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

 /**
  * Partition Table.js
  *
  * Script for use with ca.phon.app.opgraph.nodes.table.TableScriptNode
  *
  * Partition table using a standard query filter and column name.
  */
var PatternFilter = require("lib/PatternFilter").PatternFilter;

var columnParamInfo = {
	"id": "columnName",
	"title": "Column Name",
	"def": "",
	"prompt": "Enter column name"
}

var filters = {
    "column": new PatternFilter("filters.column")
}

function setup_params(params) {
	var columnParam = new StringScriptParam(
		columnParamInfo.id,
		columnParamInfo.title,
		columnParamInfo.def);
	columnParam.setPrompt(columnParamInfo.prompt);
	params.add(columnParam);

	filters.column.param_setup(params);
}

// add custom inputs/outputs here
function init(inputs, outputs) {
	outputs.add("trueTable", "Table of rows from input table which match filter", false, DefaultTableDataSource);
	outputs.add("falseTable", "Table of rows from output table which do not match the filter", false, DefaultTableDataSource);
}

// run operation on table
function tableOp(context, table) {
	// find table column index
	col = table.getColumnIndex(columnName);
	if(col < 0)
		return; // column not found

	// create output tables
	trueTable = new DefaultTableDataSource();
	falseTable = new DefaultTableDataSource();
	for(c = 0; c < table.columnCount; c++) {
	    var colTitle = table.getColumnTitle(c);
	    trueTable.setColumnTitle(c, colTitle);
	    falseTable.setColumnTitle(c, colTitle);
	}

	for(row = 0; row < table.rowCount; row++) {
		rowData = table.getRow(row);
		rowMatches = filterRow(table, row, col);

		if(rowMatches == true) {
			trueTable.addRow(rowData);
		} else {
			falseTable.addRow(rowData);
		}
	}

	context.put("trueTable", trueTable);
	context.put("falseTable", falseTable);
}

function filterRow(table, row, col) {
	var value = table.getValueAt(row, col);
	if(value == null) return false;

	return filters.column.check_filter(value);
}
]]></oga:property>
                                                            <oga:property key="filters.column.filter"><![CDATA[.+]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="520" y="237"/>
                                                    </extensions>
                                                </node>
                                                <node id="34597ece38be42a5" type="class:ca.phon.app.opgraph.nodes.table.InventoryNode">
                                                    <extensions>
                                                        <opqry:inventoryoptions>
                                                            <opqry:groupBy caseSensitive="false" column="Session" ignoreDiacritics="true"/>
                                                            <opqry:column caseSensitive="false" column="Initial C" ignoreDiacritics="true"/>
                                                        </opqry:inventoryoptions>
                                                        <oga:settings/>
                                                        <oga:meta x="726" y="238"/>
                                                    </extensions>
                                                </node>
                                                <node id="4289a3bef7944aad" name="Add Frequency Columns" type="class:ca.phon.app.opgraph.nodes.table.TableScriptNode">
                                                    <input name="tableMap" optional="false"/>
                                                    <output name="freqTable" type="ca.phon.query.report.datasource.DefaultTableDataSource"/>
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	inputs.add("tableMap", "", false, false);

	outputs.add("freqTable", "", false, Packages.ca.phon.query.report.datasource.DefaultTableDataSource);
}

function tableOp(context, table) {
	var tableMap = context.get("tableMap");
	var freqTable = new Packages.ca.phon.query.report.datasource.DefaultTableDataSource();

	// setup columns
	freqTable.setColumnTitle(0, table.getColumnTitle(0));

	var colIdx = 1;
	for(var col = 1; col < table.columnCount; col++) {
		freqTable.setColumnTitle(colIdx++, table.getColumnTitle(col));
		freqTable.setColumnTitle(colIdx++, "% " + table.getColumnTitle(col));
	}

	for(var row = 0; row < table.rowCount; row++) {
		var rowData = [];
		var tableData = table.getRow(row);

		rowData[0] = tableData[0];
		colIdx = 1;

		for(var col = 1; col < table.columnCount; col++) {
			var total = tableMap.get(table.getColumnTitle(col)).rowCount;
			var count = tableData[col];
			var freq = (count / total) * 100.0;

			rowData[colIdx++] = new java.lang.Integer(count);
			rowData[colIdx++] = freq;
		}

		freqTable.addRow(rowData);
	}

	context.put("freqTable", freqTable);
}
]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="684" y="449"/>
                                                    </extensions>
                                                </node>
                                                <node id="bb1e0397c3d4fb1" type="class:ca.phon.app.opgraph.nodes.table.SortNode">
                                                    <extensions>
                                                        <opqry:sortoptions>
                                                            <opqry:sortBy column="Initial C" order="ascending" type="ipa"/>
                                                        </opqry:sortoptions>
                                                        <oga:settings/>
                                                        <oga:meta x="879" y="238"/>
                                                    </extensions>
                                                </node>
                                                <node id="bd72e672f5e8470d" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                    <input name="data" optional="false">Data to print</input>
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="dataTemplate"><![CDATA[$DATA]]></oga:property>
                                                            <oga:property key="showText"><![CDATA[false]]></oga:property>
                                                            <oga:property key="showTable"><![CDATA[true]]></oga:property>
                                                            <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="715" y="75"/>
                                                    </extensions>
                                                </node>
                                                <ogcn:macro id="e6c6f369279c41db" name="Add to Report Template" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                                    <graph id="34a11f6e">
                                                        <node id="9e18975c84c14265" name="Set Caption" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                            <input name="data" optional="false">Data to print</input>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="dataTemplate"><![CDATA[
#set($caption = "<h3>Initial Consonants (by Session) : $DATA</h3>")
]]></oga:property>
                                                                    <oga:property key="showText"><![CDATA[true]]></oga:property>
                                                                    <oga:property key="showTable"><![CDATA[false]]></oga:property>
                                                                    <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="51" y="48">
                                                                    <oga:default for="buffer" type="java.lang.String">Report Template</oga:default>
                                                                    <oga:default for="append" type="java.lang.Boolean">true</oga:default>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <node id="1f0f3d4c7ef34b2e" name="Add to Template" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                            <input name="data" optional="false">Data to print</input>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="dataTemplate"><![CDATA[
#set($tableName = "$DATA")
#if($tables.containsKey($tableName))
#set($table = $tables.get($tableName))
#printTableWithIdAndCaption( $table $tableName $caption [] )
#else
$caption

No Results
#end
]]></oga:property>
                                                                    <oga:property key="showText"><![CDATA[true]]></oga:property>
                                                                    <oga:property key="showTable"><![CDATA[false]]></oga:property>
                                                                    <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="54" y="177">
                                                                    <oga:default for="buffer" type="java.lang.String">Report Template</oga:default>
                                                                    <oga:default for="append" type="java.lang.Boolean">true</oga:default>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <extensions>
                                                            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                                        </extensions>
                                                    </graph>
                                                    <ogcn:published_input field="data" name="speaker" ref="9e18975c84c14265"/>
                                                    <ogcn:published_input field="data" name="bufferName" ref="1f0f3d4c7ef34b2e"/>
                                                    <extensions>
                                                        <oga:meta x="874" y="75"/>
                                                    </extensions>
                                                </ogcn:macro>
                                                <link dest="c6ee8dffed6741ca" destField="table" source="9864b3a3eeba45c3" sourceField="table"/>
                                                <link dest="a505b7172924469" destField="speaker" source="74285579c2404bc7" sourceField="obj"/>
                                                <link dest="e6c6f369279c41db" destField="speaker" source="74285579c2404bc7" sourceField="obj"/>
                                                <link dest="bd72e672f5e8470d" destField="data" source="bb1e0397c3d4fb1" sourceField="table"/>
                                                <link dest="e6c6f369279c41db" destField="bufferName" source="bd72e672f5e8470d" sourceField="buffer"/>
                                                <link dest="bd72e672f5e8470d" destField="buffer" source="a505b7172924469" sourceField="value"/>
                                                <link dest="9864b3a3eeba45c3" destField="table" source="84f318e879134937" sourceField="obj"/>
                                                <link dest="34597ece38be42a5" destField="table" source="c6ee8dffed6741ca" sourceField="trueTable"/>
                                                <link dest="4289a3bef7944aad" destField="table" source="34597ece38be42a5" sourceField="table"/>
                                                <link dest="bb1e0397c3d4fb1" destField="table" source="4289a3bef7944aad" sourceField="freqTable"/>
                                                <link dest="4289a3bef7944aad" destField="tableMap" source="229db42ec85b407c" sourceField="obj"/>
                                                <extensions>
                                                    <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                                </extensions>
                                            </graph>
                                            <ogcn:published_input field="obj" name="speaker" ref="74285579c2404bc7"/>
                                            <ogcn:published_input field="obj" name="table" ref="84f318e879134937"/>
                                            <ogcn:published_input field="obj" name="tableMap" ref="229db42ec85b407c"/>
                                            <extensions>
                                                <oga:meta x="269" y="156"/>
                                            </extensions>
                                        </ogcn:macro>
                                        <link dest="b92572d98d294037" destField="tableMap" source="f759a3bffdf14088" sourceField="obj"/>
                                        <link dest="b92572d98d294037" destField="speaker" source="3287d7c2d88a46e6" sourceField="obj"/>
                                        <link dest="ddc57d4d5ad34955" destField="table" source="4949f22dac5c4ba2" sourceField="obj"/>
                                        <link dest="ddc57d4d5ad34955" destField="result total" source="30d711ac806546fd" sourceField="obj"/>
                                        <link dest="ddc57d4d5ad34955" destField="speaker" source="3287d7c2d88a46e6" sourceField="obj"/>
                                        <link dest="b92572d98d294037" destField="table" source="4949f22dac5c4ba2" sourceField="obj"/>
                                    </graph>
                                    <ogcn:published_input field="obj" name="tableMap" ref="f759a3bffdf14088"/>
                                    <ogcn:published_input field="obj" name="speaker" ref="3287d7c2d88a46e6"/>
                                    <ogcn:published_input field="obj" name="table" ref="4949f22dac5c4ba2"/>
                                    <ogcn:published_input field="obj" name="result total" ref="30d711ac806546fd"/>
                                    <extensions>
                                        <oga:meta x="262" y="266"/>
                                    </extensions>
                                </ogcn:macro>
                                <ogcn:macro id="93fded79dfac4152" name="Final Consonants" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                    <graph id="7a7fc151">
                                        <node id="59bb0eedafb54294" name="result total" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.lang.Integer]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="15" y="15"/>
                                            </extensions>
                                        </node>
                                        <node id="fe21ea270a184984" name="speaker" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="15" y="146"/>
                                            </extensions>
                                        </node>
                                        <node id="1145569f30d543e9" name="table" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="15" y="439"/>
                                            </extensions>
                                        </node>
                                        <node id="ab668cf896d34b1c" name="tableMap" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.util.Map]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="15" y="570"/>
                                            </extensions>
                                        </node>
                                        <ogcn:macro id="aae10691104489a" name="Final Consonants" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                            <graph id="2efda26c">
                                                <node id="b3bb7233f3bb4142" name="speaker" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="15" y="15"/>
                                                    </extensions>
                                                </node>
                                                <node id="3929ec3dd94c465d" name="table" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="15" y="308"/>
                                                    </extensions>
                                                </node>
                                                <node id="62d00e306e4d421d" name="Result Total" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.lang.Integer]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="45" y="443"/>
                                                    </extensions>
                                                </node>
                                                <ogcn:macro id="4354574970ae4ff5" name="Setup Buffer Name" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                                    <graph id="459b9172">
                                                        <node id="8af0c2cb69ce4884" name="StringBuffer#&lt;init&gt;(String)" type="class:ca.gedge.opgraph.nodes.reflect.ConstructorNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.classMember"><![CDATA[<init>(java.lang.String)]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="15" y="15">
                                                                    <oga:default for="arg1" type="java.lang.String"/>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <node id="4095ba27502f469d" name="Participant" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="15" y="146"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="c6404c7f38ae411c" name="StringBuffer#append(String)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[append(java.lang.String)]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="256" y="15"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="ded2ed26c6b847bb" name="StringBuffer#toString()" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[toString()]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="507" y="15"/>
                                                            </extensions>
                                                        </node>
                                                        <link dest="ded2ed26c6b847bb" destField="obj" source="c6404c7f38ae411c" sourceField="value"/>
                                                        <link dest="c6404c7f38ae411c" destField="obj" source="8af0c2cb69ce4884" sourceField="value"/>
                                                        <link dest="c6404c7f38ae411c" destField="arg1" source="4095ba27502f469d" sourceField="name"/>
                                                        <extensions>
                                                            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                                        </extensions>
                                                    </graph>
                                                    <ogcn:published_input field="obj" name="speaker" ref="4095ba27502f469d"/>
                                                    <ogcn:published_input field="arg1" name="arg1" ref="8af0c2cb69ce4884"/>
                                                    <ogcn:published_output field="value" name="value" ref="ded2ed26c6b847bb"/>
                                                    <extensions>
                                                        <oga:meta x="322" y="71">
                                                            <oga:default for="arg1" type="java.lang.String">Final Consonants_</oga:default>
                                                        </oga:meta>
                                                    </extensions>
                                                </ogcn:macro>
                                                <node id="3ecd39ef231248ae" name="Add Final Consonant Column" type="class:ca.phon.app.opgraph.nodes.table.TableScriptNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="__script"><![CDATA[importClass(Packages.ca.phon.ipa.IPATranscriptBuilder)

function init(inputs, outputs) {

}

function tableOp(context, table) {
	var colIdx = table.columnCount;

	table.setColumnTitle(colIdx, "Final C");

	for(var row = 0; row < table.rowCount; row++) {
		var rowData = table.getRow(row);
		var ipa = (new IPATranscriptBuilder()).append(table.getValueAt(row, "IPA Actual (Word)")).toIPATranscript();
		ipa = ipa.removePunctuation();

		var finalC = "";
		if(ipa.matches(".*\\c$")) {
			finalC = (new IPATranscriptBuilder()).append(ipa.elementAt(ipa.length()-1)).toIPATranscript();
		}

		rowData[colIdx] = finalC;
	}
}
]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="300" y="238"/>
                                                    </extensions>
                                                </node>
                                                <node id="4413f444dec642c2" name="Partition Table" type="class:ca.phon.app.opgraph.nodes.table.TableScriptNode">
                                                    <output name="trueTable" type="ca.phon.query.report.datasource.DefaultTableDataSource">Table of rows from input table which match filter</output>
                                                    <output name="falseTable" type="ca.phon.query.report.datasource.DefaultTableDataSource">Table of rows from output table which do not match the filter</output>
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="filters.column.exactMatch"><![CDATA[true]]></oga:property>
                                                            <oga:property key="filters.column.filterType"><![CDATA[Regular expression]]></oga:property>
                                                            <oga:property key="columnName"><![CDATA[Final C]]></oga:property>
                                                            <oga:property key="__script"><![CDATA[/*
 * Phon - An open source tool for research in phonology.
 * Copyright (C) 2005 - 201, Gregory Hedlund <ghedlund@mun.ca> and Yvan Rose <yrose@mun.ca>
 * Dept of Linguistics, Memorial University <https://phon.ca>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

 /**
  * Partition Table.js
  *
  * Script for use with ca.phon.app.opgraph.nodes.table.TableScriptNode
  *
  * Partition table using a standard query filter and column name.
  */
var PatternFilter = require("lib/PatternFilter").PatternFilter;

var columnParamInfo = {
	"id": "columnName",
	"title": "Column Name",
	"def": "",
	"prompt": "Enter column name"
}

var filters = {
    "column": new PatternFilter("filters.column")
}

function setup_params(params) {
	var columnParam = new StringScriptParam(
		columnParamInfo.id,
		columnParamInfo.title,
		columnParamInfo.def);
	columnParam.setPrompt(columnParamInfo.prompt);
	params.add(columnParam);

	filters.column.param_setup(params);
}

// add custom inputs/outputs here
function init(inputs, outputs) {
	outputs.add("trueTable", "Table of rows from input table which match filter", false, DefaultTableDataSource);
	outputs.add("falseTable", "Table of rows from output table which do not match the filter", false, DefaultTableDataSource);
}

// run operation on table
function tableOp(context, table) {
	// find table column index
	col = table.getColumnIndex(columnName);
	if(col < 0)
		return; // column not found

	// create output tables
	trueTable = new DefaultTableDataSource();
	falseTable = new DefaultTableDataSource();
	for(c = 0; c < table.columnCount; c++) {
	    var colTitle = table.getColumnTitle(c);
	    trueTable.setColumnTitle(c, colTitle);
	    falseTable.setColumnTitle(c, colTitle);
	}

	for(row = 0; row < table.rowCount; row++) {
		rowData = table.getRow(row);
		rowMatches = filterRow(table, row, col);

		if(rowMatches == true) {
			trueTable.addRow(rowData);
		} else {
			falseTable.addRow(rowData);
		}
	}

	context.put("trueTable", trueTable);
	context.put("falseTable", falseTable);
}

function filterRow(table, row, col) {
	var value = table.getValueAt(row, col);
	if(value == null) return false;

	return filters.column.check_filter(value);
}
]]></oga:property>
                                                            <oga:property key="filters.column.allowOverlap"><![CDATA[false]]></oga:property>
                                                            <oga:property key="filters.column.caseSensitive"><![CDATA[false]]></oga:property>
                                                            <oga:property key="filters.column.filter"><![CDATA[.+]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="519" y="234"/>
                                                    </extensions>
                                                </node>
                                                <node id="2e543a1e76594a88" type="class:ca.phon.app.opgraph.nodes.table.InventoryNode">
                                                    <extensions>
                                                        <opqry:inventoryoptions>
                                                            <opqry:column caseSensitive="false" column="Final C" ignoreDiacritics="true"/>
                                                        </opqry:inventoryoptions>
                                                        <oga:settings/>
                                                        <oga:meta x="726" y="238"/>
                                                    </extensions>
                                                </node>
                                                <node id="e6d61cedd3174641" name="Add Frequency Column" type="class:ca.phon.app.opgraph.nodes.table.TableScriptNode">
                                                    <input name="total" optional="false"/>
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	inputs.add("total", "", false, false);
}

function tableOp(context, table) {
	var total = context.get("total");
	var colIdx = table.columnCount;
	table.setColumnTitle(colIdx, "%");

	for(var row = 0; row < table.rowCount; row++) {
		var rowData = table.getRow(row);
		var count = rowData[1];
		var freq = (count / total) * 100.0;

		rowData[2] = freq;
	}
}
]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="684" y="449"/>
                                                    </extensions>
                                                </node>
                                                <node id="60ffa23184a44703" type="class:ca.phon.app.opgraph.nodes.table.SortNode">
                                                    <extensions>
                                                        <opqry:sortoptions>
                                                            <opqry:sortBy column="Final C" order="ascending" type="ipa"/>
                                                        </opqry:sortoptions>
                                                        <oga:settings/>
                                                        <oga:meta x="879" y="238"/>
                                                    </extensions>
                                                </node>
                                                <node id="57d9a5c70c01487e" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                    <input name="data" optional="false">Data to print</input>
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="dataTemplate"><![CDATA[$DATA]]></oga:property>
                                                            <oga:property key="showText"><![CDATA[false]]></oga:property>
                                                            <oga:property key="showTable"><![CDATA[true]]></oga:property>
                                                            <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="715" y="75"/>
                                                    </extensions>
                                                </node>
                                                <ogcn:macro id="b35db580e85d4e6c" name="Add to Report Template" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                                    <graph id="9d616bf">
                                                        <node id="803d6cd183945d1" name="Set Caption" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                            <input name="data" optional="false">Data to print</input>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="dataTemplate"><![CDATA[
#set($caption = "<h3>Final Consonants : $DATA</h3>")
]]></oga:property>
                                                                    <oga:property key="showText"><![CDATA[true]]></oga:property>
                                                                    <oga:property key="showTable"><![CDATA[false]]></oga:property>
                                                                    <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="51" y="48">
                                                                    <oga:default for="buffer" type="java.lang.String">Report Template</oga:default>
                                                                    <oga:default for="append" type="java.lang.Boolean">true</oga:default>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <node id="42eb6ced758644fa" name="Add to Template" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                            <input name="data" optional="false">Data to print</input>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="dataTemplate"><![CDATA[
#set($tableName = "$DATA")
#if($tables.containsKey($tableName))
#set($table = $tables.get($tableName))
#printTableWithIdAndCaption( $table $tableName $caption [] )
#else
$caption

No Results
#end
]]></oga:property>
                                                                    <oga:property key="showText"><![CDATA[true]]></oga:property>
                                                                    <oga:property key="showTable"><![CDATA[false]]></oga:property>
                                                                    <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="54" y="177">
                                                                    <oga:default for="buffer" type="java.lang.String">Report Template</oga:default>
                                                                    <oga:default for="append" type="java.lang.Boolean">true</oga:default>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <extensions>
                                                            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                                        </extensions>
                                                    </graph>
                                                    <ogcn:published_input field="data" name="speaker" ref="803d6cd183945d1"/>
                                                    <ogcn:published_input field="data" name="bufferName" ref="42eb6ced758644fa"/>
                                                    <extensions>
                                                        <oga:meta x="874" y="75"/>
                                                    </extensions>
                                                </ogcn:macro>
                                                <link dest="4354574970ae4ff5" destField="speaker" source="b3bb7233f3bb4142" sourceField="obj"/>
                                                <link dest="b35db580e85d4e6c" destField="speaker" source="b3bb7233f3bb4142" sourceField="obj"/>
                                                <link dest="57d9a5c70c01487e" destField="data" source="60ffa23184a44703" sourceField="table"/>
                                                <link dest="b35db580e85d4e6c" destField="bufferName" source="57d9a5c70c01487e" sourceField="buffer"/>
                                                <link dest="57d9a5c70c01487e" destField="buffer" source="4354574970ae4ff5" sourceField="value"/>
                                                <link dest="3ecd39ef231248ae" destField="table" source="3929ec3dd94c465d" sourceField="obj"/>
                                                <link dest="e6d61cedd3174641" destField="total" source="62d00e306e4d421d" sourceField="obj"/>
                                                <link dest="e6d61cedd3174641" destField="table" source="2e543a1e76594a88" sourceField="table"/>
                                                <link dest="60ffa23184a44703" destField="table" source="e6d61cedd3174641" sourceField="table"/>
                                                <link dest="4413f444dec642c2" destField="table" source="3ecd39ef231248ae" sourceField="table"/>
                                                <link dest="2e543a1e76594a88" destField="table" source="4413f444dec642c2" sourceField="trueTable"/>
                                                <extensions>
                                                    <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                                </extensions>
                                            </graph>
                                            <ogcn:published_input field="obj" name="speaker" ref="b3bb7233f3bb4142"/>
                                            <ogcn:published_input field="obj" name="table" ref="3929ec3dd94c465d"/>
                                            <ogcn:published_input field="obj" name="result total" ref="62d00e306e4d421d"/>
                                            <extensions>
                                                <oga:meta x="236" y="42"/>
                                            </extensions>
                                        </ogcn:macro>
                                        <ogcn:macro id="b20c3bca278c48b4" name="Final Consonants (by Session)" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                            <graph id="690f2002">
                                                <node id="51a50bdcca1c4ee0" name="speaker" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="15" y="15"/>
                                                    </extensions>
                                                </node>
                                                <node id="f58053b45c034066" name="table" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="15" y="308"/>
                                                    </extensions>
                                                </node>
                                                <node id="9e417e486c9748ac" name="Map" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[java.util.Map]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="45" y="460"/>
                                                    </extensions>
                                                </node>
                                                <ogcn:macro id="b95014fd916f41f3" name="Setup Buffer Name" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                                    <graph id="757505b9">
                                                        <node id="a7ea8987306b45f0" name="StringBuffer#&lt;init&gt;(String)" type="class:ca.gedge.opgraph.nodes.reflect.ConstructorNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.classMember"><![CDATA[<init>(java.lang.String)]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="15" y="15">
                                                                    <oga:default for="arg1" type="java.lang.String"/>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <node id="64bc95db1b294c21" name="Participant" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="15" y="146"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="2bf4f388f90e4ef3" name="StringBuffer#append(String)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[append(java.lang.String)]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="256" y="15"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="534877e50c1b44af" name="StringBuffer#toString()" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[toString()]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="507" y="15"/>
                                                            </extensions>
                                                        </node>
                                                        <link dest="534877e50c1b44af" destField="obj" source="2bf4f388f90e4ef3" sourceField="value"/>
                                                        <link dest="2bf4f388f90e4ef3" destField="obj" source="a7ea8987306b45f0" sourceField="value"/>
                                                        <link dest="2bf4f388f90e4ef3" destField="arg1" source="64bc95db1b294c21" sourceField="name"/>
                                                        <extensions>
                                                            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                                        </extensions>
                                                    </graph>
                                                    <ogcn:published_input field="obj" name="speaker" ref="64bc95db1b294c21"/>
                                                    <ogcn:published_input field="arg1" name="arg1" ref="a7ea8987306b45f0"/>
                                                    <ogcn:published_output field="value" name="value" ref="534877e50c1b44af"/>
                                                    <extensions>
                                                        <oga:meta x="321" y="68">
                                                            <oga:default for="arg1" type="java.lang.String">Final Consonants (by Session)_</oga:default>
                                                        </oga:meta>
                                                    </extensions>
                                                </ogcn:macro>
                                                <node id="169dba8a5ce3416c" name="Add Final Consonant Column" type="class:ca.phon.app.opgraph.nodes.table.TableScriptNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="__script"><![CDATA[importClass(Packages.ca.phon.ipa.IPATranscriptBuilder)

function init(inputs, outputs) {

}

function tableOp(context, table) {
	var colIdx = table.columnCount;

	table.setColumnTitle(colIdx, "Final C");

	for(var row = 0; row < table.rowCount; row++) {
		var rowData = table.getRow(row);
		var ipa = (new IPATranscriptBuilder()).append(table.getValueAt(row, "IPA Actual (Word)")).toIPATranscript();
		ipa = ipa.removePunctuation();

		var finalC = "";
		if(ipa.matches(".*\\c$")) {
			finalC = (new IPATranscriptBuilder()).append(ipa.elementAt(ipa.length()-1)).toIPATranscript();
		}

		rowData[colIdx] = finalC;
	}
}
]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="300" y="238"/>
                                                    </extensions>
                                                </node>
                                                <node id="8e4c588595f84630" name="Partition Table" type="class:ca.phon.app.opgraph.nodes.table.TableScriptNode">
                                                    <output name="trueTable" type="ca.phon.query.report.datasource.DefaultTableDataSource">Table of rows from input table which match filter</output>
                                                    <output name="falseTable" type="ca.phon.query.report.datasource.DefaultTableDataSource">Table of rows from output table which do not match the filter</output>
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="filters.column.exactMatch"><![CDATA[true]]></oga:property>
                                                            <oga:property key="filters.column.filterType"><![CDATA[Regular expression]]></oga:property>
                                                            <oga:property key="columnName"><![CDATA[Final C]]></oga:property>
                                                            <oga:property key="__script"><![CDATA[/*
 * Phon - An open source tool for research in phonology.
 * Copyright (C) 2005 - 201, Gregory Hedlund <ghedlund@mun.ca> and Yvan Rose <yrose@mun.ca>
 * Dept of Linguistics, Memorial University <https://phon.ca>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

 /**
  * Partition Table.js
  *
  * Script for use with ca.phon.app.opgraph.nodes.table.TableScriptNode
  *
  * Partition table using a standard query filter and column name.
  */
var PatternFilter = require("lib/PatternFilter").PatternFilter;

var columnParamInfo = {
	"id": "columnName",
	"title": "Column Name",
	"def": "",
	"prompt": "Enter column name"
}

var filters = {
    "column": new PatternFilter("filters.column")
}

function setup_params(params) {
	var columnParam = new StringScriptParam(
		columnParamInfo.id,
		columnParamInfo.title,
		columnParamInfo.def);
	columnParam.setPrompt(columnParamInfo.prompt);
	params.add(columnParam);

	filters.column.param_setup(params);
}

// add custom inputs/outputs here
function init(inputs, outputs) {
	outputs.add("trueTable", "Table of rows from input table which match filter", false, DefaultTableDataSource);
	outputs.add("falseTable", "Table of rows from output table which do not match the filter", false, DefaultTableDataSource);
}

// run operation on table
function tableOp(context, table) {
	// find table column index
	col = table.getColumnIndex(columnName);
	if(col < 0)
		return; // column not found

	// create output tables
	trueTable = new DefaultTableDataSource();
	falseTable = new DefaultTableDataSource();
	for(c = 0; c < table.columnCount; c++) {
	    var colTitle = table.getColumnTitle(c);
	    trueTable.setColumnTitle(c, colTitle);
	    falseTable.setColumnTitle(c, colTitle);
	}

	for(row = 0; row < table.rowCount; row++) {
		rowData = table.getRow(row);
		rowMatches = filterRow(table, row, col);

		if(rowMatches == true) {
			trueTable.addRow(rowData);
		} else {
			falseTable.addRow(rowData);
		}
	}

	context.put("trueTable", trueTable);
	context.put("falseTable", falseTable);
}

function filterRow(table, row, col) {
	var value = table.getValueAt(row, col);
	if(value == null) return false;

	return filters.column.check_filter(value);
}
]]></oga:property>
                                                            <oga:property key="filters.column.allowOverlap"><![CDATA[false]]></oga:property>
                                                            <oga:property key="filters.column.caseSensitive"><![CDATA[false]]></oga:property>
                                                            <oga:property key="filters.column.filter"><![CDATA[.+]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="519" y="242"/>
                                                    </extensions>
                                                </node>
                                                <node id="48276a5dc5be49f0" type="class:ca.phon.app.opgraph.nodes.table.InventoryNode">
                                                    <extensions>
                                                        <opqry:inventoryoptions>
                                                            <opqry:groupBy caseSensitive="false" column="Session" ignoreDiacritics="true"/>
                                                            <opqry:column caseSensitive="false" column="Final C" ignoreDiacritics="true"/>
                                                        </opqry:inventoryoptions>
                                                        <oga:settings/>
                                                        <oga:meta x="726" y="238"/>
                                                    </extensions>
                                                </node>
                                                <node id="80c17fef11574f68" name="Add Frequency Columns" type="class:ca.phon.app.opgraph.nodes.table.TableScriptNode">
                                                    <input name="tableMap" optional="false"/>
                                                    <output name="freqTable" type="ca.phon.query.report.datasource.DefaultTableDataSource"/>
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	inputs.add("tableMap", "", false, false);

	outputs.add("freqTable", "", false, Packages.ca.phon.query.report.datasource.DefaultTableDataSource);
}

function tableOp(context, table) {
	var tableMap = context.get("tableMap");
	var freqTable = new Packages.ca.phon.query.report.datasource.DefaultTableDataSource();

	// setup columns
	freqTable.setColumnTitle(0, table.getColumnTitle(0));

	var colIdx = 1;
	for(var col = 1; col < table.columnCount; col++) {
		freqTable.setColumnTitle(colIdx++, table.getColumnTitle(col));
		freqTable.setColumnTitle(colIdx++, "% " + table.getColumnTitle(col));
	}

	for(var row = 0; row < table.rowCount; row++) {
		var rowData = [];
		var tableData = table.getRow(row);

		rowData[0] = tableData[0];
		colIdx = 1;

		for(var col = 1; col < table.columnCount; col++) {
			var total = tableMap.get(table.getColumnTitle(col)).rowCount;
			var count = tableData[col];
			var freq = (count / total) * 100.0;

			rowData[colIdx++] = new java.lang.Integer(count);
			rowData[colIdx++] = freq;
		}

		freqTable.addRow(rowData);
	}

	context.put("freqTable", freqTable);
}
]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="684" y="449"/>
                                                    </extensions>
                                                </node>
                                                <node id="3e9fcfdc459446c1" type="class:ca.phon.app.opgraph.nodes.table.SortNode">
                                                    <extensions>
                                                        <opqry:sortoptions>
                                                            <opqry:sortBy column="Final C" order="ascending" type="ipa"/>
                                                        </opqry:sortoptions>
                                                        <oga:settings/>
                                                        <oga:meta x="879" y="238"/>
                                                    </extensions>
                                                </node>
                                                <node id="c6274d64e2d94080" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                    <input name="data" optional="false">Data to print</input>
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="dataTemplate"><![CDATA[$DATA]]></oga:property>
                                                            <oga:property key="showText"><![CDATA[false]]></oga:property>
                                                            <oga:property key="showTable"><![CDATA[true]]></oga:property>
                                                            <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="715" y="75"/>
                                                    </extensions>
                                                </node>
                                                <ogcn:macro id="a4df35bb3cb34275" name="Add to Report Template" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                                    <graph id="25dfcd22">
                                                        <node id="d45bd57ac7ed41e7" name="Set Caption" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                            <input name="data" optional="false">Data to print</input>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="dataTemplate"><![CDATA[
#set($caption = "<h3>Final Consonants (by Session) : $DATA</h3>")
]]></oga:property>
                                                                    <oga:property key="showText"><![CDATA[true]]></oga:property>
                                                                    <oga:property key="showTable"><![CDATA[false]]></oga:property>
                                                                    <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="51" y="48">
                                                                    <oga:default for="buffer" type="java.lang.String">Report Template</oga:default>
                                                                    <oga:default for="append" type="java.lang.Boolean">true</oga:default>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <node id="e2c5901b95c145dd" name="Add to Template" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                            <input name="data" optional="false">Data to print</input>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="dataTemplate"><![CDATA[
#set($tableName = "$DATA")
#if($tables.containsKey($tableName))
#set($table = $tables.get($tableName))
#printTableWithIdAndCaption( $table $tableName $caption [] )
#else
$caption

No Results
#end
]]></oga:property>
                                                                    <oga:property key="showText"><![CDATA[true]]></oga:property>
                                                                    <oga:property key="showTable"><![CDATA[false]]></oga:property>
                                                                    <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="54" y="177">
                                                                    <oga:default for="buffer" type="java.lang.String">Report Template</oga:default>
                                                                    <oga:default for="append" type="java.lang.Boolean">true</oga:default>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <extensions>
                                                            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                                        </extensions>
                                                    </graph>
                                                    <ogcn:published_input field="data" name="speaker" ref="d45bd57ac7ed41e7"/>
                                                    <ogcn:published_input field="data" name="bufferName" ref="e2c5901b95c145dd"/>
                                                    <extensions>
                                                        <oga:meta x="874" y="75"/>
                                                    </extensions>
                                                </ogcn:macro>
                                                <link dest="b95014fd916f41f3" destField="speaker" source="51a50bdcca1c4ee0" sourceField="obj"/>
                                                <link dest="a4df35bb3cb34275" destField="speaker" source="51a50bdcca1c4ee0" sourceField="obj"/>
                                                <link dest="c6274d64e2d94080" destField="data" source="3e9fcfdc459446c1" sourceField="table"/>
                                                <link dest="a4df35bb3cb34275" destField="bufferName" source="c6274d64e2d94080" sourceField="buffer"/>
                                                <link dest="c6274d64e2d94080" destField="buffer" source="b95014fd916f41f3" sourceField="value"/>
                                                <link dest="169dba8a5ce3416c" destField="table" source="f58053b45c034066" sourceField="obj"/>
                                                <link dest="80c17fef11574f68" destField="table" source="48276a5dc5be49f0" sourceField="table"/>
                                                <link dest="3e9fcfdc459446c1" destField="table" source="80c17fef11574f68" sourceField="freqTable"/>
                                                <link dest="80c17fef11574f68" destField="tableMap" source="9e417e486c9748ac" sourceField="obj"/>
                                                <link dest="8e4c588595f84630" destField="table" source="169dba8a5ce3416c" sourceField="table"/>
                                                <link dest="48276a5dc5be49f0" destField="table" source="8e4c588595f84630" sourceField="trueTable"/>
                                                <extensions>
                                                    <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                                </extensions>
                                            </graph>
                                            <ogcn:published_input field="obj" name="speaker" ref="51a50bdcca1c4ee0"/>
                                            <ogcn:published_input field="obj" name="table" ref="f58053b45c034066"/>
                                            <ogcn:published_input field="obj" name="tableMap" ref="9e417e486c9748ac"/>
                                            <extensions>
                                                <oga:meta x="245" y="184"/>
                                            </extensions>
                                        </ogcn:macro>
                                        <link dest="b20c3bca278c48b4" destField="tableMap" source="ab668cf896d34b1c" sourceField="obj"/>
                                        <link dest="b20c3bca278c48b4" destField="speaker" source="fe21ea270a184984" sourceField="obj"/>
                                        <link dest="aae10691104489a" destField="table" source="1145569f30d543e9" sourceField="obj"/>
                                        <link dest="aae10691104489a" destField="result total" source="59bb0eedafb54294" sourceField="obj"/>
                                        <link dest="aae10691104489a" destField="speaker" source="fe21ea270a184984" sourceField="obj"/>
                                        <link dest="b20c3bca278c48b4" destField="table" source="1145569f30d543e9" sourceField="obj"/>
                                        <extensions>
                                            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                        </extensions>
                                    </graph>
                                    <ogcn:published_input field="obj" name="tableMap" ref="ab668cf896d34b1c"/>
                                    <ogcn:published_input field="obj" name="speaker" ref="fe21ea270a184984"/>
                                    <ogcn:published_input field="obj" name="table" ref="1145569f30d543e9"/>
                                    <ogcn:published_input field="obj" name="result total" ref="59bb0eedafb54294"/>
                                    <extensions>
                                        <oga:meta x="262" y="414"/>
                                    </extensions>
                                </ogcn:macro>
                                <ogcn:macro id="4406626199ea417d" name="Vowels" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                    <graph id="2464e951">
                                        <node id="4f45d835bb4f46d9" name="table" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="15" y="15"/>
                                            </extensions>
                                        </node>
                                        <node id="b305045c55d54952" name="Participant" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="15" y="160"/>
                                            </extensions>
                                        </node>
                                        <node id="6f203dcde88e4f6e" name="Create Vowel Table" type="class:ca.phon.app.opgraph.nodes.table.TableScriptNode">
                                            <output name="vowelTable" type="ca.phon.query.report.datasource.DefaultTableDataSource"/>
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="__script"><![CDATA[importClass(Packages.ca.phon.ipa.IPATranscriptBuilder)

function init(inputs, outputs) {
	outputs.add("vowelTable", "", false, Packages.ca.phon.query.report.datasource.DefaultTableDataSource);
}

function tableOp(context, table) {
	var vowelTable = new Packages.ca.phon.query.report.datasource.DefaultTableDataSource();

	// setup columns
	vowelTable.setColumnTitle(0, "Session");
	vowelTable.setColumnTitle(1, "Record");
	vowelTable.setColumnTitle(2, "Vowel");
	vowelTable.setColumnTitle(3, "Actual Syllabification (Word)");

	for(var row = 0; row < table.rowCount; row++) {
		var tableData = table.getRow(row);

		var actualSyllabification = table.getValueAt(row, "Actual Syllabification (Word)");
		var ipa = (new IPATranscriptBuilder()).append(actualSyllabification).toIPATranscript();
		var sylls = ipa.syllables();

		for(var syllIdx = 0; syllIdx < sylls.size(); syllIdx++) {
			var syll = sylls.get(syllIdx);
			var phonexPattern = Packages.ca.phon.phonex.PhonexPattern.compile(".:N+");
			var matcher = phonexPattern.matcher(syll);
			if(matcher.find()) {
				var nucleus = (new IPATranscriptBuilder()).append(matcher.group()).toIPATranscript();

				var rowData = [];
				rowData[0] = table.getValueAt(row, 0);
				rowData[1] = table.getValueAt(row, "Record #");
				rowData[2] = nucleus;
				rowData[3] = actualSyllabification;
				vowelTable.addRow(rowData);
			}
		}
	}

	context.put("vowelTable", vowelTable);
}
]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="209" y="48"/>
                                            </extensions>
                                        </node>
                                        <ogcn:macro id="458261cf0ce54518" name="Vowels (Total)" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                            <graph id="774ceb76">
                                                <node id="a021d8b7b1a24f47" name="obj" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="15" y="15"/>
                                                    </extensions>
                                                </node>
                                                <node id="56ebd118188743a4" name="speaker" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="15" y="277"/>
                                                    </extensions>
                                                </node>
                                                <node id="f0c4a1ed9619402f" type="class:ca.phon.app.opgraph.nodes.table.InventoryNode">
                                                    <extensions>
                                                        <opqry:inventoryoptions>
                                                            <opqry:column caseSensitive="false" column="Vowel" ignoreDiacritics="true"/>
                                                        </opqry:inventoryoptions>
                                                        <oga:settings/>
                                                        <oga:meta x="204" y="15"/>
                                                    </extensions>
                                                </node>
                                                <node id="b4a098b979e4d27" name="DefaultTableDataSource" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="204" y="146"/>
                                                    </extensions>
                                                </node>
                                                <ogcn:macro id="efab965fd9d64408" name="Setup Buffer Name" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                                    <graph id="50784f18">
                                                        <node id="857f7766f72548c0" name="StringBuffer#&lt;init&gt;(String)" type="class:ca.gedge.opgraph.nodes.reflect.ConstructorNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.classMember"><![CDATA[<init>(java.lang.String)]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="15" y="15">
                                                                    <oga:default for="arg1" type="java.lang.String"/>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <node id="56be9a311425403a" name="Participant" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="15" y="146"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="a41cf23e0af34afe" name="StringBuffer#append(String)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[append(java.lang.String)]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="256" y="15"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="db5d482ddc1642a5" name="StringBuffer#toString()" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[toString()]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="507" y="15"/>
                                                            </extensions>
                                                        </node>
                                                        <link dest="db5d482ddc1642a5" destField="obj" source="a41cf23e0af34afe" sourceField="value"/>
                                                        <link dest="a41cf23e0af34afe" destField="obj" source="857f7766f72548c0" sourceField="value"/>
                                                        <link dest="a41cf23e0af34afe" destField="arg1" source="56be9a311425403a" sourceField="name"/>
                                                        <extensions>
                                                            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                                        </extensions>
                                                    </graph>
                                                    <ogcn:published_input field="obj" name="speaker" ref="56be9a311425403a"/>
                                                    <ogcn:published_input field="arg1" name="arg1" ref="857f7766f72548c0"/>
                                                    <ogcn:published_output field="value" name="value" ref="db5d482ddc1642a5"/>
                                                    <extensions>
                                                        <oga:meta x="205" y="277">
                                                            <oga:default for="arg1" type="java.lang.String">Vowel Inventory_</oga:default>
                                                        </oga:meta>
                                                    </extensions>
                                                </ogcn:macro>
                                                <node id="13e451b63b0c4c6e" name="Add Frequency Column" type="class:ca.phon.app.opgraph.nodes.table.TableScriptNode">
                                                    <input name="total" optional="false"/>
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	inputs.add("total", "", false, false);
}

function tableOp(context, table) {
	var total = context.get("total");
	var colIdx = table.columnCount;
	table.setColumnTitle(colIdx, "%");

	for(var row = 0; row < table.rowCount; row++) {
		var rowData = table.getRow(row);
		var count = rowData[1];
		var freq = (count / total) * 100.0;

		rowData[2] = freq;
	}
}
]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="357" y="15"/>
                                                    </extensions>
                                                </node>
                                                <node id="1d5c241af1ba4e8a" type="class:ca.phon.app.opgraph.nodes.table.SortNode">
                                                    <extensions>
                                                        <opqry:sortoptions>
                                                            <opqry:sortBy column="Vowel" order="ascending" type="plain"/>
                                                        </opqry:sortoptions>
                                                        <oga:settings/>
                                                        <oga:meta x="558" y="15"/>
                                                    </extensions>
                                                </node>
                                                <node id="b1882ef2a2fa4640" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                    <input name="data" optional="false">Data to print</input>
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="dataTemplate"><![CDATA[$DATA]]></oga:property>
                                                            <oga:property key="showText"><![CDATA[false]]></oga:property>
                                                            <oga:property key="showTable"><![CDATA[true]]></oga:property>
                                                            <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="711" y="15"/>
                                                    </extensions>
                                                </node>
                                                <ogcn:macro id="cfd0699c30bd4f95" name="Add to Report Template" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                                    <graph id="23917118">
                                                        <node id="24f9577b6f224feb" name="Set Caption" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                            <input name="data" optional="false">Data to print</input>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="dataTemplate"><![CDATA[
#set($caption = "<h3>Vowel Inventory : $DATA</h3>")
]]></oga:property>
                                                                    <oga:property key="showText"><![CDATA[true]]></oga:property>
                                                                    <oga:property key="showTable"><![CDATA[false]]></oga:property>
                                                                    <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="51" y="48">
                                                                    <oga:default for="buffer" type="java.lang.String">Report Template</oga:default>
                                                                    <oga:default for="append" type="java.lang.Boolean">true</oga:default>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <node id="d6557d2786dd4992" name="Add to Template" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                            <input name="data" optional="false">Data to print</input>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="dataTemplate"><![CDATA[
#set($tableName = "$DATA")
#if($tables.containsKey($tableName))
#set($table = $tables.get($tableName))
#printTableWithIdAndCaption( $table $tableName $caption [] )
#else
$caption

No Results
#end
]]></oga:property>
                                                                    <oga:property key="showText"><![CDATA[true]]></oga:property>
                                                                    <oga:property key="showTable"><![CDATA[false]]></oga:property>
                                                                    <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="54" y="177">
                                                                    <oga:default for="buffer" type="java.lang.String">Report Template</oga:default>
                                                                    <oga:default for="append" type="java.lang.Boolean">true</oga:default>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <extensions>
                                                            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                                        </extensions>
                                                    </graph>
                                                    <ogcn:published_input field="data" name="speaker" ref="24f9577b6f224feb"/>
                                                    <ogcn:published_input field="data" name="bufferName" ref="d6557d2786dd4992"/>
                                                    <extensions>
                                                        <oga:meta x="868" y="14"/>
                                                    </extensions>
                                                </ogcn:macro>
                                                <link dest="1d5c241af1ba4e8a" destField="table" source="13e451b63b0c4c6e" sourceField="table"/>
                                                <link dest="b1882ef2a2fa4640" destField="data" source="1d5c241af1ba4e8a" sourceField="table"/>
                                                <link dest="efab965fd9d64408" destField="speaker" source="56ebd118188743a4" sourceField="obj"/>
                                                <link dest="cfd0699c30bd4f95" destField="speaker" source="56ebd118188743a4" sourceField="obj"/>
                                                <link dest="13e451b63b0c4c6e" destField="total" source="b4a098b979e4d27" sourceField="rowCount"/>
                                                <link dest="b4a098b979e4d27" destField="obj" source="a021d8b7b1a24f47" sourceField="obj"/>
                                                <link dest="b1882ef2a2fa4640" destField="buffer" source="efab965fd9d64408" sourceField="value"/>
                                                <link dest="cfd0699c30bd4f95" destField="bufferName" source="b1882ef2a2fa4640" sourceField="buffer"/>
                                                <link dest="13e451b63b0c4c6e" destField="table" source="f0c4a1ed9619402f" sourceField="table"/>
                                                <link dest="f0c4a1ed9619402f" destField="table" source="a021d8b7b1a24f47" sourceField="obj"/>
                                            </graph>
                                            <ogcn:published_input field="obj" name="speaker" ref="56ebd118188743a4"/>
                                            <ogcn:published_input field="obj" name="obj" ref="a021d8b7b1a24f47"/>
                                            <extensions>
                                                <oga:meta x="445" y="50"/>
                                            </extensions>
                                        </ogcn:macro>
                                        <ogcn:macro id="c25e5e260c7e4857" name="Vowels (by Session)" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                            <graph id="7a05536c">
                                                <node id="366b1bd0236e440a" name="table" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="15" y="15"/>
                                                    </extensions>
                                                </node>
                                                <node id="bacef2cbe42d4d4e" name="speaker" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="15" y="277"/>
                                                    </extensions>
                                                </node>
                                                <node id="25fff31e2b2a4927" type="class:ca.phon.app.opgraph.nodes.table.InventoryNode">
                                                    <extensions>
                                                        <opqry:inventoryoptions>
                                                            <opqry:groupBy caseSensitive="false" column="Session" ignoreDiacritics="true"/>
                                                            <opqry:column caseSensitive="false" column="Vowel" ignoreDiacritics="true"/>
                                                        </opqry:inventoryoptions>
                                                        <oga:settings/>
                                                        <oga:meta x="204" y="15"/>
                                                    </extensions>
                                                </node>
                                                <node id="ed23e19e45a4469c" name="Split Table" type="class:ca.phon.app.opgraph.nodes.table.TableScriptNode">
                                                    <output name="keySet" type="java.util.Set">Unique values from given column name</output>
                                                    <output name="tableMap" type="java.util.Map">Map of key -&gt; table values</output>
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="columnName"><![CDATA[Session]]></oga:property>
                                                            <oga:property key="__script"><![CDATA[/*
 * Phon - An open source tool for research in phonology.
 * Copyright (C) 2005 - 2017, Gregory Hedlund <ghedlund@mun.ca> and Yvan Rose <yrose@mun.ca>
 * Dept of Linguistics, Memorial University <https://phon.ca>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

 /**
  * Split Table.js
  *
  * Script for use with ca.phon.app.opgraph.nodes.table.TableScriptNode
  *
  * Split table based on column name.  Two outputs
  * are produced, a set of keys from the column used in the filter  and a
  * map of key -> table values.
  */

var columnParamInfo = {
	"id": "columnName",
	"title": "Column Name",
	"def": "",
	"prompt": "Enter column name"
}

function setup_params(params) {
	var columnParam = new StringScriptParam(
		columnParamInfo.id,
		columnParamInfo.title,
		columnParamInfo.def);
	columnParam.setPrompt(columnParamInfo.prompt);
	params.add(columnParam);
}

// add custom inputs/outputs here
function init(inputs, outputs) {
	outputs.add("keySet", "Unique values from given column name", false, java.util.Set);
	outputs.add("tableMap", "Map of key -> table values", false, java.util.Map);
}

/*
 * Create a new table with the same schema as the inputTable
 */
function setupTable(inputTable) {
    var table = new DefaultTableDataSource();
    for(c = 0; c < inputTable.columnCount; c++) {
	    var colTitle = inputTable.getColumnTitle(c);
	    table.setColumnTitle(c, colTitle);
	}
	return table;
}

// run operation on table
function tableOp(context, table) {
	// find table column index
	col = table.getColumnIndex(columnName);

	if(col < 0)
		return; // column not found

	var tableMap = new java.util.LinkedHashMap();

	for(row = 0; row < table.rowCount; row++) {
	    // use string value as row key
		var rowKey = Packages.ca.phon.formatter.FormatterUtil.format(table.getValueAt(row, col));

		var keyTable = tableMap.get(rowKey);
		if(keyTable == null) {
		    keyTable = setupTable(table);
		    tableMap.put(rowKey, keyTable);
		}
		keyTable.addRow(table.getRow(row));
	}

	context.put("keySet", tableMap.keySet());
	context.put("tableMap", tableMap);
}
]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="204" y="146"/>
                                                    </extensions>
                                                </node>
                                                <ogcn:macro id="4d2b93ca423f40ab" name="Setup Buffer Name" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                                    <graph id="7e213a77">
                                                        <node id="ec3b7c6974354a34" name="StringBuffer#&lt;init&gt;(String)" type="class:ca.gedge.opgraph.nodes.reflect.ConstructorNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.classMember"><![CDATA[<init>(java.lang.String)]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="15" y="15">
                                                                    <oga:default for="arg1" type="java.lang.String"/>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <node id="38cc684cef79402c" name="Participant" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="15" y="146"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="a0a727ccbd934436" name="StringBuffer#append(String)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[append(java.lang.String)]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="256" y="15"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="9b36facb67da406b" name="StringBuffer#toString()" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[toString()]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="507" y="15"/>
                                                            </extensions>
                                                        </node>
                                                        <link dest="9b36facb67da406b" destField="obj" source="a0a727ccbd934436" sourceField="value"/>
                                                        <link dest="a0a727ccbd934436" destField="obj" source="ec3b7c6974354a34" sourceField="value"/>
                                                        <link dest="a0a727ccbd934436" destField="arg1" source="38cc684cef79402c" sourceField="name"/>
                                                        <extensions>
                                                            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                                        </extensions>
                                                    </graph>
                                                    <ogcn:published_input field="obj" name="speaker" ref="38cc684cef79402c"/>
                                                    <ogcn:published_input field="arg1" name="arg1" ref="ec3b7c6974354a34"/>
                                                    <ogcn:published_output field="value" name="value" ref="9b36facb67da406b"/>
                                                    <extensions>
                                                        <oga:meta x="205" y="277">
                                                            <oga:default for="arg1" type="java.lang.String">Vowel Inventory (by Session)_</oga:default>
                                                        </oga:meta>
                                                    </extensions>
                                                </ogcn:macro>
                                                <node id="85ec54486cee4291" name="Add Frequency Columns" type="class:ca.phon.app.opgraph.nodes.table.TableScriptNode">
                                                    <input name="tableMap" optional="false"/>
                                                    <output name="freqTable" type="ca.phon.query.report.datasource.DefaultTableDataSource"/>
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	inputs.add("tableMap", "", false, false);

	outputs.add("freqTable", "", false, Packages.ca.phon.query.report.datasource.DefaultTableDataSource);
}

function tableOp(context, table) {
	var tableMap = context.get("tableMap");
	var freqTable = new Packages.ca.phon.query.report.datasource.DefaultTableDataSource();

	// setup columns
	freqTable.setColumnTitle(0, table.getColumnTitle(0));

	var colIdx = 1;
	for(var col = 1; col < table.columnCount; col++) {
		freqTable.setColumnTitle(colIdx++, table.getColumnTitle(col));
		freqTable.setColumnTitle(colIdx++, "% " + table.getColumnTitle(col));
	}

	for(var row = 0; row < table.rowCount; row++) {
		var rowData = [];
		var tableData = table.getRow(row);

		rowData[0] = tableData[0];
		colIdx = 1;

		for(var col = 1; col < table.columnCount; col++) {
			var total = tableMap.get(table.getColumnTitle(col)).rowCount;
			var count = tableData[col];
			var freq = (count / total) * 100.0;

			rowData[colIdx++] = new java.lang.Integer(count);
			rowData[colIdx++] = freq;
		}

		freqTable.addRow(rowData);
	}

	context.put("freqTable", freqTable);
}
]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="362" y="15"/>
                                                    </extensions>
                                                </node>
                                                <node id="b9afbdce338a4bd6" type="class:ca.phon.app.opgraph.nodes.table.SortNode">
                                                    <extensions>
                                                        <opqry:sortoptions>
                                                            <opqry:sortBy column="Vowel" order="ascending" type="plain"/>
                                                        </opqry:sortoptions>
                                                        <oga:settings/>
                                                        <oga:meta x="558" y="15"/>
                                                    </extensions>
                                                </node>
                                                <node id="9721233f92474955" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                    <input name="data" optional="false">Data to print</input>
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="dataTemplate"><![CDATA[$DATA]]></oga:property>
                                                            <oga:property key="showText"><![CDATA[false]]></oga:property>
                                                            <oga:property key="showTable"><![CDATA[true]]></oga:property>
                                                            <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="711" y="15"/>
                                                    </extensions>
                                                </node>
                                                <ogcn:macro id="48e4fcdaaaa94c32" name="Add to Report Template" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                                    <graph id="3f35dd17">
                                                        <node id="36bc4c5d7ac84f63" name="Set Caption" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                            <input name="data" optional="false">Data to print</input>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="dataTemplate"><![CDATA[
#set($caption = "<h3>Vowel Inventory (by Session) : $DATA</h3>")
]]></oga:property>
                                                                    <oga:property key="showText"><![CDATA[true]]></oga:property>
                                                                    <oga:property key="showTable"><![CDATA[false]]></oga:property>
                                                                    <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="51" y="48">
                                                                    <oga:default for="buffer" type="java.lang.String">Report Template</oga:default>
                                                                    <oga:default for="append" type="java.lang.Boolean">true</oga:default>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <node id="b4b511fe66dd47fb" name="Add to Template" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                            <input name="data" optional="false">Data to print</input>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="dataTemplate"><![CDATA[
#set($tableName = "$DATA")
#if($tables.containsKey($tableName))
#set($table = $tables.get($tableName))
#printTableWithIdAndCaption( $table $tableName $caption [] )
#else
$caption

No Results
#end
]]></oga:property>
                                                                    <oga:property key="showText"><![CDATA[true]]></oga:property>
                                                                    <oga:property key="showTable"><![CDATA[false]]></oga:property>
                                                                    <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="54" y="177">
                                                                    <oga:default for="buffer" type="java.lang.String">Report Template</oga:default>
                                                                    <oga:default for="append" type="java.lang.Boolean">true</oga:default>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <extensions>
                                                            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                                        </extensions>
                                                    </graph>
                                                    <ogcn:published_input field="data" name="speaker" ref="36bc4c5d7ac84f63"/>
                                                    <ogcn:published_input field="data" name="bufferName" ref="b4b511fe66dd47fb"/>
                                                    <extensions>
                                                        <oga:meta x="870" y="15"/>
                                                    </extensions>
                                                </ogcn:macro>
                                                <link dest="9721233f92474955" destField="data" source="b9afbdce338a4bd6" sourceField="table"/>
                                                <link dest="4d2b93ca423f40ab" destField="speaker" source="bacef2cbe42d4d4e" sourceField="obj"/>
                                                <link dest="48e4fcdaaaa94c32" destField="speaker" source="bacef2cbe42d4d4e" sourceField="obj"/>
                                                <link dest="9721233f92474955" destField="buffer" source="4d2b93ca423f40ab" sourceField="value"/>
                                                <link dest="48e4fcdaaaa94c32" destField="bufferName" source="9721233f92474955" sourceField="buffer"/>
                                                <link dest="25fff31e2b2a4927" destField="table" source="366b1bd0236e440a" sourceField="obj"/>
                                                <link dest="ed23e19e45a4469c" destField="table" source="366b1bd0236e440a" sourceField="obj"/>
                                                <link dest="85ec54486cee4291" destField="tableMap" source="ed23e19e45a4469c" sourceField="tableMap"/>
                                                <link dest="85ec54486cee4291" destField="table" source="25fff31e2b2a4927" sourceField="table"/>
                                                <link dest="b9afbdce338a4bd6" destField="table" source="85ec54486cee4291" sourceField="freqTable"/>
                                                <extensions>
                                                    <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                                </extensions>
                                            </graph>
                                            <ogcn:published_input field="obj" name="speaker" ref="bacef2cbe42d4d4e"/>
                                            <ogcn:published_input field="obj" name="obj" ref="366b1bd0236e440a"/>
                                            <extensions>
                                                <oga:meta x="450" y="173"/>
                                            </extensions>
                                        </ogcn:macro>
                                        <link dest="6f203dcde88e4f6e" destField="table" source="4f45d835bb4f46d9" sourceField="obj"/>
                                        <link dest="458261cf0ce54518" destField="speaker" source="b305045c55d54952" sourceField="obj"/>
                                        <link dest="c25e5e260c7e4857" destField="speaker" source="b305045c55d54952" sourceField="obj"/>
                                        <link dest="c25e5e260c7e4857" destField="obj" source="6f203dcde88e4f6e" sourceField="vowelTable"/>
                                        <link dest="458261cf0ce54518" destField="obj" source="6f203dcde88e4f6e" sourceField="vowelTable"/>
                                        <extensions>
                                            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                        </extensions>
                                    </graph>
                                    <ogcn:published_input field="obj" name="table" ref="4f45d835bb4f46d9"/>
                                    <ogcn:published_input field="obj" name="obj" ref="b305045c55d54952"/>
                                    <extensions>
                                        <oga:meta x="262" y="568"/>
                                    </extensions>
                                </ogcn:macro>
                                <ogcn:macro id="4b943e61b1df4c55" name="Vocalization Structure" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                    <graph id="43dc15bf">
                                        <node id="87dba8e8e0794124" name="table" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="15" y="15"/>
                                            </extensions>
                                        </node>
                                        <node id="e012a9a09f224c79" name="Participant" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="15" y="160"/>
                                            </extensions>
                                        </node>
                                        <node id="ce3939d830f94f04" name="Add Structure Column" type="class:ca.phon.app.opgraph.nodes.table.TableScriptNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="__script"><![CDATA[importClass(Packages.ca.phon.ipa.IPATranscriptBuilder)

function init(inputs, outputs) {
}

function getStructure(ipa) {
	var structure = "";

	for(var i = 0; i < ipa.length(); i++) {
		var ele = ipa.elementAt(i);

		if(ele.featureSet.hasFeature("glottal")) {
			structure += "H";
		} else if(ele.featureSet.hasFeature("glide")) {
			structure += "G";
		} else if(ele.featureSet.hasFeature("c")) {
			structure += "C";
		} else if(ele.featureSet.hasFeature("v")) {
			structure += "V";
		} else {
			structure += ele.toString();
		}
	}

	return structure;
}

function tableOp(context, table) {
	var colIdx = table.columnCount;
	table.setColumnTitle(colIdx, "Structure");

	for(var row = 0; row < table.rowCount; row++) {
		var tableData = table.getRow(row);

		var actualSyllabification = table.getValueAt(row, "Actual Syllabification (Word)");
		var ipa = (new IPATranscriptBuilder()).append(actualSyllabification).toIPATranscript();

		tableData[colIdx] = getStructure(ipa);
	}
}
]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="209" y="48"/>
                                            </extensions>
                                        </node>
                                        <ogcn:macro id="bff9872072da4c64" name="Strucutres (Total)" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                            <graph id="4e33d032">
                                                <node id="634e8042832744be" name="TableDataSource" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.TableDataSource]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="19" y="17"/>
                                                    </extensions>
                                                </node>
                                                <node id="c683e113114544db" name="speaker" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="15" y="277"/>
                                                    </extensions>
                                                </node>
                                                <node id="83a2a940efb14271" type="class:ca.phon.app.opgraph.nodes.table.InventoryNode">
                                                    <extensions>
                                                        <opqry:inventoryoptions>
                                                            <opqry:column caseSensitive="false" column="Structure" ignoreDiacritics="true"/>
                                                        </opqry:inventoryoptions>
                                                        <oga:settings/>
                                                        <oga:meta x="204" y="15"/>
                                                    </extensions>
                                                </node>
                                                <ogcn:macro id="a2585ed7113a4975" name="Setup Buffer Name" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                                    <graph id="7d840ac7">
                                                        <node id="704448c724e6496c" name="StringBuffer#&lt;init&gt;(String)" type="class:ca.gedge.opgraph.nodes.reflect.ConstructorNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.classMember"><![CDATA[<init>(java.lang.String)]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="15" y="15">
                                                                    <oga:default for="arg1" type="java.lang.String"/>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <node id="cf95b4c95636406c" name="Participant" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="15" y="146"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="f6ad404ba3b94ba2" name="StringBuffer#append(String)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[append(java.lang.String)]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="256" y="15"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="7da74feb884dc2" name="StringBuffer#toString()" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[toString()]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="507" y="15"/>
                                                            </extensions>
                                                        </node>
                                                        <link dest="7da74feb884dc2" destField="obj" source="f6ad404ba3b94ba2" sourceField="value"/>
                                                        <link dest="f6ad404ba3b94ba2" destField="obj" source="704448c724e6496c" sourceField="value"/>
                                                        <link dest="f6ad404ba3b94ba2" destField="arg1" source="cf95b4c95636406c" sourceField="name"/>
                                                        <extensions>
                                                            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                                        </extensions>
                                                    </graph>
                                                    <ogcn:published_input field="obj" name="speaker" ref="cf95b4c95636406c"/>
                                                    <ogcn:published_input field="arg1" name="arg1" ref="704448c724e6496c"/>
                                                    <ogcn:published_output field="value" name="value" ref="7da74feb884dc2"/>
                                                    <extensions>
                                                        <oga:meta x="205" y="277">
                                                            <oga:default for="arg1" type="java.lang.String">Word Structure_</oga:default>
                                                        </oga:meta>
                                                    </extensions>
                                                </ogcn:macro>
                                                <node id="9968d1609ce74357" name="Add Frequency Column" type="class:ca.phon.app.opgraph.nodes.table.TableScriptNode">
                                                    <input name="total" optional="false"/>
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	inputs.add("total", "", false, false);
}

function tableOp(context, table) {
	var total = context.get("total");
	var colIdx = table.columnCount;
	table.setColumnTitle(colIdx, "%");

	for(var row = 0; row < table.rowCount; row++) {
		var rowData = table.getRow(row);
		var count = rowData[1];
		var freq = (count / total) * 100.0;

		rowData[2] = freq;
	}
}
]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="357" y="15"/>
                                                    </extensions>
                                                </node>
                                                <node id="b689b6e810f64d83" type="class:ca.phon.app.opgraph.nodes.table.SortNode">
                                                    <extensions>
                                                        <opqry:sortoptions>
                                                            <opqry:sortBy column="Structure" order="ascending" type="plain"/>
                                                        </opqry:sortoptions>
                                                        <oga:settings/>
                                                        <oga:meta x="558" y="15"/>
                                                    </extensions>
                                                </node>
                                                <node id="2e30daa36a14f31" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                    <input name="data" optional="false">Data to print</input>
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="dataTemplate"><![CDATA[$DATA]]></oga:property>
                                                            <oga:property key="showText"><![CDATA[false]]></oga:property>
                                                            <oga:property key="showTable"><![CDATA[true]]></oga:property>
                                                            <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="711" y="15"/>
                                                    </extensions>
                                                </node>
                                                <ogcn:macro id="6e3a5269beb14e9b" name="Add to Report Template" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                                    <graph id="5b54a74e">
                                                        <node id="ad1a58ff3cf0473f" name="Set Caption" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                            <input name="data" optional="false">Data to print</input>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="dataTemplate"><![CDATA[
#set($caption = "<h3>Word Structure : $DATA</h3>")
]]></oga:property>
                                                                    <oga:property key="showText"><![CDATA[true]]></oga:property>
                                                                    <oga:property key="showTable"><![CDATA[false]]></oga:property>
                                                                    <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="51" y="48">
                                                                    <oga:default for="buffer" type="java.lang.String">Report Template</oga:default>
                                                                    <oga:default for="append" type="java.lang.Boolean">true</oga:default>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <node id="f423261f2a7a4330" name="Add to Template" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                            <input name="data" optional="false">Data to print</input>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="dataTemplate"><![CDATA[
#set($tableName = "$DATA")
#if($tables.containsKey($tableName))
#set($table = $tables.get($tableName))
#printTableWithIdAndCaption( $table $tableName $caption [] )
#else
$caption

No Results
#end
]]></oga:property>
                                                                    <oga:property key="showText"><![CDATA[true]]></oga:property>
                                                                    <oga:property key="showTable"><![CDATA[false]]></oga:property>
                                                                    <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="54" y="177">
                                                                    <oga:default for="buffer" type="java.lang.String">Report Template</oga:default>
                                                                    <oga:default for="append" type="java.lang.Boolean">true</oga:default>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <extensions>
                                                            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                                        </extensions>
                                                    </graph>
                                                    <ogcn:published_input field="data" name="speaker" ref="ad1a58ff3cf0473f"/>
                                                    <ogcn:published_input field="data" name="bufferName" ref="f423261f2a7a4330"/>
                                                    <extensions>
                                                        <oga:meta x="868" y="14"/>
                                                    </extensions>
                                                </ogcn:macro>
                                                <link dest="b689b6e810f64d83" destField="table" source="9968d1609ce74357" sourceField="table"/>
                                                <link dest="2e30daa36a14f31" destField="data" source="b689b6e810f64d83" sourceField="table"/>
                                                <link dest="a2585ed7113a4975" destField="speaker" source="c683e113114544db" sourceField="obj"/>
                                                <link dest="6e3a5269beb14e9b" destField="speaker" source="c683e113114544db" sourceField="obj"/>
                                                <link dest="2e30daa36a14f31" destField="buffer" source="a2585ed7113a4975" sourceField="value"/>
                                                <link dest="6e3a5269beb14e9b" destField="bufferName" source="2e30daa36a14f31" sourceField="buffer"/>
                                                <link dest="9968d1609ce74357" destField="table" source="83a2a940efb14271" sourceField="table"/>
                                                <link dest="9968d1609ce74357" destField="total" source="634e8042832744be" sourceField="rowCount"/>
                                                <link dest="83a2a940efb14271" destField="table" source="634e8042832744be" sourceField="obj"/>
                                                <extensions>
                                                    <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                                </extensions>
                                            </graph>
                                            <ogcn:published_input field="obj" name="speaker" ref="c683e113114544db"/>
                                            <ogcn:published_input field="obj" name="obj" ref="634e8042832744be"/>
                                            <extensions>
                                                <oga:meta x="445" y="50"/>
                                            </extensions>
                                        </ogcn:macro>
                                        <ogcn:macro id="9f68051679724557" name="Strucutres (by Session)" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                            <graph id="16f82829">
                                                <node id="f401623d24ab4976" name="TableDataSource" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.TableDataSource]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="7" y="26"/>
                                                    </extensions>
                                                </node>
                                                <node id="7058896bd0994317" name="speaker" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="15" y="277"/>
                                                    </extensions>
                                                </node>
                                                <node id="c69e7d9c7f2949ad" type="class:ca.phon.app.opgraph.nodes.table.InventoryNode">
                                                    <extensions>
                                                        <opqry:inventoryoptions>
                                                            <opqry:groupBy caseSensitive="false" column="Session" ignoreDiacritics="true"/>
                                                            <opqry:column caseSensitive="false" column="Structure" ignoreDiacritics="true"/>
                                                        </opqry:inventoryoptions>
                                                        <oga:settings/>
                                                        <oga:meta x="204" y="15"/>
                                                    </extensions>
                                                </node>
                                                <node id="64414b3499ec46bc" name="Split Table" type="class:ca.phon.app.opgraph.nodes.table.TableScriptNode">
                                                    <output name="keySet" type="java.util.Set">Unique values from given column name</output>
                                                    <output name="tableMap" type="java.util.Map">Map of key -&gt; table values</output>
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="columnName"><![CDATA[Session]]></oga:property>
                                                            <oga:property key="__script"><![CDATA[/*
 * Phon - An open source tool for research in phonology.
 * Copyright (C) 2005 - 2017, Gregory Hedlund <ghedlund@mun.ca> and Yvan Rose <yrose@mun.ca>
 * Dept of Linguistics, Memorial University <https://phon.ca>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

 /**
  * Split Table.js
  *
  * Script for use with ca.phon.app.opgraph.nodes.table.TableScriptNode
  *
  * Split table based on column name.  Two outputs
  * are produced, a set of keys from the column used in the filter  and a
  * map of key -> table values.
  */

var columnParamInfo = {
	"id": "columnName",
	"title": "Column Name",
	"def": "",
	"prompt": "Enter column name"
}

function setup_params(params) {
	var columnParam = new StringScriptParam(
		columnParamInfo.id,
		columnParamInfo.title,
		columnParamInfo.def);
	columnParam.setPrompt(columnParamInfo.prompt);
	params.add(columnParam);
}

// add custom inputs/outputs here
function init(inputs, outputs) {
	outputs.add("keySet", "Unique values from given column name", false, java.util.Set);
	outputs.add("tableMap", "Map of key -> table values", false, java.util.Map);
}

/*
 * Create a new table with the same schema as the inputTable
 */
function setupTable(inputTable) {
    var table = new DefaultTableDataSource();
    for(c = 0; c < inputTable.columnCount; c++) {
	    var colTitle = inputTable.getColumnTitle(c);
	    table.setColumnTitle(c, colTitle);
	}
	return table;
}

// run operation on table
function tableOp(context, table) {
	// find table column index
	col = table.getColumnIndex(columnName);

	if(col < 0)
		return; // column not found

	var tableMap = new java.util.LinkedHashMap();

	for(row = 0; row < table.rowCount; row++) {
	    // use string value as row key
		var rowKey = Packages.ca.phon.formatter.FormatterUtil.format(table.getValueAt(row, col));

		var keyTable = tableMap.get(rowKey);
		if(keyTable == null) {
		    keyTable = setupTable(table);
		    tableMap.put(rowKey, keyTable);
		}
		keyTable.addRow(table.getRow(row));
	}

	context.put("keySet", tableMap.keySet());
	context.put("tableMap", tableMap);
}
]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="204" y="146"/>
                                                    </extensions>
                                                </node>
                                                <ogcn:macro id="c1bcbf2d38a4c4d" name="Setup Buffer Name" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                                    <graph id="ed6d8b">
                                                        <node id="5fe06c3ad9324385" name="StringBuffer#&lt;init&gt;(String)" type="class:ca.gedge.opgraph.nodes.reflect.ConstructorNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.classMember"><![CDATA[<init>(java.lang.String)]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="15" y="15">
                                                                    <oga:default for="arg1" type="java.lang.String"/>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <node id="b8eff9fc51274311" name="Participant" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="15" y="146"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="1f959456bac64af3" name="StringBuffer#append(String)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[append(java.lang.String)]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="256" y="15"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="841e51020d9045d1" name="StringBuffer#toString()" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[toString()]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="507" y="15"/>
                                                            </extensions>
                                                        </node>
                                                        <link dest="841e51020d9045d1" destField="obj" source="1f959456bac64af3" sourceField="value"/>
                                                        <link dest="1f959456bac64af3" destField="obj" source="5fe06c3ad9324385" sourceField="value"/>
                                                        <link dest="1f959456bac64af3" destField="arg1" source="b8eff9fc51274311" sourceField="name"/>
                                                        <extensions>
                                                            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                                        </extensions>
                                                    </graph>
                                                    <ogcn:published_input field="obj" name="speaker" ref="b8eff9fc51274311"/>
                                                    <ogcn:published_input field="arg1" name="arg1" ref="5fe06c3ad9324385"/>
                                                    <ogcn:published_output field="value" name="value" ref="841e51020d9045d1"/>
                                                    <extensions>
                                                        <oga:meta x="205" y="277">
                                                            <oga:default for="arg1" type="java.lang.String">Word Structure (by Session)_</oga:default>
                                                        </oga:meta>
                                                    </extensions>
                                                </ogcn:macro>
                                                <node id="dddd2bcccf0d4c0a" name="Add Frequency Columns" type="class:ca.phon.app.opgraph.nodes.table.TableScriptNode">
                                                    <input name="tableMap" optional="false"/>
                                                    <output name="freqTable" type="ca.phon.query.report.datasource.DefaultTableDataSource"/>
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	inputs.add("tableMap", "", false, false);

	outputs.add("freqTable", "", false, Packages.ca.phon.query.report.datasource.DefaultTableDataSource);
}

function tableOp(context, table) {
	var tableMap = context.get("tableMap");
	var freqTable = new Packages.ca.phon.query.report.datasource.DefaultTableDataSource();

	// setup columns
	freqTable.setColumnTitle(0, table.getColumnTitle(0));

	var colIdx = 1;
	for(var col = 1; col < table.columnCount; col++) {
		freqTable.setColumnTitle(colIdx++, table.getColumnTitle(col));
		freqTable.setColumnTitle(colIdx++, "% " + table.getColumnTitle(col));
	}

	for(var row = 0; row < table.rowCount; row++) {
		var rowData = [];
		var tableData = table.getRow(row);

		rowData[0] = tableData[0];
		colIdx = 1;

		for(var col = 1; col < table.columnCount; col++) {
			var total = tableMap.get(table.getColumnTitle(col)).rowCount;
			var count = tableData[col];
			var freq = (count / total) * 100.0;

			rowData[colIdx++] = new java.lang.Integer(count);
			rowData[colIdx++] = freq;
		}

		freqTable.addRow(rowData);
	}

	context.put("freqTable", freqTable);
}
]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="362" y="15"/>
                                                    </extensions>
                                                </node>
                                                <node id="2928c4b2e0044bb8" type="class:ca.phon.app.opgraph.nodes.table.SortNode">
                                                    <extensions>
                                                        <opqry:sortoptions>
                                                            <opqry:sortBy column="Structure" order="ascending" type="plain"/>
                                                        </opqry:sortoptions>
                                                        <oga:settings/>
                                                        <oga:meta x="558" y="15"/>
                                                    </extensions>
                                                </node>
                                                <node id="47b1bf64e0c04453" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                    <input name="data" optional="false">Data to print</input>
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="dataTemplate"><![CDATA[$DATA]]></oga:property>
                                                            <oga:property key="showText"><![CDATA[false]]></oga:property>
                                                            <oga:property key="showTable"><![CDATA[true]]></oga:property>
                                                            <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="711" y="15"/>
                                                    </extensions>
                                                </node>
                                                <ogcn:macro id="9109bd9bca7644dd" name="Add to Report Template" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                                    <graph id="2b06418b">
                                                        <node id="7f99b2ede9da4aef" name="Set Caption" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                            <input name="data" optional="false">Data to print</input>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="dataTemplate"><![CDATA[
#set($caption = "<h3>Word Structure (by Session) : $DATA</h3>")
]]></oga:property>
                                                                    <oga:property key="showText"><![CDATA[true]]></oga:property>
                                                                    <oga:property key="showTable"><![CDATA[false]]></oga:property>
                                                                    <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="51" y="48">
                                                                    <oga:default for="buffer" type="java.lang.String">Report Template</oga:default>
                                                                    <oga:default for="append" type="java.lang.Boolean">true</oga:default>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <node id="7f4481e3b7724ce6" name="Add to Template" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                            <input name="data" optional="false">Data to print</input>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="dataTemplate"><![CDATA[
#set($tableName = "$DATA")
#if($tables.containsKey($tableName))
#set($table = $tables.get($tableName))
#printTableWithIdAndCaption( $table $tableName $caption [] )
#else
$caption

No Results
#end
]]></oga:property>
                                                                    <oga:property key="showText"><![CDATA[true]]></oga:property>
                                                                    <oga:property key="showTable"><![CDATA[false]]></oga:property>
                                                                    <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="54" y="177">
                                                                    <oga:default for="buffer" type="java.lang.String">Report Template</oga:default>
                                                                    <oga:default for="append" type="java.lang.Boolean">true</oga:default>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <extensions>
                                                            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                                        </extensions>
                                                    </graph>
                                                    <ogcn:published_input field="data" name="speaker" ref="7f99b2ede9da4aef"/>
                                                    <ogcn:published_input field="data" name="bufferName" ref="7f4481e3b7724ce6"/>
                                                    <extensions>
                                                        <oga:meta x="870" y="15"/>
                                                    </extensions>
                                                </ogcn:macro>
                                                <link dest="47b1bf64e0c04453" destField="data" source="2928c4b2e0044bb8" sourceField="table"/>
                                                <link dest="c1bcbf2d38a4c4d" destField="speaker" source="7058896bd0994317" sourceField="obj"/>
                                                <link dest="9109bd9bca7644dd" destField="speaker" source="7058896bd0994317" sourceField="obj"/>
                                                <link dest="47b1bf64e0c04453" destField="buffer" source="c1bcbf2d38a4c4d" sourceField="value"/>
                                                <link dest="9109bd9bca7644dd" destField="bufferName" source="47b1bf64e0c04453" sourceField="buffer"/>
                                                <link dest="dddd2bcccf0d4c0a" destField="tableMap" source="64414b3499ec46bc" sourceField="tableMap"/>
                                                <link dest="dddd2bcccf0d4c0a" destField="table" source="c69e7d9c7f2949ad" sourceField="table"/>
                                                <link dest="2928c4b2e0044bb8" destField="table" source="dddd2bcccf0d4c0a" sourceField="freqTable"/>
                                                <link dest="c69e7d9c7f2949ad" destField="table" source="f401623d24ab4976" sourceField="obj"/>
                                                <link dest="64414b3499ec46bc" destField="table" source="f401623d24ab4976" sourceField="obj"/>
                                                <extensions>
                                                    <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                                </extensions>
                                            </graph>
                                            <ogcn:published_input field="obj" name="speaker" ref="7058896bd0994317"/>
                                            <ogcn:published_input field="obj" name="obj" ref="f401623d24ab4976"/>
                                            <extensions>
                                                <oga:meta x="450" y="173"/>
                                            </extensions>
                                        </ogcn:macro>
                                        <link dest="ce3939d830f94f04" destField="table" source="87dba8e8e0794124" sourceField="obj"/>
                                        <link dest="bff9872072da4c64" destField="speaker" source="e012a9a09f224c79" sourceField="obj"/>
                                        <link dest="9f68051679724557" destField="speaker" source="e012a9a09f224c79" sourceField="obj"/>
                                        <link dest="bff9872072da4c64" destField="obj" source="ce3939d830f94f04" sourceField="table"/>
                                        <link dest="9f68051679724557" destField="obj" source="ce3939d830f94f04" sourceField="table"/>
                                        <extensions>
                                            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                        </extensions>
                                    </graph>
                                    <ogcn:published_input field="obj" name="table" ref="87dba8e8e0794124"/>
                                    <ogcn:published_input field="obj" name="obj" ref="e012a9a09f224c79"/>
                                    <extensions>
                                        <oga:meta x="268" y="698"/>
                                    </extensions>
                                </ogcn:macro>
                                <ogcn:macro id="3907fb884c964209" name="Syllable Structure" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                    <graph id="7ffc47de">
                                        <node id="824d21d3ab9d4084" name="table" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="15" y="15"/>
                                            </extensions>
                                        </node>
                                        <node id="fb1e6fef26f74e10" name="Participant" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="15" y="160"/>
                                            </extensions>
                                        </node>
                                        <node id="c384e25c504d4c62" name="Create Syllable Table" type="class:ca.phon.app.opgraph.nodes.table.TableScriptNode">
                                            <output name="syllTable" type="ca.phon.query.report.datasource.DefaultTableDataSource"/>
                                            <extensions>
                                                <oga:settings>
                                                    <oga:property key="__script"><![CDATA[importClass(Packages.ca.phon.ipa.IPATranscriptBuilder)

function init(inputs, outputs) {
	outputs.add("syllTable", "", false, Packages.ca.phon.query.report.datasource.DefaultTableDataSource);
}

function getStructure(ipa) {
	var structure = "";

	for(var i = 0; i < ipa.length(); i++) {
		var ele = ipa.elementAt(i);

		if(ele.featureSet.hasFeature("glottal")) {
			structure += "H";
		} else if(ele.featureSet.hasFeature("glide")) {
			structure += "G";
		} else if(ele.featureSet.hasFeature("c")) {
			structure += "C";
		} else if(ele.featureSet.hasFeature("v")) {
			structure += "V";
		} else {
			structure += ele.toString();
		}
	}

	return structure;
}

function tableOp(context, table) {
	var syllTable = new Packages.ca.phon.query.report.datasource.DefaultTableDataSource();

	// setup columns
	syllTable.setColumnTitle(0, "Session");
	syllTable.setColumnTitle(1, "Record");
	syllTable.setColumnTitle(2, "Syllable");
	syllTable.setColumnTitle(3, "Structure");

	for(var row = 0; row < table.rowCount; row++) {
		var tableData = table.getRow(row);

		var ipa = (new IPATranscriptBuilder()).append(table.getValueAt(row, "Actual Syllabification (Word)")).toIPATranscript();
		var sylls = ipa.syllables();


		for(var syllIdx = 0; syllIdx < sylls.size(); syllIdx++) {
			var syll = sylls.get(syllIdx);

			var rowData = [];
			rowData[0] = table.getValueAt(row, 0);
			rowData[1] = table.getValueAt(row, "Record #");
			rowData[2] = syll;
			rowData[3] = getStructure(syll);
			syllTable.addRow(rowData);
		}
	}

	context.put("syllTable", syllTable);
}
]]></oga:property>
                                                </oga:settings>
                                                <oga:meta x="204" y="15"/>
                                            </extensions>
                                        </node>
                                        <ogcn:macro id="684cc01e2ed1412d" name="Syllable Strucutre (Total)" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                            <graph id="17807ca7">
                                                <node id="dd7d81af6d2f4630" name="obj" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="455" y="439"/>
                                                    </extensions>
                                                </node>
                                                <node id="1c8fd343a054504" name="speaker" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="455" y="439"/>
                                                    </extensions>
                                                </node>
                                                <node id="c54cc3b7eb574267" type="class:ca.phon.app.opgraph.nodes.table.InventoryNode">
                                                    <extensions>
                                                        <opqry:inventoryoptions>
                                                            <opqry:column caseSensitive="false" column="Structure" ignoreDiacritics="true"/>
                                                        </opqry:inventoryoptions>
                                                        <oga:settings/>
                                                        <oga:meta x="405" y="15"/>
                                                    </extensions>
                                                </node>
                                                <node id="852f542449274b43" name="DefaultTableDataSource" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="397" y="147"/>
                                                    </extensions>
                                                </node>
                                                <ogcn:macro id="e5332eb291a242a1" name="Setup Buffer Name" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                                    <graph id="f742aa0">
                                                        <node id="b163b08ebfc4480e" name="StringBuffer#&lt;init&gt;(String)" type="class:ca.gedge.opgraph.nodes.reflect.ConstructorNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.classMember"><![CDATA[<init>(java.lang.String)]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="15" y="15">
                                                                    <oga:default for="arg1" type="java.lang.String"/>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <node id="24203fea9b024c1c" name="Participant" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="15" y="146"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="bdea3a83a0d44976" name="StringBuffer#append(String)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[append(java.lang.String)]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="256" y="15"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="29919fa57a00467d" name="StringBuffer#toString()" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[toString()]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="507" y="15"/>
                                                            </extensions>
                                                        </node>
                                                        <link dest="29919fa57a00467d" destField="obj" source="bdea3a83a0d44976" sourceField="value"/>
                                                        <link dest="bdea3a83a0d44976" destField="obj" source="b163b08ebfc4480e" sourceField="value"/>
                                                        <link dest="bdea3a83a0d44976" destField="arg1" source="24203fea9b024c1c" sourceField="name"/>
                                                        <extensions>
                                                            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                                        </extensions>
                                                    </graph>
                                                    <ogcn:published_input field="obj" name="speaker" ref="24203fea9b024c1c"/>
                                                    <ogcn:published_input field="arg1" name="arg1" ref="b163b08ebfc4480e"/>
                                                    <ogcn:published_output field="value" name="value" ref="29919fa57a00467d"/>
                                                    <extensions>
                                                        <oga:meta x="640" y="227">
                                                            <oga:default for="arg1" type="java.lang.String">Syllable Structure_</oga:default>
                                                        </oga:meta>
                                                    </extensions>
                                                </ogcn:macro>
                                                <node id="76f5ad011f664938" name="Add Frequency Column" type="class:ca.phon.app.opgraph.nodes.table.TableScriptNode">
                                                    <input name="total" optional="false"/>
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	inputs.add("total", "", false, false);
}

function tableOp(context, table) {
	var total = context.get("total");
	var colIdx = table.columnCount;
	table.setColumnTitle(colIdx, "%");

	for(var row = 0; row < table.rowCount; row++) {
		var rowData = table.getRow(row);
		var count = rowData[1];
		var freq = (count / total) * 100.0;

		rowData[2] = freq;
	}
}
]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="558" y="15"/>
                                                    </extensions>
                                                </node>
                                                <node id="b70c7cd2b06d413f" type="class:ca.phon.app.opgraph.nodes.table.SortNode">
                                                    <extensions>
                                                        <opqry:sortoptions>
                                                            <opqry:sortBy column="Structure" order="ascending" type="plain"/>
                                                        </opqry:sortoptions>
                                                        <oga:settings/>
                                                        <oga:meta x="759" y="15"/>
                                                    </extensions>
                                                </node>
                                                <node id="71725903029f43cb" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                    <input name="data" optional="false">Data to print</input>
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="dataTemplate"><![CDATA[$DATA]]></oga:property>
                                                            <oga:property key="showText"><![CDATA[false]]></oga:property>
                                                            <oga:property key="showTable"><![CDATA[true]]></oga:property>
                                                            <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="858" y="127"/>
                                                    </extensions>
                                                </node>
                                                <ogcn:macro id="3b2e84297c254d34" name="Add to Report Template" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                                    <graph id="7ff3b027">
                                                        <node id="19bb4da2b4f64723" name="Set Caption" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                            <input name="data" optional="false">Data to print</input>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="dataTemplate"><![CDATA[
#set($caption = "<h3>Syllable Structure : $DATA</h3>")
]]></oga:property>
                                                                    <oga:property key="showText"><![CDATA[true]]></oga:property>
                                                                    <oga:property key="showTable"><![CDATA[false]]></oga:property>
                                                                    <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="51" y="48">
                                                                    <oga:default for="buffer" type="java.lang.String">Report Template</oga:default>
                                                                    <oga:default for="append" type="java.lang.Boolean">true</oga:default>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <node id="64c1a314fab04932" name="Add to Template" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                            <input name="data" optional="false">Data to print</input>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="dataTemplate"><![CDATA[
#set($tableName = "$DATA")
#if($tables.containsKey($tableName))
#set($table = $tables.get($tableName))
#printTableWithIdAndCaption( $table $tableName $caption [] )
#else
$caption

No Results
#end
]]></oga:property>
                                                                    <oga:property key="showText"><![CDATA[true]]></oga:property>
                                                                    <oga:property key="showTable"><![CDATA[false]]></oga:property>
                                                                    <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="54" y="177">
                                                                    <oga:default for="buffer" type="java.lang.String">Report Template</oga:default>
                                                                    <oga:default for="append" type="java.lang.Boolean">true</oga:default>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <extensions>
                                                            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                                        </extensions>
                                                    </graph>
                                                    <ogcn:published_input field="data" name="speaker" ref="19bb4da2b4f64723"/>
                                                    <ogcn:published_input field="data" name="bufferName" ref="64c1a314fab04932"/>
                                                    <extensions>
                                                        <oga:meta x="1025" y="141"/>
                                                    </extensions>
                                                </ogcn:macro>
                                                <link dest="b70c7cd2b06d413f" destField="table" source="76f5ad011f664938" sourceField="table"/>
                                                <link dest="71725903029f43cb" destField="data" source="b70c7cd2b06d413f" sourceField="table"/>
                                                <link dest="e5332eb291a242a1" destField="speaker" source="1c8fd343a054504" sourceField="obj"/>
                                                <link dest="3b2e84297c254d34" destField="speaker" source="1c8fd343a054504" sourceField="obj"/>
                                                <link dest="76f5ad011f664938" destField="total" source="852f542449274b43" sourceField="rowCount"/>
                                                <link dest="852f542449274b43" destField="obj" source="dd7d81af6d2f4630" sourceField="obj"/>
                                                <link dest="71725903029f43cb" destField="buffer" source="e5332eb291a242a1" sourceField="value"/>
                                                <link dest="3b2e84297c254d34" destField="bufferName" source="71725903029f43cb" sourceField="buffer"/>
                                                <link dest="76f5ad011f664938" destField="table" source="c54cc3b7eb574267" sourceField="table"/>
                                                <link dest="c54cc3b7eb574267" destField="table" source="dd7d81af6d2f4630" sourceField="obj"/>
                                            </graph>
                                            <ogcn:published_input field="obj" name="speaker" ref="1c8fd343a054504"/>
                                            <ogcn:published_input field="obj" name="obj" ref="dd7d81af6d2f4630"/>
                                            <extensions>
                                                <oga:meta x="419" y="47"/>
                                            </extensions>
                                        </ogcn:macro>
                                        <ogcn:macro id="35a1ce1ce3f47b2" name="Syllable Strucutre (by Session)" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                            <graph id="3782704">
                                                <node id="cc1f1a6078704ece" name="table" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.query.report.datasource.DefaultTableDataSource]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="15" y="15"/>
                                                    </extensions>
                                                </node>
                                                <node id="4b8130f9f3964166" name="speaker" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="15" y="390"/>
                                                    </extensions>
                                                </node>
                                                <node id="613c04ac4b434551" type="class:ca.phon.app.opgraph.nodes.table.InventoryNode">
                                                    <extensions>
                                                        <opqry:inventoryoptions>
                                                            <opqry:groupBy caseSensitive="false" column="Session" ignoreDiacritics="true"/>
                                                            <opqry:column caseSensitive="false" column="Structure" ignoreDiacritics="true"/>
                                                        </opqry:inventoryoptions>
                                                        <oga:settings/>
                                                        <oga:meta x="204" y="15"/>
                                                    </extensions>
                                                </node>
                                                <node id="f19dcba5366c4a9a" name="Split Table" type="class:ca.phon.app.opgraph.nodes.table.TableScriptNode">
                                                    <output name="keySet" type="java.util.Set">Unique values from given column name</output>
                                                    <output name="tableMap" type="java.util.Map">Map of key -&gt; table values</output>
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="columnName"><![CDATA[Session]]></oga:property>
                                                            <oga:property key="__script"><![CDATA[/*
 * Phon - An open source tool for research in phonology.
 * Copyright (C) 2005 - 2017, Gregory Hedlund <ghedlund@mun.ca> and Yvan Rose <yrose@mun.ca>
 * Dept of Linguistics, Memorial University <https://phon.ca>
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

 /**
  * Split Table.js
  *
  * Script for use with ca.phon.app.opgraph.nodes.table.TableScriptNode
  *
  * Split table based on column name.  Two outputs
  * are produced, a set of keys from the column used in the filter  and a
  * map of key -> table values.
  */

var columnParamInfo = {
	"id": "columnName",
	"title": "Column Name",
	"def": "",
	"prompt": "Enter column name"
}

function setup_params(params) {
	var columnParam = new StringScriptParam(
		columnParamInfo.id,
		columnParamInfo.title,
		columnParamInfo.def);
	columnParam.setPrompt(columnParamInfo.prompt);
	params.add(columnParam);
}

// add custom inputs/outputs here
function init(inputs, outputs) {
	outputs.add("keySet", "Unique values from given column name", false, java.util.Set);
	outputs.add("tableMap", "Map of key -> table values", false, java.util.Map);
}

/*
 * Create a new table with the same schema as the inputTable
 */
function setupTable(inputTable) {
    var table = new DefaultTableDataSource();
    for(c = 0; c < inputTable.columnCount; c++) {
	    var colTitle = inputTable.getColumnTitle(c);
	    table.setColumnTitle(c, colTitle);
	}
	return table;
}

// run operation on table
function tableOp(context, table) {
	// find table column index
	col = table.getColumnIndex(columnName);

	if(col < 0)
		return; // column not found

	var tableMap = new java.util.LinkedHashMap();

	for(row = 0; row < table.rowCount; row++) {
	    // use string value as row key
		var rowKey = Packages.ca.phon.formatter.FormatterUtil.format(table.getValueAt(row, col));

		var keyTable = tableMap.get(rowKey);
		if(keyTable == null) {
		    keyTable = setupTable(table);
		    tableMap.put(rowKey, keyTable);
		}
		keyTable.addRow(table.getRow(row));
	}

	context.put("keySet", tableMap.keySet());
	context.put("tableMap", tableMap);
}
]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="148" y="168"/>
                                                    </extensions>
                                                </node>
                                                <ogcn:macro id="e53556ca421845f1" name="Setup Buffer Name" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                                    <graph id="3a216c8d">
                                                        <node id="e5b2916d6a164fda" name="StringBuffer#&lt;init&gt;(String)" type="class:ca.gedge.opgraph.nodes.reflect.ConstructorNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.classMember"><![CDATA[<init>(java.lang.String)]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ConstructorNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="15" y="15">
                                                                    <oga:default for="arg1" type="java.lang.String"/>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <node id="572560cce7a44543" name="Participant" type="class:ca.gedge.opgraph.nodes.reflect.ObjectNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.ObjectNode.declaredClass"><![CDATA[ca.phon.session.Participant]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="15" y="146"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="bdbbcfb2701e460f" name="StringBuffer#append(String)" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[append(java.lang.String)]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="256" y="15"/>
                                                            </extensions>
                                                        </node>
                                                        <node id="bb50d5f7fb0f4c61" name="StringBuffer#toString()" type="class:ca.gedge.opgraph.nodes.reflect.MethodNode">
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.classMember"><![CDATA[toString()]]></oga:property>
                                                                    <oga:property key="ca.gedge.opgraph.nodes.reflect.MethodNode.declaredClass"><![CDATA[java.lang.StringBuffer]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="507" y="15"/>
                                                            </extensions>
                                                        </node>
                                                        <link dest="bb50d5f7fb0f4c61" destField="obj" source="bdbbcfb2701e460f" sourceField="value"/>
                                                        <link dest="bdbbcfb2701e460f" destField="obj" source="e5b2916d6a164fda" sourceField="value"/>
                                                        <link dest="bdbbcfb2701e460f" destField="arg1" source="572560cce7a44543" sourceField="name"/>
                                                        <extensions>
                                                            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                                        </extensions>
                                                    </graph>
                                                    <ogcn:published_input field="obj" name="speaker" ref="572560cce7a44543"/>
                                                    <ogcn:published_input field="arg1" name="arg1" ref="e5b2916d6a164fda"/>
                                                    <ogcn:published_output field="value" name="value" ref="bb50d5f7fb0f4c61"/>
                                                    <extensions>
                                                        <oga:meta x="205" y="390">
                                                            <oga:default for="arg1" type="java.lang.String">Syllable Structure (by Session)_</oga:default>
                                                        </oga:meta>
                                                    </extensions>
                                                </ogcn:macro>
                                                <node id="57326313bbb64fc5" name="Add Frequency Columns" type="class:ca.phon.app.opgraph.nodes.table.TableScriptNode">
                                                    <input name="tableMap" optional="false"/>
                                                    <output name="freqTable" type="ca.phon.query.report.datasource.DefaultTableDataSource"/>
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="__script"><![CDATA[function init(inputs, outputs) {
	inputs.add("tableMap", "", false, false);

	outputs.add("freqTable", "", false, Packages.ca.phon.query.report.datasource.DefaultTableDataSource);
}

function tableOp(context, table) {
	var tableMap = context.get("tableMap");
	var freqTable = new Packages.ca.phon.query.report.datasource.DefaultTableDataSource();

	// setup columns
	freqTable.setColumnTitle(0, table.getColumnTitle(0));

	var colIdx = 1;
	for(var col = 1; col < table.columnCount; col++) {
		freqTable.setColumnTitle(colIdx++, table.getColumnTitle(col));
		freqTable.setColumnTitle(colIdx++, "% " + table.getColumnTitle(col));
	}

	for(var row = 0; row < table.rowCount; row++) {
		var rowData = [];
		var tableData = table.getRow(row);

		rowData[0] = tableData[0];
		colIdx = 1;

		for(var col = 1; col < table.columnCount; col++) {
			var total = tableMap.get(table.getColumnTitle(col)).rowCount;
			var count = tableData[col];
			var freq = (count / total) * 100.0;

			rowData[colIdx++] = new java.lang.Integer(count);
			rowData[colIdx++] = freq;
		}

		freqTable.addRow(rowData);
	}

	context.put("freqTable", freqTable);
}
]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="357" y="36"/>
                                                    </extensions>
                                                </node>
                                                <node id="f78e290a3dba494a" type="class:ca.phon.app.opgraph.nodes.table.SortNode">
                                                    <extensions>
                                                        <opqry:sortoptions>
                                                            <opqry:sortBy column="Structure" order="ascending" type="plain"/>
                                                        </opqry:sortoptions>
                                                        <oga:settings/>
                                                        <oga:meta x="558" y="15"/>
                                                    </extensions>
                                                </node>
                                                <node id="2df747b86f8e4b35" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                    <input name="data" optional="false">Data to print</input>
                                                    <extensions>
                                                        <oga:settings>
                                                            <oga:property key="dataTemplate"><![CDATA[$DATA]]></oga:property>
                                                            <oga:property key="showText"><![CDATA[false]]></oga:property>
                                                            <oga:property key="showTable"><![CDATA[true]]></oga:property>
                                                            <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                        </oga:settings>
                                                        <oga:meta x="711" y="15"/>
                                                    </extensions>
                                                </node>
                                                <ogcn:macro id="514424fd9a2f4aea" name="Add to Report Template" type="ca.gedge.opgraph.nodes.general.MacroNode">
                                                    <graph id="6b090eae">
                                                        <node id="875192a525214bea" name="Set Caption" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                            <input name="data" optional="false">Data to print</input>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="dataTemplate"><![CDATA[
#set($caption = "<h3>Syllable Structure (by Session) : $DATA</h3>")
]]></oga:property>
                                                                    <oga:property key="showText"><![CDATA[true]]></oga:property>
                                                                    <oga:property key="showTable"><![CDATA[false]]></oga:property>
                                                                    <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="51" y="48">
                                                                    <oga:default for="buffer" type="java.lang.String">Report Template</oga:default>
                                                                    <oga:default for="append" type="java.lang.Boolean">true</oga:default>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <node id="4e15fc035a4a476b" name="Add to Template" type="class:ca.phon.app.opgraph.nodes.log.PrintBufferNode">
                                                            <input name="data" optional="false">Data to print</input>
                                                            <extensions>
                                                                <oga:settings>
                                                                    <oga:property key="dataTemplate"><![CDATA[
#set($tableName = "$DATA")
#if($tables.containsKey($tableName))
#set($table = $tables.get($tableName))
#printTableWithIdAndCaption( $table $tableName $caption [] )
#else
$caption

No Results
#end
]]></oga:property>
                                                                    <oga:property key="showText"><![CDATA[true]]></oga:property>
                                                                    <oga:property key="showTable"><![CDATA[false]]></oga:property>
                                                                    <oga:property key="showHTML"><![CDATA[false]]></oga:property>
                                                                </oga:settings>
                                                                <oga:meta x="54" y="177">
                                                                    <oga:default for="buffer" type="java.lang.String">Report Template</oga:default>
                                                                    <oga:default for="append" type="java.lang.Boolean">true</oga:default>
                                                                </oga:meta>
                                                            </extensions>
                                                        </node>
                                                        <extensions>
                                                            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                                        </extensions>
                                                    </graph>
                                                    <ogcn:published_input field="data" name="speaker" ref="875192a525214bea"/>
                                                    <ogcn:published_input field="data" name="bufferName" ref="4e15fc035a4a476b"/>
                                                    <extensions>
                                                        <oga:meta x="791" y="203"/>
                                                    </extensions>
                                                </ogcn:macro>
                                                <link dest="2df747b86f8e4b35" destField="data" source="f78e290a3dba494a" sourceField="table"/>
                                                <link dest="e53556ca421845f1" destField="speaker" source="4b8130f9f3964166" sourceField="obj"/>
                                                <link dest="514424fd9a2f4aea" destField="speaker" source="4b8130f9f3964166" sourceField="obj"/>
                                                <link dest="2df747b86f8e4b35" destField="buffer" source="e53556ca421845f1" sourceField="value"/>
                                                <link dest="514424fd9a2f4aea" destField="bufferName" source="2df747b86f8e4b35" sourceField="buffer"/>
                                                <link dest="613c04ac4b434551" destField="table" source="cc1f1a6078704ece" sourceField="obj"/>
                                                <link dest="f19dcba5366c4a9a" destField="table" source="cc1f1a6078704ece" sourceField="obj"/>
                                                <link dest="57326313bbb64fc5" destField="tableMap" source="f19dcba5366c4a9a" sourceField="tableMap"/>
                                                <link dest="57326313bbb64fc5" destField="table" source="613c04ac4b434551" sourceField="table"/>
                                                <link dest="f78e290a3dba494a" destField="table" source="57326313bbb64fc5" sourceField="freqTable"/>
                                                <extensions>
                                                    <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                                </extensions>
                                            </graph>
                                            <ogcn:published_input field="obj" name="speaker" ref="4b8130f9f3964166"/>
                                            <ogcn:published_input field="obj" name="obj" ref="cc1f1a6078704ece"/>
                                            <extensions>
                                                <oga:meta x="423" y="170"/>
                                            </extensions>
                                        </ogcn:macro>
                                        <link dest="c384e25c504d4c62" destField="table" source="824d21d3ab9d4084" sourceField="obj"/>
                                        <link dest="684cc01e2ed1412d" destField="obj" source="c384e25c504d4c62" sourceField="syllTable"/>
                                        <link dest="684cc01e2ed1412d" destField="speaker" source="fb1e6fef26f74e10" sourceField="obj"/>
                                        <link dest="35a1ce1ce3f47b2" destField="obj" source="c384e25c504d4c62" sourceField="syllTable"/>
                                        <link dest="35a1ce1ce3f47b2" destField="speaker" source="fb1e6fef26f74e10" sourceField="obj"/>
                                        <extensions>
                                            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                        </extensions>
                                    </graph>
                                    <ogcn:published_input field="obj" name="table" ref="824d21d3ab9d4084"/>
                                    <ogcn:published_input field="obj" name="obj" ref="fb1e6fef26f74e10"/>
                                    <extensions>
                                        <oga:meta x="262" y="836"/>
                                    </extensions>
                                </ogcn:macro>
                                <link dest="f6d359e6977e46a1" destField="speaker" source="e220c434a5dc4e49" sourceField="obj"/>
                                <link dest="9cebe3edfb544520" destField="tableMap" source="c9f8bf3e770440a7" sourceField="obj"/>
                                <link dest="f6d359e6977e46a1" destField="result total" source="d627ef0e20f44a59" sourceField="obj"/>
                                <link dest="f6d359e6977e46a1" destField="table" source="851b03fbc2c949d1" sourceField="obj"/>
                                <link dest="9cebe3edfb544520" destField="speaker" source="e220c434a5dc4e49" sourceField="obj"/>
                                <link dest="f6d359e6977e46a1" destField="tableMap" source="c9f8bf3e770440a7" sourceField="obj"/>
                                <link dest="3907fb884c964209" destField="obj" source="e220c434a5dc4e49" sourceField="obj"/>
                                <link dest="3907fb884c964209" destField="table" source="851b03fbc2c949d1" sourceField="obj"/>
                                <link dest="79938a8481a14af6" destField="speaker" source="e220c434a5dc4e49" sourceField="obj"/>
                                <link dest="79938a8481a14af6" destField="data" source="851b03fbc2c949d1" sourceField="obj"/>
                                <link dest="93fded79dfac4152" destField="tableMap" source="c9f8bf3e770440a7" sourceField="obj"/>
                                <link dest="93fded79dfac4152" destField="speaker" source="e220c434a5dc4e49" sourceField="obj"/>
                                <link dest="93fded79dfac4152" destField="table" source="851b03fbc2c949d1" sourceField="obj"/>
                                <link dest="93fded79dfac4152" destField="result total" source="851b03fbc2c949d1" sourceField="rowCount"/>
                                <link dest="4406626199ea417d" destField="table" source="851b03fbc2c949d1" sourceField="obj"/>
                                <link dest="4406626199ea417d" destField="obj" source="e220c434a5dc4e49" sourceField="obj"/>
                                <link dest="4b943e61b1df4c55" destField="table" source="851b03fbc2c949d1" sourceField="obj"/>
                                <link dest="4b943e61b1df4c55" destField="obj" source="e220c434a5dc4e49" sourceField="obj"/>
                                <extensions>
                                    <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                                </extensions>
                            </graph>
                            <ogcn:published_input field="obj" name="speaker" ref="e220c434a5dc4e49"/>
                            <ogcn:published_input field="obj" name="table" ref="851b03fbc2c949d1"/>
                            <ogcn:published_input field="obj" name="tableMap" ref="c9f8bf3e770440a7"/>
                            <ogcn:published_input field="obj" name="result total" ref="d627ef0e20f44a59"/>
                            <extensions>
                                <oga:meta x="625" y="65"/>
                            </extensions>
                        </ogcn:macro>
                        <link dest="210413a00354d53" destField="table" source="d8cd4d36cd854048" sourceField="obj"/>
                        <link dest="c93bcac22d4c4174" destField="tableMap" source="210413a00354d53" sourceField="tableMap"/>
                        <link dest="c93bcac22d4c4174" destField="result total" source="d8cd4d36cd854048" sourceField="rowCount"/>
                        <link dest="c93bcac22d4c4174" destField="table" source="d8cd4d36cd854048" sourceField="obj"/>
                        <link dest="c93bcac22d4c4174" destField="speaker" source="daca91ffe7994ca6" sourceField="obj"/>
                        <extensions>
                            <oga:notes>
                                <oga:note color="0xffff96" height="795" title="Inputs" width="303" x="6" y="19"/>
                            </oga:notes>
                            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                        </extensions>
                    </graph>
                    <ogcn:published_input field="obj" name="tableMap" ref="d8cd4d36cd854048"/>
                    <ogcn:published_input field="obj" name="speaker" ref="daca91ffe7994ca6"/>
                    <extensions>
                        <oga:meta x="775" y="115"/>
                    </extensions>
                </ogcn:macro>
                <link dest="c9704de2ca654250" destField="speaker" source="9ef133c073f34fe7" sourceField="obj"/>
                <link dest="c9704de2ca654250" destField="tableMap" source="f70f3ab8ece24656" sourceField="obj"/>
                <link dest="9ef133c073f34fe7" destField="obj" source="c6ca3973b9a4681" sourceField="obj"/>
                <link dest="d398fbf5bb384062" destField="tableMap" source="c9704de2ca654250" sourceField="table"/>
                <link dest="d398fbf5bb384062" destField="enabled" source="c9704de2ca654250" sourceField="exists"/>
                <link dest="d398fbf5bb384062" destField="speaker" source="9ef133c073f34fe7" sourceField="obj"/>
                <link dest="c816afbf8fbb4ddf" destField="data" source="b08bb3687c614edb" sourceField="value"/>
                <extensions>
                    <oga:notes>
                        <oga:note color="0xffff96" height="673" title="Inputs" width="255" x="22" y="139"/>
                    </oga:notes>
                    <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
                </extensions>
            </graph>
            <ogcn:published_input field="obj" name="obj" ref="f70f3ab8ece24656"/>
            <ogcn:published_input field="arg1" name="arg1" ref="b08bb3687c614edb"/>
            <extensions>
                <oga:settings>
                    <oga:property key="ca.gedge.opgraph.nodes.reflect.IterableClassNode.className"><![CDATA[java.util.ArrayList]]></oga:property>
                </oga:settings>
                <oga:meta x="1140" y="282">
                    <oga:default for="arg1" type="java.lang.String">Words</oga:default>
                </oga:meta>
            </extensions>
        </ogcn:macro>
        <link dest="29ac654b" destField="project" source="55f4fba4" sourceField="obj"/>
        <link dest="29ac654b" destField="sessions" source="1ae2322c" sourceField="obj"/>
        <link dest="61e6ae5ee8ed4084" destField="project" source="29ac654b" sourceField="project"/>
        <link dest="d3211092b5054a20" destField="table" source="46ae9c22" sourceField="trueTable"/>
        <link dest="61208600" destField="collection" source="3da0e5db" sourceField="obj"/>
        <link dest="61208600" destField="obj" source="d3211092b5054a20" sourceField="tableMap"/>
        <link dest="61e6ae5ee8ed4084" destField="results" source="29ac654b" sourceField="results"/>
        <link dest="41a5af28" destField="parameters" source="dc596f57c3774064" sourceField="parameters"/>
        <link dest="46ae9c22" destField="table" source="61e6ae5ee8ed4084" sourceField="table"/>
        <link dest="67dc55420a274067" destField="table" source="46ae9c22" sourceField="falseTable"/>
        <link dest="5dcadfd293fc444b" destField="obj" source="67dc55420a274067" sourceField="tableMap"/>
        <link dest="5dcadfd293fc444b" destField="collection" source="3da0e5db" sourceField="obj"/>
        <extensions>
            <opqry:nodewizard type="ca.phon.app.opgraph.analysis.AnalysisWizardExtension">
                <opqry:info format="html" title="Vocalization">
                    <opqry:message/>
                </opqry:info>
                <opqry:report-template name="Report Prefix"/>
                <opqry:report-template name="Report Suffix"/>
            </opqry:nodewizard>
            <nes:settings type="ca.phon.app.opgraph.analysis.AnalysisOpGraphEditorModel"/>
        </extensions>
    </graph>
</opgraph>
