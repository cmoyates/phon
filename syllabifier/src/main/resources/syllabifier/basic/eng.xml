<?xml version="1.0" encoding="UTF-8"?>
<!--
Phon - An open source tool for research in phonology.
Copyright (C) 2008 The Phon Project, Memorial University <http://phon.ling.mun.ca>

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
-->
<SyllabifierDef xmlns="https://www.phon.ca/ns/syllabifier"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="https://www.phon.ca/ns/syllabifier ../../xml/xsd/syllabifier.xsd"
    name="English" language="eng">
    <SonorityScale>
        <!-- Plosive,Fricative,Affricate - 0 -->
        <SonorityClass>
            <phonex>[{affricate}{stop,-nasal}{fricative}]</phonex>
            <sonorityValue>0</sonorityValue>
        </SonorityClass>

        <!-- Nasal - 1 -->
        <SonorityClass>
            <phonex>{nasal}</phonex>
            <sonorityValue>1</sonorityValue>
        </SonorityClass>

        <!-- Liquid - 2 -->
        <SonorityClass>
            <phonex>{liquid}</phonex>
            <sonorityValue>2</sonorityValue>
        </SonorityClass>

        <!-- Glide - 3 -->
        <SonorityClass>
            <phonex>{g}</phonex>
            <sonorityValue>3</sonorityValue>
        </SonorityClass>

        <!-- Vowel - 4 -->
        <SonorityClass>
            <phonex>{v}</phonex>
            <sonorityValue>4</sonorityValue>
        </SonorityClass>

    </SonorityScale>

    <Stage name="MarkNuclei">
        <phonex>(D=j{v})</phonex>
        <phonex>(D={v,-long}[É™{g,-stop,-fricative,-affricate,-liquid}{v,high,lax}])</phonex>
        <phonex>(N={v}:U)</phonex>
        <phonex>(N='.*[\u0329].*')</phonex>

        <group name="D" mark="Diphthong"/>
        <group name="N" mark="Nucleus"/>
    </Stage>

    <Stage name="MarkOnset">
        <phonex>(O=\c:U).:N</phonex>
        <phonex>.:sctype("-O")?(O={g}:N).:N</phonex>
        <phonex>^(O=j:N)</phonex>

        <group name="O" mark="Onset"/>
    </Stage>

    <Stage name="MaxOnset">
        <phonex>(O={c,-strident}:U).:O:mdc("2","false")</phonex>
        <phonex>(O={strident, -anterior}:U).:O:mdc("2","false")</phonex>

        <group name="O" mark="Onset"/>
    </Stage>

    <Stage name="MarkCoda">
        <phonex>.:N(C=\c:U)</phonex>

        <group name="C" mark="Coda"/>
    </Stage>

    <Stage name="MaxCoda">
        <phonex>.:C(C=\c:U):mdc("-1","false")</phonex>

        <group name="C" mark="Coda"/>
    </Stage>

    <Stage name="Fix Branching Codas">
        <phonex>.:N(C={obs,-cor}:U)</phonex>

        <group name="C" mark="Coda"/>
    </Stage>

    <Stage name="MarkLA">
        <phonex>$(LA={anterior,strident,voiceless}:U)</phonex>
        <phonex>.:sctype("Coda|SyllableStressMarker|SyllableBoundaryMarker|Nucleus")(LA={anterior,strident,voiceless}:U).:O</phonex>

        <group name="LA" mark="Left Appendix"/>
    </Stage>

    <Stage name="MarkRA">
        <phonex>.:C(RA={cor}:U)</phonex>

        <group name="RA" mark="Right Appendix"/>
    </Stage>

    <Stage name="MaxRA">
        <phonex>.:R(RA={cor}:U+)</phonex>

        <group name="RA" mark="Right Appendix"/>
    </Stage>

    <Stage name="MarkOEHS">
        <phonex>(O=\c:U)</phonex>

        <group name="O" mark="OEHS"/>
    </Stage>

</SyllabifierDef>
