<?xml version="1.0" encoding="UTF-8"?>
<!--
 Phon - An open source tool for research in phonology.
 Copyright (C) 2008 The Phon Project, Memorial University <http://phon.ling.mun.ca>
 
 This program is free software: you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation, either version 3 of the License, or
 (at your option) any later version.
 
 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.
 
 You should have received a copy of the GNU General Public License
 along with this program.  If not, see <http://www.gnu.org/licenses/>.
-->
<SyllabifierDef xmlns="https://www.phon.ca/ns/syllabifier"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="https://www.phon.ca/ns/syllabifier ../../xml/xsd/syllabifier.xsd"
    name="French (simple)" language="fra-simple">
    
    
    <SonorityScale>
        <SonorityClass>
            <phonex>{obs,-uvular,-fri}</phonex>
            <sonorityValue>0</sonorityValue>
        </SonorityClass>
        <SonorityClass>
            <phonex>{c,nas}</phonex>
            <sonorityValue>1</sonorityValue>
        </SonorityClass>
        <SonorityClass>
            <phonex>[{liq}{uvular,fri}]</phonex>
            <sonorityValue>2</sonorityValue>
        </SonorityClass>
        <SonorityClass>
            <phonex>\g</phonex>
            <sonorityValue>3</sonorityValue>
        </SonorityClass>
        <SonorityClass>
            <phonex>\v</phonex>
            <sonorityValue>4</sonorityValue>
        </SonorityClass>
    </SonorityScale>
    
    <Stage name="MarkNuclei">
        <phonex>(D=\g\v)</phonex>
        <phonex>(D=\v{v,high,lax})</phonex>
        <phonex>(N=\v)</phonex>
        
        <group name="D" mark="Diphthong"/>
        <group name="N" mark="Nucleus"/>
    </Stage>
    
    <Stage name="Final Consonant">
        <phonex>(E=\c:U$)</phonex>
        
        <group name="E" mark="OEHS"/>
    </Stage>
    
    <Stage name="MaxOEHS">
        <phonex>(E=\c:U)\c:E:mdc("2","false")</phonex>
        <group name="E" mark="OEHS"/>
    </Stage>
    
    <Stage name="MarkOnset">
        <phonex>(O=\c:U).:N</phonex>
        <phonex>.:sctype("-O")?(O=\g:N).:N</phonex>
        
        <group name="O" mark="Onset"/>
    </Stage>
    
    <Stage name="MaxOnset">
        <phonex>(O=\c:U)\c:O:mdc("2","false")</phonex>
        <group name="O" mark="Onset"/>
    </Stage>
    
    <Stage name="MarkCoda">
        <phonex>.:N(C=\c:U)</phonex>
        <group name="C" mark="Coda"/>
    </Stage>
    
    <Stage name="MarkLA">
        <phonex>\s?(LA={strident,voiceless}).:O</phonex>
        <phonex>^(LA={strident,voiceless}).:O</phonex>
        <phonex>.:C(LA={strident,voiceless}).:O</phonex>
        
        <group name="LA" mark="Left Appendix"/>
    </Stage>
    
    <Stage name="Fix p[sn]">
        <phonex>\s?(O=p)[sn]:O</phonex>
        <group name="O" mark="Onset"/>
    </Stage>
    
    <Stage name="Fiz gz">
        <phonex>\s?(O=[g\u0261])z:O</phonex>
        <group name="O" mark="Onset"/>
    </Stage>
    
    <Stage name="Make Simple">
        <phonex>(O=.:E+)</phonex>
        <phonex>(L=.:L+)</phonex>
        <phonex>(R=.:R+)</phonex>
        
        <group name="O" mark="Onset"/>
        <group name="L" mark="Onset"/>
        <group name="R" mark="Coda"/>
    </Stage>
    
</SyllabifierDef>
